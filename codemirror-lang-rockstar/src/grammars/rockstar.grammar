@external propSource highlighting from "./rockstar-highlight.js"

@top Program { EOS* block (EOB block)*
	| EOS* block EOF }

block { statement (EOS statement)* }

@skip { space | comment }

comment { LineComment | BlockComment }

statement {	ListenStatement	| OutputStatement }

ListenStatement { Listen To Variable }
OutputStatement { Print Expression }
Boolean { True | False }

// @precedence { comparator, equality, comparison, addition, Number, unary, ProperVariable, CommonVariable, SimpleVariable, Pronoun }

Expression {  Binary }

Binary { Primary Operator Binary }

Operator { LogicOperator | ArithmeticOperator | CompareOperator }

Primary {
	String | Number | Lookup
	//| constant | function_call | delist
}

Lookup { Variable } // (At index)* }

Variable { ProperVariable | CommonVariable | SimpleVariable | Pronoun }

@external tokens Variables from "../tokenizers/rockstar-tokenizer" { ProperVariable, CommonVariable, SimpleVariable, Pronoun }
@external tokens Operators from "../tokenizers/rockstar-tokenizer" { LogicOperator, CompareOperator, ArithmeticOperator }

@external tokens Keywords from "../tokenizers/rockstar-tokenizer" {
	Above, And, Around, As, At, Back, Be, Break, Build, Call, Cast,
	Continue, Debug, Divided, Down, Else, Empty, End, Exactly, False,
	Great, His, If, Into, Is, Isnt, Join, Knock, Less, Let, Like,
	Listen, Minus, More, Mysterious, Non, Nor, Not, Now, Null, Or, Over,
	Plus,  Pop, Print, Push, Put, Return, Says, Small, Split, Takes,
	Taking, Than, The, Then, Times, To, True, Turn, Under, Until, Up,
	Using, While,With,	Write
}

@tokens {
	oxford_comma { ", " And }
	nacton { "n'" | "'n'" }
	xls { "," ("&")? | nacton | "&" | "," }
	vls { And | xls }
	als { oxford_comma | als }
	PoeticLiteral { ![\n]* "\n" }
	@precedence { EOS EOB }
	EOB { EOS EOS+ }
	EOS { "\r"? "\n" }
	LineComment { "#" ![\n]* "\n" }
	String { '"' (!["\\] | "\\" _)* '"' }
	Number { (@digit+ "." | ".")? @digit+ }
	BlockComment { "(" ![\)]* ")" | "{" ![\}]* "}" | "[" ![\]]* "]" }
	space { $[ \t]+ }
	EOF { @eof }
}

@detectDelim
