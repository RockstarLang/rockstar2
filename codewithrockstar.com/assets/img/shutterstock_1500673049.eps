%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1908.m40.i030.n017.F.c06.1273240621 Black and white guitars. Acoustic and electric guitar outline musical instruments Vector isolated set.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Nout
%%CreationDate: 9/10/2019
%%BoundingBox: 0 0 4485 1346
%%HiResBoundingBox: 0 0 4485 1345.5000
%%CropBox: 0 0 4485 1345.5000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Black and white guitars. Acoustic and electric guitar outline musical instruments Vector isolated set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:headline>
            <rdf:Alt>
               <rdf:li>Black and white guitars. Acoustic and electric guitar outline musical instruments Vector isolated silhouette guitare doodle set</rdf:li>
            </rdf:Alt>
         </dc:headline>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Black and white guitars. Acoustic and electric guitar outline musical instruments Vector isolated silhouette guitare doodle set</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>black</rdf:li>
               <rdf:li>white</rdf:li>
               <rdf:li>guitars</rdf:li>
               <rdf:li>acoustic</rdf:li>
               <rdf:li>electric</rdf:li>
               <rdf:li>outline</rdf:li>
               <rdf:li>musical</rdf:li>
               <rdf:li>instruments</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>silhouette</rdf:li>
               <rdf:li>guitare</rdf:li>
               <rdf:li>doodle</rdf:li>
               <rdf:li>textures</rdf:li>
               <rdf:li>play</rdf:li>
               <rdf:li>draw</rdf:li>
               <rdf:li>grunge</rdf:li>
               <rdf:li>hand</rdf:li>
               <rdf:li>drawn</rdf:li>
               <rdf:li>sketch</rdf:li>
               <rdf:li>retro</rdf:li>
               <rdf:li>ink</rdf:li>
               <rdf:li>fretboard</rdf:li>
               <rdf:li>classical</rdf:li>
               <rdf:li>different</rdf:li>
               <rdf:li>music</rdf:li>
               <rdf:li>rock</rdf:li>
               <rdf:li>fender</rdf:li>
               <rdf:li>note</rdf:li>
               <rdf:li>ukulele</rdf:li>
               <rdf:li>icon</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>line</rdf:li>
               <rdf:li>logo</rdf:li>
               <rdf:li>bass</rdf:li>
               <rdf:li>stratocaster</rdf:li>
               <rdf:li>neck</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>drawing</rdf:li>
               <rdf:li>hard</rdf:li>
               <rdf:li>blues</rdf:li>
               <rdf:li>metal</rdf:li>
               <rdf:li>rockabilly</rdf:li>
               <rdf:li>band</rdf:li>
               <rdf:li>roll</rdf:li>
               <rdf:li>country</rdf:li>
               <rdf:li>simple</rdf:li>
               <rdf:li>art</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2019-05-18T09:11:40+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-09-10T18:12:28.168+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-05-18T09:11:39+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>80</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAUAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYqxzzx5+0DyZp9teau0jm8uEtbS1twrzSyP8AyqzIKIoLMSdh9GKu/L7znF508qWfmSHT&#xA;7jTba+MjW0F3xEjRK5VJKIWFHAqP4ihKrI8VdirsVdiqTan508naVeiw1TXdOsL4iotbm7ghlIpy&#xA;rwd1bpv0xVOcVdirEfzP/M7y/wDl15dXXNZSWaKS4jtoba34GV3kq3wh2QUVEZjv2xVlFleW17aQ&#xA;3drIJbedBJFIpqGVhUHFVbFXYq7FXYqxXyj+Z3k/zZf3OnaRcyHULSITT2lxDJbyheZjeiyqpb03&#xA;HFytQKrv8QxVlWKuxV2KuxV2KuxV2KvnHT9dvPM/562Op3N7dJo9rr11YaL6U0otx9V0+ZJUC19O&#xA;lxJbhz/N06GpVfR2KuxV8keez5m1H8wdX1eGe8g1vS7i9ttMXlKLi2hMqLbtGpI9NXguC60Uk89q&#xA;1Wir6wsZ5Lixt7iSNoZJokkeJ1KsjMoJVlO4IrSmKq+KvAP+cgPMmrT+aF0PTruaCy0nRrm/1ZYJ&#xA;3hV/rBoizBSoZY1t+dG8cVe/4q7FXzz520XXPM/5y3lpqjCGOxSGy0FQGZI4LuMM12isq8mZyyOR&#xA;0K0JIVcVe/2FjaWFjb2NnGsNpaRJBbwqKKkcahUUDwCimKq+KvmX802vfP35nT6F+kZrfQNK1PSd&#xA;NV4J3RYblpeUs6JUJ6/KYwK3E0NPDZV9NYq7FXx5+c3lnTtT86eatVnSG4ltZ79S73PrSBYdElli&#xA;BKrxQRzxqUjO4Pw9q4q+sPK8nq+WtJk9Qzc7K3b1mnW7L1iU8jcoAs1evqDZuvfFUzxV4B/zkB5W&#xA;1zUvN1jqM8CnQo7SGC2uBxYLOt4kriQlOUZYU2LMhUV+Hi1VWf8A5G6NrWj+QYbHU7f6rGtzPJps&#xA;JKlxaSvzRpFVV4s7s70JZqEFjyJAVegYq+ZP+cibPVNa89QWaX1xHbaYbGX0UkkREinmSOUj00i3&#xA;PLlX1HPw7cP2lXtn5Rahc6h+XOiXVzcPdTPFIpuJKlmWOZ0XrFbnZVAFUG3j1KrL8VfPv5qeVNX0&#xA;Tznb615X/c6wLk32lJGpb1Zrp+NxAwG5E0ruzDpRjXqaKvfrU3JtoTdKiXRRTOkTF4xJT4gjMELK&#xA;D0JUfLFVTFXyV+Y9trN/+aJ1w6ndJHpt9exGT1ZFCLbzRxwJGq20SAR8+nozcuPxGYbYq+pfL1xP&#xA;c6BplzPIZZ5rSCSWVqcmd41LMaJCKkn/AH2v+qOmKphirsVdiryny9+W+jaJ5/tI9PkcadpcklxZ&#xA;WEkpk9OWW1kTmS7NI1FndQX3/wArFXq2KuxV5N5osbBfzStyLZAbuazkvmCOfX+KKGPnQ8Dx4KNx&#xA;Wntir1nFXYq8v/Mv8ufLGpaob6WBkutZUxanIkjL6yRRrCqkE7D024nhTFXp6IqIqIOKqAFA6ADp&#xA;ireKvPfNDwL+Z+hNKU5LFEIlJAcmSWVdv3qV7f7rbFXoWKuxV5ld/lN5XXznDdQtLDJNqCa20XPm&#xA;DcRzLctUyOZCGmh5+1aDYUCr03FXYq8c/Mnyxo93+YWm288ZFprSRxajEkgQS+sz2r1U9eccgBp4&#xA;eNaqvYY444o1jjUJGgCoigBVUCgAA6AYquxVIfOjxx6QsklwtskchcyuWCjjE534kHtiqb6f/vBb&#xA;f8Yk/wCIjFVfFXnH5zWFtNZadcOgMiPJEzhWZvRYK7r8KSn7UancAVHXFXosUUUUSRRIscUahY41&#xA;AVVVRQAAbAAYquxVhXnCL/na/L86gcxcwISWK/CXeooNm+nFWa4q7FXm3nLS7GX8ydEllhVkmFv9&#xA;YHAtyaKctExPpstQyruWGwxV6TirsVdirsVYZZTs35kajCVAVBEQd6km2Ff2iKdP2RirM8Vdiryf&#xA;zIba4/N60i9B2uLdLQ+rxjK8frMD/aLhxSn8uKvWMVdirE/PN5Pb3OmhFLRP6glIDUA5wrUkMoH2&#xA;u+KssxV2KsG8220T+eNAkLKJVaPipl4EhZSdkoeW1e+Ks5xV2KsZ1e/EHnHSotgr0SVtyf3kdxwG&#xA;zbfGo/Z/sVZNirsVeW/mIRL56sIfVKPDawTRqomG5uJCTyQcP919zir1LFXYqx/zpc3EGnQegpaS&#xA;SZkAEZmO1vK2yDr9n+OKpnobs+iae7GrNbQkmtakxjucVRuKsN/MSGec2MMJuR6sdzHJ9VMAbgwj&#xA;BEnr7en/ADU3xVmWKuxVhPnNVl8zaGgd0aO6tZCFilkBHrMKFkICVp1bbFWbYq7FWGa5FPJ55teJ&#xA;uBAIbJpfSMIgJW5mK+uG/emh+xx74qzPFXYq7FXYqwOOacfmpLDxIiNGLcRQ/wCiADelex7/AKsV&#xA;Z5irsVeP+YvrUf50QSrJEtu/1KN0anqbyxdPjU77fs4q9gxV2KsG/M2FpP0eRGjhVmqXEZp+9gbb&#xA;nv8As9sVZzirsVYV5kWI+fNIdql4kiK/HGAOczLXiTzP0Yqy2+1C0sYRLcvwVmCIqqzu7EE8URAz&#xA;MaAmijpiqtDNFNEk0TiSKRQ8bqaqysKggjsRirA9WeQef4UCVRp7Ri/EbcY5Ad6V/aHf9eKs+xV2&#xA;KvNvPDTjzf6sdqs0Udpbq8vJwwZWuXZdgV2VlP04q9JxV2Ksb89sRpVv/d0NxQ+pKsA/uZD9t6r2&#xA;xVONGBGj2IalRbxVpuK8BiqMxVhv5jymKPTpF+rckeRv9KFdgFJ9P4k+PwqaYqzLFWpJEjRpJGCI&#xA;gLO7GgAG5JJxV5/5glsNT80aBqdtfF9OaK2vIZoOMkM0QkaRH5hW+Egg1B6fgqzHzBr+keXtFvNa&#xA;1i4W002wjM11O1SFUeAAJZidlUCpOwxVHo6OiujBkYAqwNQQdwQRirDvMkrQ+ctOdRbfElsjeoP9&#xA;Io13x/dnkNvi3qPlirMsVdirsVeT/m7+fDfl/wCZtE8vWvl2fXr7WUDokM3osOUvpIkaelN6rsQf&#xA;h+Ht44qmuj6jPqHnSxv7nTLvTZ7oSq9vOFJjMcTqFkaKSWLlxTscVZZp3mvRtR1q90e0kd7uw/vm&#xA;MbrExUhZFjkI4uYmZQ/E/CTTrWirwL/nNTzT5h03RvLuj2FxJa6bqr3b6gYmKmU24iCROVp8H74k&#xA;r0P0YqxD8p2Gh/l1pWvwwpPfW6z3kNo/MPK9tel41HFx9vioFF+/FWe/kp/zkn5q/MT8xToNxo9n&#xA;ZaSbSa4BhMslwjRcaFpWYIVJan92PnirLf8AnJzVtV0j8sf0jYM6xW2pWEmoCMlWa3WYNxqP5pQg&#xA;xVFah598qecoo5PLOqwX0dpGj3LJU8RdGqIwJTi4EBqp3HcYqzLzL5v0/QL7QbO5UvNr9+NOtkUj&#xA;krGGSX1Cp6qvphT4chiqa6jfQ2Gn3N9MGMNpE88oQVYrGpZuI2qaDFXhOj/mjqvnjQ5vNVrZwadP&#xA;6oXRoZ5ZmRBbXMYiN0U4BuUvJm40+H4d6VxV6fPo+pNaK2uXEdzrurt9QT6uGS3treUcriO15VZT&#xA;6ETuZG+J2A6DiiqsB/5yK/MTWPJms/l6LS7ew0a51b1taeI8Q9tavAGhegJ4NHM9V9sVZINf0TWP&#xA;NUOp6TcDUrA3dpCl9aN6tsWKlTSVGKNxZqGld9sVZfD5v0eXzXP5YUyDUoIPrBYoRCwHAvGsnQyI&#xA;s0bMvXiwPjRV5V/zlZ+ZfmfyX5R02Dy7M1leaxcPFLqMY+OKKFAzKjH7LuWFG60BpvvirzT8p9e8&#xA;wav+VupalqmpXWpaob+eGK7u7mSWYL9XjACvIJGHGrFd8VQv/OLv5y+fr38xbXyrrWq3Wtabq0c9&#xA;DfSvcSwSwQvOHWWQs9CIypWtN8VfYmKvHvOX5jD/AJWZe6EKzaZ5d05Jb23iUO73t+QUJBIA9KBd&#xA;v+MhxVm/5danqF3oQh1F42uIWZ7YxjjWyld/qvJf2WRVMTbn4kJ74qmfnDzCnlzyprGvvCbhdKs5&#xA;7wwKaF/RjL8a70rSle2KvnH8nvzf86+f77zDP5qeCawt4V/R0CQwwwwvLJR442Yq71HD7bsRt47q&#xA;vcdH/N/yTrHnJPJ9hcSy62bV7uaP0yI4gnH9279C5V+S8OSkCvLdaqss1KyS+0+6spDSO6hkhc+A&#xA;kUqfDxxV8qfkjqXm218kTnUvVvI9K+s2+k23KNeEcHNmjZmo3H1g436D2piqj5n/ADTv/wA8PzJ0&#xA;HyBpdrNp/lIXqy6nBMV9e4S2rJMZvTZ0VVRCEUMRy3JJ40VfQP5wfmfp/wCW3kyTXJrf61cvItpp&#xA;tkG4CSdwWAZgDxRURmO3anfFUr1b8xfIl/cJq1nq9jd6ZaG0ae/jmiZY+E6TSVJao9ONgzADbp1F&#xA;MVRHkD86fLvnLzt5j8rae8c0mjES2V9byCWC7taIskiMNqxzPxNKgggg4q9ExV2KsA846L5fufzU&#xA;8g6jeFf0tb/pNbGI0/eL9VDM2/X0jQr4E1xVHzeVtE1DW5Gvr61vDK8nKxCRrL8LsygOj+oGicV5&#xA;Deq4qv8ALGl2Nv5r1oW8KWsOlw2um2Fmg4qsDobuSYDv60sxVmPUx+NaqvnX/nNDz9pF9faZ5LtF&#xA;Wa+0qT67qNxt+6aWOkcA92Rub/7H6FUm0a90jW/J1lr1xqJsbbS7H0bi1ijk+tI1hDDtbcV9Jg31&#xA;YsnORaVoelSqkv8AzjZ+ZOjeXfzcuLrVIFtrXzKJLJJl+zbSXE6yxg9P3ZdQhPbY9AcVfVv59Jpj&#xA;/k55tGosEtxp8jITSnrqQbYb+M4QDFXzb/zjhBY/4S1WeZYw41FS0rBKhIrZjuSKkD1DQHbr74qn&#xA;P/OOk9x5p/OvU5/MepXGoS+WILo+X7K6mklWDlOICYlkOwjjbjSncHsMVfVGvX2mafol/e6rKINM&#xA;treWS9mbosKoS5/4HFXzd/zjZe3Hl38qXv7NmQ6leyS3LTKeAMciwMYqoOQES12LfFX5BV7pD5p0&#xA;28/M648spIDe6TpSXrx8upu5uDfD4xrEm/hJ74q8y/5zH060vPy008nfUV1a3j06NRV5JJY5VaNR&#xA;7r8X0DFWSTaPbyXdhpOqpEs4/RtvcQwi3iKskMQYI6SpKKNXiR8Q/Z7YqyLSdF0yy8+NZ2kH1W30&#xA;vTFuYFDEm4n1O4kS4mldizyyRrYRjm1T8e56Yq8b/wCc1vM2gDy3o/lliJdee7XUEUdYbZI5Iizf&#xA;8ZGegHfiT2xVA/8AOPvnP8qNO/Jqa21+1Rb2G6nS/R4Wle6kb95CYmUEA+kyoKstCtdhviry3/nG&#xA;DzR5d0H84LWfVh6FvqEM1jYTMarBcXDL6Rdj2YKY6/5VTtXFX3dqWoWmm6ddajeP6VpZQyXFxIei&#xA;xxKXdvoUYq+LfyZm1Xzn+Yfmvzc1vNPe3EiSMibxRrdXPqhGcinwrbhUFRsD4bKvqzQ9Zv7q20DX&#xA;L+MQXGoK9hqkEQKxxz1Ypy5FifTmiaFdzUybdcVTDz55g8s6B5R1TUvMzqNESB47uNhX1VlHD0VX&#xA;9ppOXED3xV8ZfkvHLc6ZqEUsEf6DM80mnq5dpvWWSzaZKxEV+BYOo69O+Kvpvy3ovkLQPOWmeZrd&#xA;Ghm80adDpGnXlwACZrYvKY5GGwluIlXj2Po0G5AKr0m/v7PT7G4v72ZbeztI3nuZ3NFSONSzsx8A&#xA;orir5d/LnS7XzD5a1jVLLUbjTrbXbzV7q1tBdxwPFFcPLGnpqQSvELsd/iriqC/5xD0PTbH8wNZn&#xA;ubiGfUZ9MM2mKk0c0i27XZjn9UKSY5axR1U0PFvfFXoP/OY2gXOo/lTHqMJ+HRdQgubgH/fUwa2q&#xA;Pf1Jk+iuKq+gWPkCXy/5apqVx5f+u6bpt8+gaekotK3YjlYMqRurCV5OL1PQ74qzHQvInlTRPzCt&#xA;28u6bb6XHpmkXCXcNsvpiT9KXcbwkgfa4HT5uviPAYqz3FXYq+HP+ckvzC80W/563U+nX01jN5aS&#xA;K10qSJuLRiW3V5mHUVkMzAnutBiqY3P/ADk3C3loWttFPBr62bRjVEgKz/XGjas31j66w3lbk1YT&#xA;UVHEV2VZT/zj3+Yvme+/OJ9M1m/1K9TVNDhqNWjWGYSwotyrIqn4ov30xiPUq1cVeIfmu/D86/Mz&#xA;65HLJbLrlwbiJTSRrQXB4KhPSsFOP0Yq9b0nzV/zi5beXLjT4b3VLW2uo5FNjPBcPKolVgw5Ru0f&#xA;Ih+obFXgvnKbypN5nun8nQXVtoNYxYR3hBuaiNQ7NxZx8UnIrQ9KYq+kP+cx/MuuweVvJ/l+djGu&#xA;oJJeaoFqA89skSqnyVpmYg96eGKvP/yZ8/aFoPk67sJ5rG1u3u5Jpzeo7tLG0aIgThLF0+Pan68V&#xA;SPyl56m03zzo3myweys7aHzBcA2iALqMlpfyK0ouWUfvIliYojMx4tWmKvX/APnMf80/Tgt/y80y&#xA;b95Lwu9eZT0QHlb25p/MaSsP9TxxV8/aN+bPn7RtGj0XTtSSHTIuQS2a1tJB8Rq3JpInZq+5xVln&#xA;5T+ddX8o/mz5XivBbSCJ1069msjHO9xBqZDAzXELP67RGVCo5HjwC9sVegf85P8A5gXGn/nb5Vhu&#xA;UaXR/KzWeptZrT97I1wJpSKmhrHEqCvTfxxVPr389PIN5ql3qMHmyK3lupkltZJoLgPbojAxq0S6&#xA;PPyZAKH/AEk17MMVei6b5i0p/Mfly+0XVv0xo00jW1nqAFzcE29+JWngnvZC8bSrdxW5SI8XjRSC&#xA;KYq+Tf8AnIa7nvfzv8yfX5GVI7qO3DEE8II4kReK7/s/Ft1xVm2hj8gNEs/qNt55e4t1vlvElltL&#xA;9GYKgUhlWxYDp0qfniryHz3pvkzTNbjg8na1JremehHI97JDJbstwS3OMLIkTELQUbjir6t/5yD8&#xA;/wB1p3/OPmkQSyk6x5stbKCViaPwMKT3T0PjQIf9fFXgf5GaL+cGpz6kv5eR2sYiCNfXt5bWUqqa&#xA;/BGst3DMysdzxTwqe2KvpHyRc+dNW8tWPlnULmK113TJnj1S0sYLWOS2vYvrU8cl9CFjjjtmcW0s&#xA;Elsnxt12OKsM/wCcx9budR8h+Trm29SPTdQnkuZ4W/ZlEK+mklNuaB5BTxriryT8nPzd8v8AkXTL&#xA;uDULG8vLm4uDKhgMHpqnFBSkob4iU328MVUJ9a1TV45tVtrrVb2MSXl/o1pqVyLS2tLmK5g9GWxA&#xA;f0bqdVlo0EUaUqKAjFXtv/OYX5ptp+kW/kLTZuN7qSrc60UO6WwNY4ain9661P8Akr4NirEvyQ/L&#xA;P87r3y/H9WjttH0ORjLZXmqtdicK5Vq21vDLH8PIcwXUA1JqQcVT7yx+R/nj8qvO/lnWbCODXrSX&#xA;VEttV1W3M0dwlrfBbZkmt2Zo/SR29TmKnl1oMVU/+c0vPmr28ul+SLWT0dOvLcajqIXrNSZkhRj/&#xA;ACo0JanjQ9hirzKx/wCckPMttpkdl+joAbazjsbJoZZoViWCGKGI8AzH4fR5EKy7saUxV6v5N/Pv&#xA;VtZ/M3y/cziMDVmt9DvvqNrcx2dzziaevq3L8kmsbm44cAhqrseVCMVfT+KuxV4V+ev/ADjPF+YG&#xA;sr5j0TUItM1x0SK+S4VmguFjAWNyyVZHVRx6EEAdKbqvKv8AoSXz/wD9X3Svvuf+qWKvXfyO/wCc&#xA;dpvIWsS+Y9f1Uavrxg+qWgi5+jBDRV2aT43bggRdgFXbfsqv/O//AJxr0n8w739PaXdrpHmPgEuJ&#xA;XQvBdKgCp6oUhldVFA4rtsQdqKvFm/5wp/NHkeOq6GVrsTPdg0+X1U4q9E/Kb/nES28ua7a695u1&#xA;GHVLmxkWa0021VvqwlQ1R5ZJArScTuF4AV61G2KvUvzi/KHRfzM8ux6bezNZahZuZdM1FFDmJ2AD&#xA;qyErzRwByWo6A12xV8+n/nCHzTXbzLY07fuZsVVB/wA42aT+WNnP578661HqdjofG4tNItY2j+tX&#xA;QYC3heRySFaXjUBTtXtirydPy7/OP8wtcu9bTy9f3l3qkzXE17LEbe3ZpDX4ZZ/TjCr0A5bDFXqf&#xA;k3/nCvzJdtHP5t1iDTIDu9nZD6xcEfymRuMSH3HPFX0V5B/Jn8u/IsatoOlIL4LxfU7n99dt4/vG&#xA;+xXuIwo9sVYn+fP/ADj5a/mW1rqtherpvmGyj+rrLKpeCeDkWWOTj8SlWYlWFepBB2oq8X/6El8/&#xA;/wDV90r77n/qlir0z8k/+cZdR8ka4mseYNbF+bVzNY6XZmUWguODRi4lEnHm6I7BPg261xVb/wA5&#xA;C/8AONl3541QeafK80MGutGsV/ZXB4R3IjHFJFkAPGRVAX4hQgDcU3VeBP8A84tfnqrso8thgCQG&#xA;F9YUPuK3AOKs2/LP/nD/AM3Xes29355EWmaPbusk9hHMk1zcU39PlCXjRT0ZudfAdwqmf54eX/MX&#xA;5qfntaeRNFiNvp3ly1ijublkIht0nCzTT0+H9ho41UfaK+G4VfS3kfyToPkvy1aeX9Eh9Kztlqzn&#xA;eSaUgc5pW7u56/cKAAYqw386fyqv/M1tF5k8p3T6V590ZCdNvoHMTXEYqxtZGBAo37JbYHY/CTir&#xA;CPykiH5wflh5h8oef7eVdT0zVZvXmWMQSw3EzNN6iDjxSVJmlDLxpQ0pQ0xVht5/zg/rwuZBZ+aL&#xA;V7av7ppreRJOPbkFZxX6cVZp+XH/ADizaeUruDXvM2qP5il0X1LrStHhRlto5h8YejsxdiyggBVH&#xA;ICvLFVb8pPyPu9X12f8AM78zIBc+YtVm+uWGjTDlHaIw/dGZG6uicQiH7AAr8X2VXv8AirsVeafn&#xA;T+RuhfmdY2zT3LabrVgGWy1GNBIOD7mOVCV5pUVFGBB+kFV4WP8AnCHzWDUeZrEEf8UzYq9X/K//&#xA;AJx4n8ueYv8AFHm3zBP5k1yOWS4tI25rbQ3EyiOS4KuzGSUooUNtQdjQEKvaMVdirsVdirsVdirs&#xA;VdirsVdirTKrCjAEVBod9wag/fireKuxV2KuxV2KuxV2KuxV2KtcV5FqDkQAW7kCtB+OKt4q7FXA&#xA;AEkChO59z0xV2KuxV2KuxV2KuxV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F87F117407206811822AB2A6B75D99AD</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stRef:instanceID>
            <stRef:documentID>xmp.did:0880117407206811822A8072EAEFE205</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71</stEvt:instanceID>
                  <stEvt:when>2017-01-20T09:07:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T18:36:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T21:11:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:577FABBD61206811822AA8872E1D75D1</stEvt:instanceID>
                  <stEvt:when>2019-04-07T19:22:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stEvt:instanceID>
                  <stEvt:when>2019-05-11T00:15:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</stEvt:instanceID>
                  <stEvt:when>2019-05-18T09:11:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>4485.000000</stDim:w>
            <stDim:h>1345.500000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1345.5 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1345.5 li
4485 1345.5 li
4485 0 li
cp
clp
4485 1345.5 mo
0 1345.5 li
0 0 li
4485 0 li
4485 1345.5 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
2421.2 288.45 mo
2421.2 265.778 li
2421.2 265.464 2420.95 265.209 2420.63 265.209 cv
2413.69 265.209 li
2413.38 265.209 2413.12 265.464 2413.12 265.778 cv
2413.12 288.45 li
2413.12 288.764 2413.38 289.019 2413.69 289.019 cv
2420.63 289.019 li
2420.95 289.019 2421.2 288.764 2421.2 288.45 cv
cp
0 0 0 rgb
f
2413.58 277.026 mo
2472.94 277.026 li
2472.94 270.042 li
2413.58 270.042 li
2413.58 277.026 li
cp
f
2421.2 238.07 mo
2421.2 215.399 li
2421.2 215.084 2420.95 214.83 2420.63 214.83 cv
2413.69 214.83 li
2413.38 214.83 2413.12 215.084 2413.12 215.399 cv
2413.12 238.07 li
2413.12 238.385 2413.38 238.64 2413.69 238.64 cv
2420.63 238.64 li
2420.95 238.64 2421.2 238.385 2421.2 238.07 cv
cp
f
2413.58 226.647 mo
2472.94 226.647 li
2472.94 219.663 li
2413.58 219.663 li
2413.58 226.647 li
cp
f
2421.2 187.691 mo
2421.2 165.02 li
2421.2 164.705 2420.95 164.45 2420.63 164.45 cv
2413.69 164.45 li
2413.38 164.45 2413.12 164.705 2413.12 165.02 cv
2413.12 187.691 li
2413.12 188.005 2413.38 188.26 2413.69 188.26 cv
2420.63 188.26 li
2420.95 188.26 2421.2 188.005 2421.2 187.691 cv
cp
f
2413.58 176.268 mo
2472.94 176.268 li
2472.94 169.283 li
2413.58 169.283 li
2413.58 176.268 li
cp
f
2524.68 288.45 mo
2524.68 265.778 li
2524.68 265.464 2524.94 265.209 2525.25 265.209 cv
2532.19 265.209 li
2532.5 265.209 2532.76 265.464 2532.76 265.778 cv
2532.76 288.45 li
2532.76 288.764 2532.5 289.019 2532.19 289.019 cv
2525.25 289.019 li
2524.94 289.019 2524.68 288.764 2524.68 288.45 cv
cp
f
2532.3 277.026 mo
2472.94 277.026 li
2472.94 270.042 li
2532.3 270.042 li
2532.3 277.026 li
cp
f
2524.68 238.07 mo
2524.68 215.399 li
2524.68 215.084 2524.94 214.83 2525.25 214.83 cv
2532.19 214.83 li
2532.5 214.83 2532.76 215.084 2532.76 215.399 cv
2532.76 238.07 li
2532.76 238.385 2532.5 238.64 2532.19 238.64 cv
2525.25 238.64 li
2524.94 238.64 2524.68 238.385 2524.68 238.07 cv
cp
f
2532.3 226.647 mo
2472.94 226.647 li
2472.94 219.663 li
2532.3 219.663 li
2532.3 226.647 li
cp
f
2524.68 187.691 mo
2524.68 165.02 li
2524.68 164.705 2524.94 164.45 2525.25 164.45 cv
2532.19 164.45 li
2532.5 164.45 2532.76 164.705 2532.76 165.02 cv
2532.76 187.691 li
2532.76 188.005 2532.5 188.26 2532.19 188.26 cv
2525.25 188.26 li
2524.94 188.26 2524.68 188.005 2524.68 187.691 cv
cp
f
2532.3 176.268 mo
2472.94 176.268 li
2472.94 169.283 li
2532.3 169.283 li
2532.3 176.268 li
cp
f
2459.26 280.475 mo
2459.26 285.278 2455.36 289.171 2450.56 289.171 cv
2445.76 289.171 2441.86 285.278 2441.86 280.475 cv
2441.86 165.346 li
2441.86 160.543 2445.76 156.65 2450.56 156.65 cv
2455.36 156.65 2459.26 160.543 2459.26 165.346 cv
2459.26 280.475 li
cp
2426.96 131.261 mo
2425.46 131.261 2424.05 131.67 2424.09 133.173 cv
2427.48 301.409 li
2427.54 303.681 2428.44 305.842 2430.06 307.435 cv
2434.16 311.462 2442.49 321.827 2442.49 342.659 cv
2472.94 342.659 li
2472.94 122.712 li
2466.24 122.712 2461.43 131.261 2426.96 131.261 cv
cp
f
2486.63 280.475 mo
2486.63 285.278 2490.52 289.171 2495.32 289.171 cv
2500.13 289.171 2504.02 285.278 2504.02 280.475 cv
2504.02 165.346 li
2504.02 160.543 2500.13 156.65 2495.32 156.65 cv
2490.52 156.65 2486.63 160.543 2486.63 165.346 cv
2486.63 280.475 li
cp
2518.92 131.261 mo
2520.42 131.261 2521.83 131.67 2521.8 133.173 cv
2518.4 301.409 li
2518.34 303.681 2517.44 305.842 2515.82 307.435 cv
2511.72 311.462 2503.4 321.827 2503.4 342.659 cv
2472.94 342.659 li
2472.94 122.712 li
2479.65 122.712 2484.46 131.261 2518.92 131.261 cv
cp
f
2609.1 898.105 mo
2609.1 870.581 2625.72 844.809 2625.72 803.954 cv
2625.72 757.859 2588.36 720.492 2542.26 720.492 cv
2472.94 720.492 li
2403.62 720.492 li
2357.53 720.492 2320.16 757.859 2320.16 803.954 cv
2320.16 844.809 2336.79 870.581 2336.79 898.105 cv
2336.79 946.995 2269.23 962.96 2269.87 1076.48 cv
2270.34 1157.49 2336.5 1222.79 2417.51 1222.79 cv
2472.94 1222.79 li
2528.37 1222.79 li
2609.38 1222.79 2675.55 1157.49 2676.01 1076.48 cv
2676.66 962.96 2609.1 946.995 2609.1 898.105 cv
cp
f
2472.94 947.938 mo
2444.39 947.938 2421.24 924.79 2421.24 896.235 cv
2421.24 867.681 2444.39 844.533 2472.94 844.533 cv
2501.5 844.533 2524.64 867.681 2524.64 896.235 cv
2524.64 924.79 2501.5 947.938 2472.94 947.938 cv
cp
1 1 1 rgb
f
2472.94 844.533 mo
2490.24 844.533 2505.52 853.063 2514.91 866.113 cv
2503.4 348.037 li
2442.49 348.037 li
2431.04 866.034 li
2440.43 853.029 2455.67 844.533 2472.94 844.533 cv
cp
0 0 0 rgb
f
2503.4 342.659 mo
2442.49 342.659 li
2442.49 348.037 li
2503.4 348.037 li
2503.4 342.659 li
cp
f
2567.07 1083.87 mo
2378.81 1083.87 li
2378.81 1046.67 li
2567.07 1046.67 li
2567.07 1083.87 li
cp
1 1 1 rgb
f
2530.5 1060.18 mo
2415.39 1060.18 li
2415.22 1060.18 2415.09 1060.05 2415.09 1059.89 cv
2415.09 1056.32 li
2415.09 1056.16 2415.22 1056.03 2415.39 1056.03 cv
2530.5 1056.03 li
2530.66 1056.03 2530.79 1056.16 2530.79 1056.32 cv
2530.79 1059.89 li
2530.79 1060.05 2530.66 1060.18 2530.5 1060.18 cv
cp
0 0 0 rgb
f
2441.75 385.746 mo
2441.71 387.536 li
2504.17 387.536 li
2504.13 385.746 li
2441.75 385.746 li
cp
1 1 1 rgb
f
2440.9 422.877 mo
2440.86 424.667 li
2505.03 424.667 li
2504.99 422.877 li
2440.9 422.877 li
cp
f
2440.1 457.337 mo
2440.06 459.127 li
2505.82 459.127 li
2505.78 457.337 li
2440.1 457.337 li
cp
f
2439.35 490.02 mo
2439.31 491.81 li
2506.58 491.81 li
2506.53 490.02 li
2439.35 490.02 li
cp
f
2438.64 520.793 mo
2438.6 522.583 li
2507.28 522.583 li
2507.24 520.793 li
2438.64 520.793 li
cp
f
2437.97 549.913 mo
2437.93 551.703 li
2507.96 551.703 li
2507.91 549.913 li
2437.97 549.913 li
cp
f
2437.35 576.975 mo
2437.3 578.765 li
2508.58 578.765 li
2508.54 576.975 li
2437.35 576.975 li
cp
f
2436.75 602.831 mo
2436.71 604.621 li
2509.17 604.621 li
2509.13 602.831 li
2436.75 602.831 li
cp
f
2436.2 626.715 mo
2436.16 628.505 li
2509.72 628.505 li
2509.68 626.715 li
2436.2 626.715 li
cp
f
2435.67 649.493 mo
2435.63 651.283 li
2510.25 651.283 li
2510.21 649.493 li
2435.67 649.493 li
cp
f
2435.18 671.038 mo
2435.14 672.828 li
2510.75 672.828 li
2510.7 671.038 li
2435.18 671.038 li
cp
f
2434.71 691.354 mo
2434.67 693.145 li
2511.21 693.145 li
2511.17 691.354 li
2434.71 691.354 li
cp
f
2434.27 710.437 mo
2434.23 712.227 li
2511.65 712.227 li
2511.61 710.437 li
2434.27 710.437 li
cp
f
2433.85 728.659 mo
2433.81 730.449 li
2512.07 730.449 li
2512.03 728.659 li
2433.85 728.659 li
cp
f
2433.46 745.528 mo
2433.42 747.317 li
2512.46 747.317 li
2512.42 745.528 li
2433.46 745.528 li
cp
f
2433.09 761.656 mo
2433.05 763.446 li
2512.83 763.446 li
2512.79 761.656 li
2433.09 761.656 li
cp
f
2432.75 776.553 mo
2432.71 778.343 li
2513.18 778.343 li
2513.14 776.553 li
2432.75 776.553 li
cp
f
2432.42 790.834 mo
2432.38 792.625 li
2513.51 792.625 li
2513.46 790.834 li
2432.42 790.834 li
cp
f
2432.1 804.571 mo
2432.06 806.361 li
2513.82 806.361 li
2513.78 804.571 li
2432.1 804.571 li
cp
f
2431.81 817.095 mo
2431.77 818.884 li
2514.11 818.884 li
2514.07 817.095 li
2431.81 817.095 li
cp
f
2431.54 829.041 mo
2431.5 830.831 li
2514.39 830.831 li
2514.35 829.041 li
2431.54 829.041 li
cp
f
2514.64 842.05 mo
2514.6 840.26 li
2431.28 840.26 li
2431.24 842.05 li
2514.64 842.05 li
cp
f
2436.82 1065.28 mo
2435.29 1065.26 li
2443.8 342.653 li
2449.95 269.977 li
2451.46 270.107 li
2445.32 342.725 li
2436.82 1065.28 li
cp
f
2451.57 1065.27 mo
2450.05 1065.26 li
2454.93 342.653 li
2450.96 219.494 li
2452.48 219.446 li
2456.45 342.635 li
2451.57 1065.27 li
cp
f
2466.33 1065.26 mo
2464.8 1065.26 li
2466.36 342.659 li
2450.96 169.35 li
2452.48 169.219 li
2467.88 342.594 li
2466.33 1065.26 li
cp
f
2479.56 1065.26 mo
2478 342.659 li
2494.16 169.213 li
2495.67 169.355 li
2479.52 342.73 li
2481.08 1065.26 li
2479.56 1065.26 li
cp
f
2494.31 1065.27 mo
2489.43 342.665 li
2494.15 219.44 li
2495.67 219.5 li
2490.96 342.689 li
2495.83 1065.26 li
2494.31 1065.27 li
cp
f
2509.07 1065.28 mo
2500.57 342.671 li
2495.14 270.102 li
2496.65 269.983 li
2502.08 342.6 li
2510.59 1065.26 li
2509.07 1065.28 li
cp
f
717.908 255.196 mo
730.837 257.243 li
731.112 257.287 731.371 257.099 731.414 256.824 cv
734.981 234.304 li
735.024 234.028 734.837 233.77 734.562 233.726 cv
721.632 231.679 li
720.736 231.537 719.894 232.148 719.752 233.045 cv
716.542 253.315 li
716.399 254.212 717.011 255.054 717.908 255.196 cv
cp
0 0 0 rgb
f
725.126 247.821 mo
752.677 252.185 li
753.77 245.287 li
726.219 240.923 li
725.126 247.821 li
cp
f
723.288 221.625 mo
736.218 223.673 li
736.493 223.717 736.751 223.529 736.795 223.253 cv
740.362 200.733 li
740.405 200.458 740.218 200.2 739.942 200.156 cv
727.013 198.108 li
726.117 197.967 725.275 198.578 725.133 199.475 cv
721.922 219.745 li
721.78 220.641 722.392 221.483 723.288 221.625 cv
cp
f
730.507 214.251 mo
758.058 218.614 li
759.15 211.716 li
731.6 207.353 li
730.507 214.251 li
cp
f
728.669 188.055 mo
741.599 190.103 li
741.874 190.146 742.132 189.958 742.176 189.684 cv
745.743 167.163 li
745.786 166.888 745.598 166.629 745.323 166.586 cv
732.394 164.538 li
731.498 164.396 730.656 165.007 730.514 165.904 cv
727.303 186.175 li
727.161 187.071 727.773 187.913 728.669 188.055 cv
cp
f
735.888 180.68 mo
763.439 185.044 li
764.531 178.146 li
736.98 173.782 li
735.888 180.68 li
cp
f
762.211 145.582 mo
760.708 145.582 759.296 145.99 759.335 147.493 cv
737.671 283.508 li
737.728 285.78 738.626 287.942 740.248 289.535 cv
744.347 293.562 752.673 303.926 752.673 324.758 cv
783.128 324.758 li
783.128 140.613 li
776.423 140.613 770.571 145.582 762.211 145.582 cv
cp
f
919.283 880.204 mo
919.283 852.68 935.91 826.908 935.91 786.054 cv
935.91 728.522 875.974 769.809 845.288 769.809 cv
802.668 769.809 783.128 702.591 783.128 702.591 cv
713.809 702.591 li
667.714 702.591 630.347 739.958 630.347 786.054 cv
630.347 826.908 646.974 852.68 646.974 880.204 cv
646.974 929.095 579.413 945.06 580.061 1058.58 cv
580.523 1139.59 646.689 1204.89 727.698 1204.89 cv
783.128 1204.89 li
838.559 1204.89 li
919.568 1204.89 985.734 1139.59 986.196 1058.58 cv
986.844 945.06 919.283 929.095 919.283 880.204 cv
cp
f
783.129 944.359 mo
746.723 944.359 717.105 914.739 717.105 878.333 cv
717.105 841.928 746.723 812.312 783.129 812.312 cv
819.533 812.312 849.151 841.928 849.151 878.333 cv
849.151 914.739 819.533 944.359 783.129 944.359 cv
cp
1 1 1 rgb
f
783.128 930.037 mo
754.574 930.037 731.426 906.889 731.426 878.334 cv
731.426 849.78 754.574 826.632 783.128 826.632 cv
811.683 826.632 834.831 849.78 834.831 878.334 cv
834.831 906.889 811.683 930.037 783.128 930.037 cv
cp
0 0 0 rgb
f
783.128 826.632 mo
800.431 826.632 815.708 835.162 825.093 848.213 cv
813.583 330.136 li
752.673 330.136 li
741.223 848.134 li
750.613 835.128 765.862 826.632 783.128 826.632 cv
cp
f
813.583 324.758 mo
752.673 324.758 li
752.673 330.137 li
813.583 330.137 li
813.583 324.758 li
cp
1 1 1 rgb
f
870.1 1065.97 mo
846.574 1065.97 834.831 1080.29 783.158 1080.29 cv
731.452 1080.29 719.697 1065.97 696.157 1065.97 cv
688.997 1028.77 li
877.26 1028.77 li
870.1 1065.97 li
cp
f
840.685 1042.28 mo
725.572 1042.28 li
725.411 1042.28 725.28 1042.15 725.28 1041.99 cv
725.28 1038.42 li
725.28 1038.26 725.411 1038.13 725.572 1038.13 cv
840.684 1038.13 li
840.846 1038.13 840.977 1038.26 840.977 1038.42 cv
840.977 1041.99 li
840.977 1042.15 840.846 1042.28 840.685 1042.28 cv
cp
0 0 0 rgb
f
760.686 249.917 mo
760.033 254.039 756.163 256.851 752.042 256.198 cv
747.92 255.545 745.108 251.675 745.761 247.554 cv
746.414 243.432 750.284 240.62 754.405 241.273 cv
758.527 241.926 761.339 245.796 760.686 249.917 cv
cp
1 1 1 rgb
f
766.067 216.347 mo
765.414 220.469 761.544 223.281 757.422 222.627 cv
753.301 221.975 750.489 218.104 751.142 213.983 cv
751.794 209.862 755.665 207.05 759.786 207.703 cv
763.908 208.355 766.719 212.226 766.067 216.347 cv
cp
f
771.448 182.777 mo
770.795 186.898 766.924 189.71 762.803 189.058 cv
758.682 188.405 755.87 184.535 756.522 180.413 cv
757.175 176.292 761.045 173.48 765.167 174.132 cv
769.289 174.785 772.1 178.655 771.448 182.777 cv
cp
f
751.938 367.846 mo
751.897 369.636 li
814.359 369.636 li
814.318 367.846 li
751.938 367.846 li
cp
f
751.083 404.977 mo
751.042 406.767 li
815.214 406.767 li
815.173 404.977 li
751.083 404.977 li
cp
f
750.289 439.437 mo
750.248 441.227 li
816.009 441.227 li
815.967 439.437 li
750.289 439.437 li
cp
f
749.536 472.12 mo
749.495 473.909 li
816.762 473.909 li
816.72 472.12 li
749.536 472.12 li
cp
f
748.827 502.893 mo
748.786 504.683 li
817.471 504.683 li
817.43 502.893 li
748.827 502.893 li
cp
f
748.156 532.013 mo
748.115 533.803 li
818.142 533.803 li
818.101 532.013 li
748.156 532.013 li
cp
f
747.533 559.075 mo
747.491 560.865 li
818.765 560.865 li
818.724 559.075 li
747.533 559.075 li
cp
f
746.937 584.931 mo
746.896 586.721 li
819.361 586.721 li
819.32 584.931 li
746.937 584.931 li
cp
f
746.386 608.815 mo
746.345 610.605 li
819.912 610.605 li
819.87 608.815 li
746.386 608.815 li
cp
f
745.861 631.592 mo
745.82 633.382 li
820.437 633.382 li
820.395 631.592 li
745.861 631.592 li
cp
f
745.365 653.138 mo
745.324 654.928 li
820.933 654.928 li
820.892 653.138 li
745.365 653.138 li
cp
f
744.897 673.454 mo
744.856 675.244 li
821.4 675.244 li
821.359 673.454 li
744.897 673.454 li
cp
f
744.458 692.536 mo
744.416 694.326 li
821.84 694.326 li
821.799 692.536 li
744.458 692.536 li
cp
f
744.038 710.758 mo
743.996 712.548 li
822.26 712.548 li
822.219 710.758 li
744.038 710.758 li
cp
f
743.649 727.627 mo
743.607 729.417 li
822.649 729.417 li
822.607 727.627 li
743.649 727.627 li
cp
f
743.277 743.755 mo
743.236 745.545 li
823.021 745.545 li
822.979 743.755 li
743.277 743.755 li
cp
f
742.934 758.652 mo
742.893 760.442 li
823.364 760.442 li
823.323 758.652 li
742.934 758.652 li
cp
f
742.605 772.934 mo
742.564 774.724 li
823.693 774.724 li
823.651 772.934 li
742.605 772.934 li
cp
f
742.289 786.671 mo
742.247 788.461 li
824.009 788.461 li
823.968 786.671 li
742.289 786.671 li
cp
f
742 799.194 mo
741.958 800.984 li
824.298 800.984 li
824.257 799.194 li
742 799.194 li
cp
f
741.725 811.141 mo
741.683 812.931 li
824.573 812.931 li
824.532 811.141 li
741.725 811.141 li
cp
f
824.832 824.15 mo
824.791 822.36 li
741.466 822.36 li
741.425 824.15 li
824.832 824.15 li
cp
f
848.349 255.196 mo
835.419 257.243 li
835.145 257.287 834.886 257.099 834.842 256.824 cv
831.275 234.304 li
831.232 234.028 831.42 233.77 831.695 233.727 cv
844.624 231.679 li
845.521 231.537 846.362 232.148 846.504 233.045 cv
849.715 253.315 li
849.857 254.212 849.246 255.054 848.349 255.196 cv
cp
0 0 0 rgb
f
841.131 247.821 mo
813.579 252.185 li
812.487 245.287 li
840.038 240.923 li
841.131 247.821 li
cp
f
842.968 221.625 mo
830.039 223.673 li
829.764 223.717 829.505 223.529 829.461 223.253 cv
825.895 200.733 li
825.851 200.458 826.039 200.2 826.314 200.156 cv
839.243 198.108 li
840.14 197.967 840.981 198.578 841.124 199.475 cv
844.334 219.745 li
844.476 220.641 843.865 221.483 842.968 221.625 cv
cp
f
835.75 214.251 mo
808.199 218.614 li
807.106 211.716 li
834.657 207.353 li
835.75 214.251 li
cp
f
837.587 188.055 mo
824.658 190.103 li
824.383 190.146 824.125 189.958 824.081 189.683 cv
820.514 167.163 li
820.47 166.888 820.658 166.629 820.934 166.586 cv
833.863 164.538 li
834.759 164.396 835.601 165.007 835.743 165.904 cv
838.953 186.175 li
839.095 187.071 838.483 187.913 837.587 188.055 cv
cp
f
830.369 180.68 mo
802.818 185.044 li
801.725 178.146 li
829.276 173.782 li
830.369 180.68 li
cp
f
804.045 145.582 mo
805.549 145.582 806.96 145.99 806.922 147.493 cv
828.585 283.508 li
828.529 285.78 827.63 287.942 826.009 289.535 cv
821.91 293.562 813.583 303.926 813.583 324.758 cv
783.128 324.758 li
783.128 140.613 li
789.833 140.613 795.685 145.582 804.045 145.582 cv
cp
f
805.571 249.917 mo
806.223 254.039 810.094 256.851 814.215 256.198 cv
818.336 255.545 821.148 251.675 820.496 247.554 cv
819.843 243.432 815.973 240.62 811.851 241.273 cv
807.729 241.926 804.918 245.796 805.571 249.917 cv
cp
1 1 1 rgb
f
800.19 216.347 mo
800.842 220.469 804.713 223.281 808.834 222.627 cv
812.956 221.975 815.768 218.104 815.115 213.983 cv
814.462 209.862 810.592 207.05 806.47 207.703 cv
802.349 208.355 799.537 212.226 800.19 216.347 cv
cp
f
794.809 182.777 mo
795.462 186.898 799.332 189.71 803.454 189.058 cv
807.575 188.405 810.387 184.535 809.734 180.413 cv
809.081 176.292 805.211 173.48 801.089 174.132 cv
796.968 174.785 794.156 178.655 794.809 182.777 cv
cp
f
747.001 1047.38 mo
745.48 1047.36 li
753.983 324.75 li
755.709 249.337 li
757.23 249.373 li
755.504 324.776 li
747.001 1047.38 li
cp
f
761.756 1047.37 mo
760.234 1047.36 li
765.116 324.753 li
761.144 215.191 li
762.665 215.138 li
766.637 324.732 li
761.756 1047.37 li
cp
f
776.513 1047.37 mo
774.991 1047.36 li
776.548 324.756 li
766.643 181.649 li
768.158 181.542 li
778.066 324.706 li
776.513 1047.37 li
cp
f
789.746 1047.37 mo
788.188 324.762 li
799.338 181.536 li
800.854 181.655 li
789.707 324.818 li
791.267 1047.36 li
789.746 1047.37 li
cp
f
804.5 1047.37 mo
799.621 324.765 li
803.816 215.135 li
805.337 215.194 li
801.142 324.789 li
806.021 1047.36 li
804.5 1047.37 li
cp
f
819.256 1047.38 mo
810.753 324.768 li
809.068 248.752 li
810.59 248.716 li
812.274 324.741 li
820.777 1047.36 li
819.256 1047.38 li
cp
f
752.601 252.663 mo
750.436 252.32 748.954 250.278 749.297 248.113 cv
749.64 245.948 751.68 244.465 753.845 244.808 cv
756.01 245.151 757.492 247.191 757.149 249.356 cv
756.807 251.521 754.766 253.005 752.601 252.663 cv
cp
0 0 0 rgb
f
757.982 219.092 mo
755.817 218.75 754.335 216.708 754.678 214.542 cv
755.021 212.377 757.061 210.895 759.226 211.238 cv
761.391 211.581 762.873 213.621 762.53 215.786 cv
762.187 217.951 760.147 219.435 757.982 219.092 cv
cp
f
763.363 185.522 mo
761.197 185.179 759.716 183.137 760.059 180.972 cv
760.401 178.807 762.441 177.325 764.607 177.668 cv
766.772 178.011 768.254 180.051 767.911 182.216 cv
767.568 184.381 765.528 185.865 763.363 185.522 cv
cp
f
813.656 252.663 mo
815.821 252.32 817.302 250.278 816.959 248.113 cv
816.617 245.948 814.577 244.465 812.412 244.808 cv
810.247 245.151 808.764 247.191 809.107 249.356 cv
809.45 251.521 811.491 253.005 813.656 252.663 cv
cp
f
808.275 219.092 mo
810.44 218.75 811.922 216.708 811.579 214.542 cv
811.236 212.377 809.196 210.895 807.031 211.238 cv
804.866 211.581 803.383 213.621 803.727 215.786 cv
804.069 217.951 806.11 219.435 808.275 219.092 cv
cp
f
802.894 185.522 mo
805.059 185.179 806.541 183.137 806.198 180.972 cv
805.855 178.807 803.815 177.325 801.65 177.668 cv
799.485 178.011 798.002 180.051 798.346 182.216 cv
798.688 184.381 800.729 185.865 802.894 185.522 cv
cp
f
3429.58 901.82 mo
3429.58 876.632 3457.9 853.047 3457.9 815.661 cv
3457.9 802.669 3456.05 788.692 3442.47 788.692 cv
3429.44 788.692 3434.65 816.062 3395.88 816.062 cv
3374.05 816.062 3361.57 791.298 3361.57 778.265 cv
3331.36 739.283 li
3281.2 739.283 li
3239.01 739.283 3204.82 773.479 3204.82 815.661 cv
3204.82 853.047 3233.14 876.632 3233.14 901.82 cv
3233.14 946.56 3158.21 961.17 3158.8 1065.06 cv
3159.22 1139.19 3219.77 1198.94 3293.91 1198.94 cv
3331.36 1198.94 li
3368.81 1198.94 li
3442.94 1198.94 3503.49 1139.19 3503.92 1065.06 cv
3504.51 961.17 3429.58 946.56 3429.58 901.82 cv
cp
f
3450.14 979.349 mo
3450.14 988.081 3443.06 995.159 3434.33 995.159 cv
3434.33 995.159 li
3416.07 995.159 3365.15 988.353 3365.15 988.353 cv
3361.28 805.789 li
3361.28 805.789 3384.81 818.354 3393.61 836.905 cv
3399.91 850.187 3450.14 968.057 3450.14 979.272 cv
3450.14 979.349 li
cp
1 1 1 rgb
f
3389.27 234.695 mo
3376.68 234.695 li
3376.36 234.695 3376.1 234.435 3376.1 234.113 cv
3376.1 211.733 li
3376.1 211.412 3376.36 211.151 3376.68 211.151 cv
3389.27 211.151 li
3390.32 211.151 3391.17 212 3391.17 213.046 cv
3391.17 232.801 li
3391.17 233.847 3390.32 234.695 3389.27 234.695 cv
cp
0 0 0 rgb
f
3383.63 226.376 mo
3363.07 226.376 li
3363.07 219.47 li
3383.63 219.47 li
3383.63 226.376 li
cp
f
3389.27 197.496 mo
3376.68 197.496 li
3376.36 197.496 3376.1 197.235 3376.1 196.914 cv
3376.1 174.533 li
3376.1 174.212 3376.36 173.952 3376.68 173.952 cv
3389.27 173.952 li
3390.32 173.952 3391.17 174.8 3391.17 175.846 cv
3391.17 195.601 li
3391.17 196.647 3390.32 197.496 3389.27 197.496 cv
cp
f
3383.63 189.177 mo
3363.07 189.177 li
3363.07 182.271 li
3383.63 182.271 li
3383.63 189.177 li
cp
f
3389.27 271.895 mo
3376.68 271.895 li
3376.36 271.895 3376.1 271.634 3376.1 271.313 cv
3376.1 248.933 li
3376.1 248.611 3376.36 248.351 3376.68 248.351 cv
3389.27 248.351 li
3390.32 248.351 3391.17 249.199 3391.17 250.245 cv
3391.17 270 li
3391.17 271.046 3390.32 271.895 3389.27 271.895 cv
cp
f
3383.63 263.576 mo
3363.07 263.576 li
3363.07 256.669 li
3383.63 256.669 li
3383.63 263.576 li
cp
f
3363.24 833.912 mo
3299.47 833.912 li
3308.32 333.963 li
3354.39 333.963 li
3363.24 833.912 li
cp
f
3354.39 328.645 mo
3308.32 328.645 li
3308.32 333.963 li
3354.39 333.963 li
3354.39 328.645 li
cp
1 1 1 rgb
f
3372.59 153.36 mo
3372.62 151.874 3371.1 150.866 3369.74 151.47 cv
3366.9 152.734 3362.78 154.135 3360.94 154.135 cv
3354.7 154.135 3343.33 146.557 3337.13 146.557 cv
3335.44 146.557 3331.36 146.557 3331.36 146.557 cv
3331.36 328.645 li
3354.97 328.645 li
3354.97 308.046 3362.63 297.797 3366.68 293.815 cv
3368.28 292.24 3369.17 290.103 3369.23 287.856 cv
3369.23 287.856 3367.33 240.63 3367.33 222.026 cv
3367.33 200.018 3372.59 153.36 3372.59 153.36 cv
cp
0 0 0 rgb
f
3273.44 234.695 mo
3286.03 234.695 li
3286.35 234.695 3286.61 234.435 3286.61 234.113 cv
3286.61 211.733 li
3286.61 211.412 3286.35 211.151 3286.03 211.151 cv
3273.44 211.151 li
3272.39 211.151 3271.55 212 3271.55 213.046 cv
3271.55 232.801 li
3271.55 233.847 3272.39 234.695 3273.44 234.695 cv
cp
f
3279.08 226.376 mo
3299.64 226.376 li
3299.64 219.47 li
3279.08 219.47 li
3279.08 226.376 li
cp
f
3273.44 197.496 mo
3286.03 197.496 li
3286.35 197.496 3286.61 197.235 3286.61 196.914 cv
3286.61 174.533 li
3286.61 174.212 3286.35 173.952 3286.03 173.952 cv
3273.44 173.952 li
3272.39 173.952 3271.55 174.8 3271.55 175.846 cv
3271.55 195.601 li
3271.55 196.647 3272.39 197.496 3273.44 197.496 cv
cp
f
3279.08 189.177 mo
3299.64 189.177 li
3299.64 182.271 li
3279.08 182.271 li
3279.08 189.177 li
cp
f
3273.44 271.895 mo
3286.03 271.895 li
3286.35 271.895 3286.61 271.634 3286.61 271.313 cv
3286.61 248.933 li
3286.61 248.611 3286.35 248.351 3286.03 248.351 cv
3273.44 248.351 li
3272.39 248.351 3271.55 249.199 3271.55 250.245 cv
3271.55 270 li
3271.55 271.046 3272.39 271.895 3273.44 271.895 cv
cp
f
3279.08 263.576 mo
3299.64 263.576 li
3299.64 256.669 li
3279.08 256.669 li
3279.08 263.576 li
cp
f
3290.13 153.36 mo
3290.09 151.874 3291.62 150.866 3292.97 151.47 cv
3295.81 152.734 3299.94 154.135 3301.78 154.135 cv
3308.01 154.135 3319.38 146.557 3325.59 146.557 cv
3327.28 146.557 3331.36 146.557 3331.36 146.557 cv
3331.36 328.645 li
3307.75 328.645 li
3307.75 308.046 3300.09 297.797 3296.04 293.815 cv
3294.43 292.24 3293.54 290.103 3293.49 287.856 cv
3293.49 287.856 3295.38 240.63 3295.38 222.026 cv
3295.38 200.018 3290.13 153.36 3290.13 153.36 cv
cp
f
3280.39 883.475 mo
3280.39 832.37 li
3280.39 831.542 3281.06 830.87 3281.89 830.87 cv
3380.83 830.87 li
3381.66 830.87 3382.33 831.542 3382.33 832.37 cv
3382.33 883.475 li
3382.33 884.303 3381.66 884.975 3380.83 884.975 cv
3281.89 884.975 li
3281.06 884.975 3280.39 884.303 3280.39 883.475 cv
cp
f
3378.29 881.933 mo
3284.43 881.933 li
3283.88 881.933 3283.43 881.485 3283.43 880.933 cv
3283.43 834.912 li
3283.43 834.36 3283.88 833.912 3284.43 833.912 cv
3378.29 833.912 li
3378.84 833.912 3379.29 834.36 3379.29 834.912 cv
3379.29 880.933 li
3379.29 881.485 3378.84 881.933 3378.29 881.933 cv
cp
1 1 1 rgb
f
3367.69 878.218 mo
3295.03 878.218 li
3294.48 878.218 3294.03 877.771 3294.03 877.218 cv
3294.03 838.627 li
3294.03 838.075 3294.48 837.627 3295.03 837.627 cv
3367.69 837.627 li
3368.24 837.627 3368.69 838.075 3368.69 838.627 cv
3368.69 877.218 li
3368.69 877.771 3368.24 878.218 3367.69 878.218 cv
cp
0 0 0 rgb
f
3280.39 993.609 mo
3280.39 942.504 li
3280.39 941.676 3281.06 941.004 3281.89 941.004 cv
3380.83 941.004 li
3381.66 941.004 3382.33 941.676 3382.33 942.504 cv
3382.33 993.609 li
3382.33 994.438 3381.66 995.109 3380.83 995.109 cv
3281.89 995.109 li
3281.06 995.109 3280.39 994.438 3280.39 993.609 cv
cp
f
3378.29 992.067 mo
3284.43 992.067 li
3283.88 992.067 3283.43 991.62 3283.43 991.067 cv
3283.43 945.047 li
3283.43 944.495 3283.88 944.047 3284.43 944.047 cv
3378.29 944.047 li
3378.84 944.047 3379.29 944.495 3379.29 945.047 cv
3379.29 991.067 li
3379.29 991.62 3378.84 992.067 3378.29 992.067 cv
cp
1 1 1 rgb
f
3367.69 988.353 mo
3295.03 988.353 li
3294.48 988.353 3294.03 987.905 3294.03 987.353 cv
3294.03 948.762 li
3294.03 948.209 3294.48 947.762 3295.03 947.762 cv
3367.69 947.762 li
3368.24 947.762 3368.69 948.209 3368.69 948.762 cv
3368.69 987.353 li
3368.69 987.905 3368.24 988.353 3367.69 988.353 cv
cp
0 0 0 rgb
f
3381.27 1042.33 mo
3281.45 1042.33 li
3281.45 1042.33 3277.91 1045.5 3277.91 1051.13 cv
3277.91 1056.75 3281.45 1059.92 3281.45 1059.92 cv
3381.27 1059.92 li
3381.27 1059.92 3384.81 1056.75 3384.81 1051.13 cv
3384.81 1045.5 3381.27 1042.33 3381.27 1042.33 cv
cp
1 1 1 rgb
f
3378.19 1017.21 mo
3285.4 1023.28 li
3284.79 1023.32 3284.27 1022.86 3284.23 1022.25 cv
3283.5 1011.11 li
3283.46 1010.51 3283.92 1009.98 3284.53 1009.95 cv
3377.32 1003.88 li
3377.92 1003.84 3378.44 1004.3 3378.48 1004.91 cv
3379.21 1016.05 li
3379.25 1016.65 3378.79 1017.17 3378.19 1017.21 cv
cp
f
3311.88 186.676 mo
3311.88 190.802 3308.53 194.147 3304.41 194.147 cv
3300.28 194.147 3296.93 190.802 3296.93 186.676 cv
3296.93 182.55 3300.28 179.205 3304.41 179.205 cv
3308.53 179.205 3311.88 182.55 3311.88 186.676 cv
cp
f
3314.13 224.205 mo
3314.13 228.331 3310.79 231.676 3306.66 231.676 cv
3302.54 231.676 3299.19 228.331 3299.19 224.205 cv
3299.19 220.079 3302.54 216.734 3306.66 216.734 cv
3310.79 216.734 3314.13 220.079 3314.13 224.205 cv
cp
f
3314.13 260.692 mo
3314.13 264.818 3310.79 268.163 3306.66 268.163 cv
3302.54 268.163 3299.19 264.818 3299.19 260.692 cv
3299.19 256.565 3302.54 253.221 3306.66 253.221 cv
3310.79 253.221 3314.13 256.565 3314.13 260.692 cv
cp
f
3350.84 186.676 mo
3350.84 190.802 3354.18 194.147 3358.31 194.147 cv
3362.44 194.147 3365.78 190.802 3365.78 186.676 cv
3365.78 182.55 3362.44 179.205 3358.31 179.205 cv
3354.18 179.205 3350.84 182.55 3350.84 186.676 cv
cp
f
3348.58 224.205 mo
3348.58 228.331 3351.92 231.676 3356.05 231.676 cv
3360.18 231.676 3363.52 228.331 3363.52 224.205 cv
3363.52 220.079 3360.18 216.734 3356.05 216.734 cv
3351.92 216.734 3348.58 220.079 3348.58 224.205 cv
cp
f
3348.58 260.692 mo
3348.58 264.818 3351.92 268.163 3356.05 268.163 cv
3360.18 268.163 3363.52 264.818 3363.52 260.692 cv
3363.52 256.565 3360.18 253.221 3356.05 253.221 cv
3351.92 253.221 3348.58 256.565 3348.58 260.692 cv
cp
f
3433.09 1060.5 mo
3433.09 1068.22 3426.83 1074.48 3419.11 1074.48 cv
3411.39 1074.48 3405.13 1068.22 3405.13 1060.5 cv
3405.13 1052.78 3411.39 1046.52 3419.11 1046.52 cv
3426.83 1046.52 3433.09 1052.78 3433.09 1060.5 cv
cp
f
3433.09 1120.2 mo
3433.09 1127.92 3426.83 1134.18 3419.11 1134.18 cv
3411.39 1134.18 3405.13 1127.92 3405.13 1120.2 cv
3405.13 1112.48 3411.39 1106.22 3419.11 1106.22 cv
3426.83 1106.22 3433.09 1112.48 3433.09 1120.2 cv
cp
f
3478.81 1034.64 mo
3478.81 1042.36 3472.55 1048.62 3464.83 1048.62 cv
3457.11 1048.62 3450.85 1042.36 3450.85 1034.64 cv
3450.85 1026.92 3457.11 1020.66 3464.83 1020.66 cv
3472.55 1020.66 3478.81 1026.92 3478.81 1034.64 cv
cp
f
3478.81 1094.34 mo
3478.81 1102.06 3472.55 1108.32 3464.83 1108.32 cv
3457.11 1108.32 3450.85 1102.06 3450.85 1094.34 cv
3450.85 1086.62 3457.11 1080.36 3464.83 1080.36 cv
3472.55 1080.36 3478.81 1086.62 3478.81 1094.34 cv
cp
f
3307.66 371.251 mo
3307.63 373.021 li
3355.08 373.021 li
3355.05 371.251 li
3307.66 371.251 li
cp
f
3307.01 407.968 mo
3306.98 409.738 li
3355.73 409.738 li
3355.7 407.968 li
3307.01 407.968 li
cp
f
3306.41 442.043 mo
3306.38 443.813 li
3356.34 443.813 li
3356.31 442.043 li
3306.41 442.043 li
cp
f
3305.84 474.36 mo
3305.81 476.13 li
3356.91 476.13 li
3356.88 474.36 li
3305.84 474.36 li
cp
f
3305.3 504.79 mo
3305.27 506.56 li
3357.45 506.56 li
3357.42 504.79 li
3305.3 504.79 li
cp
f
3304.79 533.584 mo
3304.76 535.354 li
3357.96 535.354 li
3357.93 533.584 li
3304.79 533.584 li
cp
f
3304.32 560.344 mo
3304.28 562.114 li
3358.43 562.114 li
3358.4 560.344 li
3304.32 560.344 li
cp
f
3303.86 585.912 mo
3303.83 587.682 li
3358.88 587.682 li
3358.85 585.912 li
3303.86 585.912 li
cp
f
3303.44 609.529 mo
3303.41 611.299 li
3359.3 611.299 li
3359.27 609.529 li
3303.44 609.529 li
cp
f
3303.05 632.052 mo
3303.01 633.822 li
3359.7 633.822 li
3359.67 632.052 li
3303.05 632.052 li
cp
f
3302.67 653.356 mo
3302.64 655.126 li
3360.08 655.126 li
3360.05 653.356 li
3302.67 653.356 li
cp
f
3302.31 673.446 mo
3302.28 675.216 li
3360.43 675.216 li
3360.4 673.446 li
3302.31 673.446 li
cp
f
3301.98 692.315 mo
3301.95 694.085 li
3360.77 694.085 li
3360.74 692.315 li
3301.98 692.315 li
cp
f
3301.66 710.333 mo
3301.63 712.104 li
3361.09 712.104 li
3361.05 710.333 li
3301.66 710.333 li
cp
f
3301.37 727.014 mo
3301.33 728.784 li
3361.38 728.784 li
3361.35 727.014 li
3301.37 727.014 li
cp
f
3301.08 742.962 mo
3301.05 744.732 li
3361.66 744.732 li
3361.63 742.962 li
3301.08 742.962 li
cp
f
3300.82 757.692 mo
3300.79 759.463 li
3361.92 759.463 li
3361.89 757.692 li
3300.82 757.692 li
cp
f
3300.57 771.815 mo
3300.54 773.585 li
3362.17 773.585 li
3362.14 771.815 li
3300.57 771.815 li
cp
f
3300.33 785.398 mo
3300.3 787.168 li
3362.42 787.168 li
3362.38 785.398 li
3300.33 785.398 li
cp
f
3300.11 797.782 mo
3300.08 799.552 li
3362.63 799.552 li
3362.6 797.782 li
3300.11 797.782 li
cp
f
3299.9 809.595 mo
3299.87 811.365 li
3362.84 811.365 li
3362.81 809.595 li
3299.9 809.595 li
cp
f
3363.04 822.458 mo
3363.01 820.688 li
3299.71 820.688 li
3299.67 822.458 li
3363.04 822.458 li
cp
f
3346.26 416.706 mo
3316.45 416.706 li
3315.34 416.706 3314.51 417.715 3314.71 418.805 cv
3317.58 433.97 li
3317.74 434.806 3318.47 435.411 3319.32 435.411 cv
3343.39 435.411 li
3344.24 435.411 3344.97 434.806 3345.13 433.97 cv
3348 418.805 li
3348.21 417.715 3347.37 416.706 3346.26 416.706 cv
cp
f
3346.26 481.108 mo
3316.45 481.108 li
3315.34 481.108 3314.51 482.117 3314.71 483.207 cv
3317.58 498.372 li
3317.74 499.208 3318.47 499.813 3319.32 499.813 cv
3343.39 499.813 li
3344.24 499.813 3344.97 499.208 3345.13 498.372 cv
3348 483.207 li
3348.21 482.117 3347.37 481.108 3346.26 481.108 cv
cp
f
3346.26 540.595 mo
3316.45 540.595 li
3315.34 540.595 3314.51 541.378 3314.71 542.223 cv
3317.58 553.986 li
3317.74 554.635 3318.47 555.104 3319.32 555.104 cv
3343.39 555.104 li
3344.24 555.104 3344.97 554.635 3345.13 553.986 cv
3348 542.223 li
3348.21 541.378 3347.37 540.595 3346.26 540.595 cv
cp
f
3346.26 591.351 mo
3316.45 591.351 li
3315.34 591.351 3314.51 592.134 3314.71 592.979 cv
3317.58 604.742 li
3317.74 605.391 3318.47 605.859 3319.32 605.859 cv
3343.39 605.859 li
3344.24 605.859 3344.97 605.391 3345.13 604.742 cv
3348 592.979 li
3348.21 592.134 3347.37 591.351 3346.26 591.351 cv
cp
f
3346.26 658.847 mo
3316.45 658.847 li
3315.34 658.847 3314.51 659.434 3314.71 660.068 cv
3317.58 668.888 li
3317.74 669.374 3318.47 669.726 3319.32 669.726 cv
3343.39 669.726 li
3344.24 669.726 3344.97 669.374 3345.13 668.888 cv
3348 660.068 li
3348.21 659.434 3347.37 658.847 3346.26 658.847 cv
cp
f
3346.26 714.12 mo
3316.45 714.12 li
3315.34 714.12 3314.51 714.707 3314.71 715.34 cv
3317.58 724.16 li
3317.74 724.646 3318.47 724.998 3319.32 724.998 cv
3343.39 724.998 li
3344.24 724.998 3344.97 724.646 3345.13 724.16 cv
3348 715.34 li
3348.21 714.707 3347.37 714.12 3346.26 714.12 cv
cp
f
3346.26 748.529 mo
3316.45 748.529 li
3315.34 748.529 3314.51 748.818 3314.71 749.131 cv
3317.58 753.482 li
3317.74 753.722 3318.47 753.896 3319.32 753.896 cv
3343.39 753.896 li
3344.24 753.896 3344.97 753.722 3345.13 753.482 cv
3348 749.131 li
3348.21 748.818 3347.37 748.529 3346.26 748.529 cv
cp
f
3346.26 776.808 mo
3316.45 776.808 li
3315.34 776.808 3314.51 777.098 3314.71 777.411 cv
3317.58 781.762 li
3317.74 782.001 3318.47 782.175 3319.32 782.175 cv
3343.39 782.175 li
3344.24 782.175 3344.97 782.001 3345.13 781.762 cv
3348 777.411 li
3348.21 777.098 3347.37 776.808 3346.26 776.808 cv
cp
f
3346.26 801.89 mo
3316.45 801.89 li
3315.34 801.89 3314.51 802.179 3314.71 802.492 cv
3317.58 806.843 li
3317.74 807.083 3318.47 807.257 3319.32 807.257 cv
3343.39 807.257 li
3344.24 807.257 3344.97 807.083 3345.13 806.843 cv
3348 802.492 li
3348.21 802.179 3347.37 801.89 3346.26 801.89 cv
cp
f
3304.09 1050.39 mo
3302.57 1050.38 li
3309.03 328.639 li
3309.83 260.684 li
3311.35 260.701 li
3310.55 328.654 li
3304.09 1050.39 li
cp
f
3315.3 1050.39 mo
3313.78 1050.38 li
3317.49 328.642 li
3309.83 224.262 li
3311.35 224.149 li
3319.01 328.588 li
3315.3 1050.39 li
cp
f
3326.51 1050.38 mo
3324.99 1050.38 li
3326.17 328.645 li
3307.58 186.774 li
3309.09 186.578 li
3327.69 328.547 li
3326.51 1050.38 li
cp
f
3336.2 1050.38 mo
3335.02 328.645 li
3353.62 186.578 li
3355.13 186.774 li
3336.53 328.743 li
3337.72 1050.38 li
3336.2 1050.38 li
cp
f
3347.41 1050.39 mo
3343.7 328.648 li
3351.36 224.149 li
3352.88 224.262 li
3345.22 328.701 li
3348.93 1050.38 li
3347.41 1050.39 li
cp
f
3358.62 1050.39 mo
3352.16 328.65 li
3351.36 260.701 li
3352.88 260.684 li
3353.68 328.636 li
3360.14 1050.38 li
3358.62 1050.39 li
cp
f
3304.41 190.606 mo
3302.24 190.606 3300.47 188.843 3300.47 186.676 cv
3300.47 184.508 3302.24 182.745 3304.41 182.745 cv
3306.57 182.745 3308.34 184.508 3308.34 186.676 cv
3308.34 188.843 3306.57 190.606 3304.41 190.606 cv
cp
0 0 0 rgb
f
3306.66 228.137 mo
3304.5 228.137 3302.73 226.372 3302.73 224.204 cv
3302.73 222.037 3304.5 220.273 3306.66 220.273 cv
3308.83 220.273 3310.59 222.037 3310.59 224.204 cv
3310.59 226.372 3308.83 228.137 3306.66 228.137 cv
cp
f
3306.66 264.624 mo
3304.5 264.624 3302.73 262.858 3302.73 260.691 cv
3302.73 258.523 3304.5 256.76 3306.66 256.76 cv
3308.83 256.76 3310.59 258.523 3310.59 260.691 cv
3310.59 262.858 3308.83 264.624 3306.66 264.624 cv
cp
f
3358.31 190.606 mo
3356.14 190.606 3354.38 188.843 3354.38 186.676 cv
3354.38 184.508 3356.14 182.745 3358.31 182.745 cv
3360.48 182.745 3362.24 184.508 3362.24 186.676 cv
3362.24 188.843 3360.48 190.606 3358.31 190.606 cv
cp
f
3356.05 228.137 mo
3353.88 228.137 3352.12 226.372 3352.12 224.204 cv
3352.12 222.037 3353.88 220.273 3356.05 220.273 cv
3358.22 220.273 3359.98 222.037 3359.98 224.204 cv
3359.98 226.372 3358.22 228.137 3356.05 228.137 cv
cp
f
3356.05 264.624 mo
3353.88 264.624 3352.12 262.858 3352.12 260.691 cv
3352.12 258.523 3353.88 256.76 3356.05 256.76 cv
3358.22 256.76 3359.98 258.523 3359.98 260.691 cv
3359.98 262.858 3358.22 264.624 3356.05 264.624 cv
cp
f
4266.79 972.219 mo
4266.79 947.03 4292.33 912.375 4292.33 864.208 cv
4292.33 799.125 4256.15 772.845 4241.41 764.837 cv
4239.02 763.538 4236.21 765.595 4236.76 768.263 cv
4240.06 784.479 4245.16 826.259 4209.87 826.259 cv
4170.23 826.259 4150.42 727.47 4150.42 727.47 cv
4150.42 727.47 4130.6 826.259 4090.96 826.259 cv
4055.67 826.259 4060.77 784.479 4064.08 768.263 cv
4064.62 765.595 4061.81 763.538 4059.42 764.837 cv
4044.68 772.845 4008.5 799.125 4008.5 864.208 cv
4008.5 912.375 4034.04 947.03 4034.04 972.219 cv
4034.04 1021.89 3981.01 1015.62 3981.01 1102.81 cv
3981.01 1151.98 4037.25 1198.94 4093.23 1198.94 cv
4150.42 1198.94 li
4207.6 1198.94 li
4263.58 1198.94 4319.83 1151.98 4319.83 1102.81 cv
4319.83 1015.62 4266.79 1021.89 4266.79 972.219 cv
cp
f
4206.23 263.576 mo
4185.67 263.576 li
4185.67 256.669 li
4206.23 256.669 li
4206.23 263.576 li
cp
f
4214.57 250.238 mo
4214.57 250.179 4214.51 250.138 4214.46 250.154 cv
4214.46 250.154 4200.93 252.21 4198.02 255.113 cv
4193.49 255.113 li
4193.49 265.132 li
4198.02 265.132 li
4200.93 268.036 4214.46 270.091 4214.46 270.091 cv
4214.51 270.108 4214.57 270.066 4214.57 270.008 cv
4214.57 270.008 4216.57 265.057 4216.57 260.123 cv
4216.57 255.189 4214.57 250.238 4214.57 250.238 cv
cp
f
4204.6 226.376 mo
4184.04 226.376 li
4184.04 219.47 li
4204.6 219.47 li
4204.6 226.376 li
cp
f
4212.94 213.038 mo
4212.94 212.98 4212.88 212.938 4212.83 212.955 cv
4212.83 212.955 4199.29 215.01 4196.39 217.914 cv
4191.86 217.914 li
4191.86 227.933 li
4196.39 227.933 li
4199.29 230.836 4212.83 232.892 4212.83 232.892 cv
4212.88 232.908 4212.94 232.867 4212.94 232.809 cv
4212.94 232.809 4214.94 227.857 4214.94 222.923 cv
4214.94 217.989 4212.94 213.038 4212.94 213.038 cv
cp
f
4206.23 189.177 mo
4185.67 189.177 li
4185.67 182.271 li
4206.23 182.271 li
4206.23 189.177 li
cp
f
4214.57 175.838 mo
4214.57 175.78 4214.51 175.739 4214.46 175.755 cv
4214.46 175.755 4200.93 177.811 4198.02 180.714 cv
4193.49 180.714 li
4193.49 190.733 li
4198.02 190.733 li
4200.93 193.637 4214.46 195.692 4214.46 195.692 cv
4214.51 195.708 4214.57 195.667 4214.57 195.609 cv
4214.57 195.609 4216.57 190.658 4216.57 185.724 cv
4216.57 180.79 4214.57 175.838 4214.57 175.838 cv
cp
f
4271.53 1033.66 mo
4271.53 1033.66 4266.2 1040.05 4249.14 1040.05 cv
4229.6 1040.05 4201.56 1022.64 4174.86 1022.64 cv
4137.9 1022.64 4121.19 1036.51 4096.67 1036.51 cv
4080.83 1036.51 4077.12 1029.05 4077.12 1029.05 cv
4077.12 1029.05 4085.65 992.428 4085.65 945.157 cv
4085.65 902.507 4064.68 869.809 4064.68 869.809 cv
4064.68 869.809 4077.48 869.454 4081.74 869.454 cv
4101.29 869.454 4118.53 833.912 4118.53 833.912 cv
4182.3 833.912 li
4182.3 833.912 4201.52 871.231 4224.98 871.231 cv
4252.34 871.231 4257.32 845.641 4257.32 845.641 cv
4257.32 845.641 4271.53 865.544 4271.53 896.11 cv
4271.53 929.519 4254.12 951.91 4254.12 976.789 cv
4254.12 1007.35 4271.53 1033.66 4271.53 1033.66 cv
cp
1 1 1 rgb
f
4182.3 833.912 mo
4118.53 833.912 li
4127.38 333.963 li
4173.45 333.963 li
4182.3 833.912 li
cp
0 0 0 rgb
f
4173.45 328.645 mo
4127.38 328.645 li
4127.38 333.963 li
4173.45 333.963 li
4173.45 328.645 li
cp
1 1 1 rgb
f
4191.64 153.36 mo
4191.68 151.874 4190.16 150.866 4188.8 151.47 cv
4185.96 152.734 4181.83 154.135 4180 154.135 cv
4173.76 154.135 4162.39 146.557 4156.19 146.557 cv
4154.5 146.557 4150.42 146.557 4150.42 146.557 cv
4150.42 328.645 li
4174.03 328.645 li
4174.03 308.046 4181.68 297.797 4185.74 293.815 cv
4187.34 292.24 4188.23 290.103 4188.29 287.856 cv
4188.29 287.856 4186.39 240.63 4186.39 222.026 cv
4186.39 200.018 4191.64 153.36 4191.64 153.36 cv
cp
0 0 0 rgb
f
4094.6 263.576 mo
4115.16 263.576 li
4115.16 256.669 li
4094.6 256.669 li
4094.6 263.576 li
cp
f
4086.26 250.238 mo
4086.26 250.179 4086.32 250.138 4086.37 250.154 cv
4086.37 250.154 4099.91 252.21 4102.82 255.113 cv
4107.35 255.113 li
4107.35 265.132 li
4102.82 265.132 li
4099.91 268.036 4086.37 270.091 4086.37 270.091 cv
4086.32 270.108 4086.26 270.066 4086.26 270.008 cv
4086.26 270.008 4084.26 265.057 4084.26 260.123 cv
4084.26 255.189 4086.26 250.238 4086.26 250.238 cv
cp
f
4096.23 226.376 mo
4116.79 226.376 li
4116.79 219.47 li
4096.23 219.47 li
4096.23 226.376 li
cp
f
4087.89 213.038 mo
4087.89 212.98 4087.95 212.938 4088 212.955 cv
4088 212.955 4101.54 215.01 4104.45 217.914 cv
4108.98 217.914 li
4108.98 227.933 li
4104.45 227.933 li
4101.54 230.836 4088 232.892 4088 232.892 cv
4087.95 232.908 4087.89 232.867 4087.89 232.809 cv
4087.89 232.809 4085.89 227.857 4085.89 222.923 cv
4085.89 217.989 4087.89 213.038 4087.89 213.038 cv
cp
f
4094.6 189.177 mo
4115.16 189.177 li
4115.16 182.271 li
4094.6 182.271 li
4094.6 189.177 li
cp
f
4086.26 175.838 mo
4086.26 175.78 4086.32 175.739 4086.37 175.755 cv
4086.37 175.755 4099.91 177.811 4102.82 180.714 cv
4107.35 180.714 li
4107.35 190.733 li
4102.82 190.733 li
4099.91 193.637 4086.37 195.692 4086.37 195.692 cv
4086.32 195.708 4086.26 195.667 4086.26 195.609 cv
4086.26 195.609 4084.26 190.658 4084.26 185.724 cv
4084.26 180.79 4086.26 175.838 4086.26 175.838 cv
cp
f
4109.19 153.36 mo
4109.15 151.874 4110.67 150.866 4112.03 151.47 cv
4114.87 152.734 4119 154.135 4120.83 154.135 cv
4127.07 154.135 4138.44 146.557 4144.64 146.557 cv
4146.34 146.557 4150.42 146.557 4150.42 146.557 cv
4150.42 328.645 li
4126.8 328.645 li
4126.8 308.046 4119.15 297.797 4115.09 293.815 cv
4113.49 292.24 4112.6 290.103 4112.55 287.856 cv
4112.55 287.856 4114.44 240.63 4114.44 222.026 cv
4114.44 200.018 4109.19 153.36 4109.19 153.36 cv
cp
f
4186.74 895.918 mo
4114.09 895.918 li
4113.53 895.918 4113.09 895.471 4113.09 894.918 cv
4113.09 856.328 li
4113.09 855.775 4113.53 855.328 4114.09 855.328 cv
4186.74 855.328 li
4187.3 855.328 4187.74 855.775 4187.74 856.328 cv
4187.74 894.918 li
4187.74 895.471 4187.3 895.918 4186.74 895.918 cv
cp
f
4186.74 988.353 mo
4114.09 988.353 li
4113.53 988.353 4113.09 987.905 4113.09 987.353 cv
4113.09 948.762 li
4113.09 948.209 4113.53 947.762 4114.09 947.762 cv
4186.74 947.762 li
4187.3 947.762 4187.74 948.209 4187.74 948.762 cv
4187.74 987.353 li
4187.74 987.905 4187.3 988.353 4186.74 988.353 cv
cp
f
4200.33 1042.33 mo
4100.51 1042.33 li
4100.51 1042.33 4096.97 1045.5 4096.97 1051.13 cv
4096.97 1056.75 4100.51 1059.92 4100.51 1059.92 cv
4200.33 1059.92 li
4200.33 1059.92 4203.87 1056.75 4203.87 1051.13 cv
4203.87 1045.5 4200.33 1042.33 4200.33 1042.33 cv
cp
f
4197.25 1017.21 mo
4104.46 1023.28 li
4103.85 1023.32 4103.33 1022.86 4103.29 1022.25 cv
4102.56 1011.11 li
4102.52 1010.51 4102.98 1009.98 4103.59 1009.95 cv
4196.37 1003.88 li
4196.98 1003.84 4197.5 1004.3 4197.54 1004.91 cv
4198.27 1016.05 li
4198.31 1016.65 4197.85 1017.17 4197.25 1017.21 cv
cp
f
4130.93 186.676 mo
4130.93 190.802 4127.59 194.147 4123.46 194.147 cv
4119.34 194.147 4115.99 190.802 4115.99 186.676 cv
4115.99 182.55 4119.34 179.205 4123.46 179.205 cv
4127.59 179.205 4130.93 182.55 4130.93 186.676 cv
cp
1 1 1 rgb
f
4133.19 224.205 mo
4133.19 228.331 4129.85 231.676 4125.72 231.676 cv
4121.6 231.676 4118.25 228.331 4118.25 224.205 cv
4118.25 220.079 4121.6 216.734 4125.72 216.734 cv
4129.85 216.734 4133.19 220.079 4133.19 224.205 cv
cp
f
4133.19 260.692 mo
4133.19 264.818 4129.85 268.163 4125.72 268.163 cv
4121.6 268.163 4118.25 264.818 4118.25 260.692 cv
4118.25 256.565 4121.6 253.221 4125.72 253.221 cv
4129.85 253.221 4133.19 256.565 4133.19 260.692 cv
cp
f
4169.9 186.676 mo
4169.9 190.802 4173.24 194.147 4177.37 194.147 cv
4181.49 194.147 4184.84 190.802 4184.84 186.676 cv
4184.84 182.55 4181.49 179.205 4177.37 179.205 cv
4173.24 179.205 4169.9 182.55 4169.9 186.676 cv
cp
f
4167.64 224.205 mo
4167.64 228.331 4170.98 231.676 4175.11 231.676 cv
4179.24 231.676 4182.58 228.331 4182.58 224.205 cv
4182.58 220.079 4179.24 216.734 4175.11 216.734 cv
4170.98 216.734 4167.64 220.079 4167.64 224.205 cv
cp
f
4167.64 260.692 mo
4167.64 264.818 4170.98 268.163 4175.11 268.163 cv
4179.24 268.163 4182.58 264.818 4182.58 260.692 cv
4182.58 256.565 4179.24 253.221 4175.11 253.221 cv
4170.98 253.221 4167.64 256.565 4167.64 260.692 cv
cp
f
4243.27 1073.04 mo
4243.27 1080.76 4237.01 1087.02 4229.29 1087.02 cv
4221.57 1087.02 4215.31 1080.76 4215.31 1073.04 cv
4215.31 1065.32 4221.57 1059.06 4229.29 1059.06 cv
4237.01 1059.06 4243.27 1065.32 4243.27 1073.04 cv
cp
f
4232.44 1132.74 mo
4232.44 1140.46 4226.18 1146.72 4218.46 1146.72 cv
4210.74 1146.72 4204.48 1140.46 4204.48 1132.74 cv
4204.48 1125.02 4210.74 1118.77 4218.46 1118.77 cv
4226.18 1118.77 4232.44 1125.02 4232.44 1132.74 cv
cp
f
4292.88 1061.16 mo
4292.88 1068.88 4286.62 1075.14 4278.9 1075.14 cv
4271.18 1075.14 4264.92 1068.88 4264.92 1061.16 cv
4264.92 1053.44 4271.18 1047.18 4278.9 1047.18 cv
4286.62 1047.18 4292.88 1053.44 4292.88 1061.16 cv
cp
f
4282.05 1120.86 mo
4282.05 1128.58 4275.79 1134.84 4268.07 1134.84 cv
4260.35 1134.84 4254.1 1128.58 4254.1 1120.86 cv
4254.1 1113.14 4260.35 1106.88 4268.07 1106.88 cv
4275.79 1106.88 4282.05 1113.14 4282.05 1120.86 cv
cp
f
4126.72 371.251 mo
4126.69 373.021 li
4174.14 373.021 li
4174.11 371.251 li
4126.72 371.251 li
cp
f
4126.07 407.968 mo
4126.04 409.738 li
4174.79 409.738 li
4174.76 407.968 li
4126.07 407.968 li
cp
f
4125.47 442.043 mo
4125.44 443.813 li
4175.39 443.813 li
4175.36 442.043 li
4125.47 442.043 li
cp
f
4124.9 474.36 mo
4124.86 476.13 li
4175.97 476.13 li
4175.94 474.36 li
4124.9 474.36 li
cp
f
4124.36 504.79 mo
4124.33 506.56 li
4176.51 506.56 li
4176.47 504.79 li
4124.36 504.79 li
cp
f
4123.85 533.584 mo
4123.82 535.354 li
4177.02 535.354 li
4176.98 533.584 li
4123.85 533.584 li
cp
f
4123.37 560.344 mo
4123.34 562.114 li
4177.49 562.114 li
4177.46 560.344 li
4123.37 560.344 li
cp
f
4122.92 585.912 mo
4122.89 587.682 li
4177.94 587.682 li
4177.91 585.912 li
4122.92 585.912 li
cp
f
4122.5 609.529 mo
4122.47 611.299 li
4178.36 611.299 li
4178.33 609.529 li
4122.5 609.529 li
cp
f
4122.1 632.052 mo
4122.07 633.822 li
4178.76 633.822 li
4178.73 632.052 li
4122.1 632.052 li
cp
f
4121.73 653.356 mo
4121.7 655.126 li
4179.14 655.126 li
4179.1 653.356 li
4121.73 653.356 li
cp
f
4121.37 673.446 mo
4121.34 675.216 li
4179.49 675.216 li
4179.46 673.446 li
4121.37 673.446 li
cp
f
4121.04 692.315 mo
4121.01 694.085 li
4179.83 694.085 li
4179.79 692.315 li
4121.04 692.315 li
cp
f
4120.72 710.333 mo
4120.69 712.104 li
4180.14 712.104 li
4180.11 710.333 li
4120.72 710.333 li
cp
f
4120.42 727.014 mo
4120.39 728.784 li
4180.44 728.784 li
4180.41 727.014 li
4120.42 727.014 li
cp
f
4120.14 742.962 mo
4120.11 744.732 li
4180.72 744.732 li
4180.69 742.962 li
4120.14 742.962 li
cp
f
4119.88 757.692 mo
4119.85 759.463 li
4180.98 759.463 li
4180.95 757.692 li
4119.88 757.692 li
cp
f
4119.63 771.815 mo
4119.6 773.585 li
4181.23 773.585 li
4181.2 771.815 li
4119.63 771.815 li
cp
f
4119.39 785.398 mo
4119.36 787.168 li
4181.47 787.168 li
4181.44 785.398 li
4119.39 785.398 li
cp
f
4119.17 797.782 mo
4119.14 799.552 li
4181.69 799.552 li
4181.66 797.782 li
4119.17 797.782 li
cp
f
4118.96 809.595 mo
4118.93 811.365 li
4181.9 811.365 li
4181.87 809.595 li
4118.96 809.595 li
cp
f
4182.1 822.458 mo
4182.07 820.688 li
4118.76 820.688 li
4118.73 822.458 li
4182.1 822.458 li
cp
f
4165.32 416.706 mo
4135.51 416.706 li
4134.4 416.706 4133.57 417.715 4133.77 418.805 cv
4136.64 433.97 li
4136.8 434.806 4137.53 435.411 4138.38 435.411 cv
4162.45 435.411 li
4163.3 435.411 4164.03 434.806 4164.19 433.97 cv
4167.06 418.805 li
4167.26 417.715 4166.43 416.706 4165.32 416.706 cv
cp
f
4165.32 481.108 mo
4135.51 481.108 li
4134.4 481.108 4133.57 482.117 4133.77 483.207 cv
4136.64 498.372 li
4136.8 499.208 4137.53 499.813 4138.38 499.813 cv
4162.45 499.813 li
4163.3 499.813 4164.03 499.208 4164.19 498.372 cv
4167.06 483.207 li
4167.26 482.117 4166.43 481.108 4165.32 481.108 cv
cp
f
4165.32 540.595 mo
4135.51 540.595 li
4134.4 540.595 4133.57 541.378 4133.77 542.223 cv
4136.64 553.986 li
4136.8 554.635 4137.53 555.104 4138.38 555.104 cv
4162.45 555.104 li
4163.3 555.104 4164.03 554.635 4164.19 553.986 cv
4167.06 542.223 li
4167.26 541.378 4166.43 540.595 4165.32 540.595 cv
cp
f
4165.32 591.351 mo
4135.51 591.351 li
4134.4 591.351 4133.57 592.134 4133.77 592.979 cv
4136.64 604.742 li
4136.8 605.391 4137.53 605.859 4138.38 605.859 cv
4162.45 605.859 li
4163.3 605.859 4164.03 605.391 4164.19 604.742 cv
4167.06 592.979 li
4167.26 592.134 4166.43 591.351 4165.32 591.351 cv
cp
f
4165.32 658.847 mo
4135.51 658.847 li
4134.4 658.847 4133.57 659.434 4133.77 660.068 cv
4136.64 668.888 li
4136.8 669.374 4137.53 669.726 4138.38 669.726 cv
4162.45 669.726 li
4163.3 669.726 4164.03 669.374 4164.19 668.888 cv
4167.06 660.068 li
4167.26 659.434 4166.43 658.847 4165.32 658.847 cv
cp
f
4165.32 714.12 mo
4135.51 714.12 li
4134.4 714.12 4133.57 714.707 4133.77 715.34 cv
4136.64 724.16 li
4136.8 724.646 4137.53 724.998 4138.38 724.998 cv
4162.45 724.998 li
4163.3 724.998 4164.03 724.646 4164.19 724.16 cv
4167.06 715.34 li
4167.26 714.707 4166.43 714.12 4165.32 714.12 cv
cp
f
4165.32 748.529 mo
4135.51 748.529 li
4134.4 748.529 4133.57 748.818 4133.77 749.131 cv
4136.64 753.482 li
4136.8 753.722 4137.53 753.896 4138.38 753.896 cv
4162.45 753.896 li
4163.3 753.896 4164.03 753.722 4164.19 753.482 cv
4167.06 749.131 li
4167.26 748.818 4166.43 748.529 4165.32 748.529 cv
cp
f
4165.32 776.808 mo
4135.51 776.808 li
4134.4 776.808 4133.57 777.098 4133.77 777.411 cv
4136.64 781.762 li
4136.8 782.001 4137.53 782.175 4138.38 782.175 cv
4162.45 782.175 li
4163.3 782.175 4164.03 782.001 4164.19 781.762 cv
4167.06 777.411 li
4167.26 777.098 4166.43 776.808 4165.32 776.808 cv
cp
f
4165.32 801.89 mo
4135.51 801.89 li
4134.4 801.89 4133.57 802.179 4133.77 802.492 cv
4136.64 806.843 li
4136.8 807.083 4137.53 807.257 4138.38 807.257 cv
4162.45 807.257 li
4163.3 807.257 4164.03 807.083 4164.19 806.843 cv
4167.06 802.492 li
4167.26 802.179 4166.43 801.89 4165.32 801.89 cv
cp
f
4123.15 1050.39 mo
4121.63 1050.38 li
4128.09 328.642 li
4128.89 260.678 li
4130.41 260.701 li
4129.61 328.66 li
4123.15 1050.39 li
cp
f
4134.36 1050.39 mo
4132.84 1050.38 li
4136.55 328.642 li
4128.89 224.259 li
4130.41 224.152 li
4138.07 328.595 li
4134.36 1050.39 li
cp
f
4145.57 1050.38 mo
4144.05 1050.38 li
4145.23 328.648 li
4126.64 186.777 li
4128.15 186.575 li
4146.75 328.547 li
4145.57 1050.38 li
cp
f
4155.26 1050.38 mo
4154.08 328.648 li
4172.68 186.575 li
4174.19 186.777 li
4155.59 328.749 li
4156.78 1050.38 li
4155.26 1050.38 li
cp
f
4166.47 1050.39 mo
4162.76 328.654 li
4170.42 224.152 li
4171.94 224.259 li
4164.28 328.702 li
4167.99 1050.38 li
4166.47 1050.39 li
cp
f
4177.68 1050.39 mo
4171.22 328.654 li
4170.42 260.696 li
4171.94 260.678 li
4172.74 328.636 li
4179.2 1050.38 li
4177.68 1050.39 li
cp
f
4123.46 190.606 mo
4121.3 190.606 4119.53 188.843 4119.53 186.676 cv
4119.53 184.508 4121.3 182.745 4123.46 182.745 cv
4125.63 182.745 4127.39 184.508 4127.39 186.676 cv
4127.39 188.843 4125.63 190.606 4123.46 190.606 cv
cp
0 0 0 rgb
f
4125.72 228.137 mo
4123.55 228.137 4121.79 226.372 4121.79 224.204 cv
4121.79 222.037 4123.55 220.273 4125.72 220.273 cv
4127.89 220.273 4129.65 222.037 4129.65 224.204 cv
4129.65 226.372 4127.89 228.137 4125.72 228.137 cv
cp
f
4125.72 264.624 mo
4123.55 264.624 4121.79 262.858 4121.79 260.691 cv
4121.79 258.523 4123.55 256.76 4125.72 256.76 cv
4127.89 256.76 4129.65 258.523 4129.65 260.691 cv
4129.65 262.858 4127.89 264.624 4125.72 264.624 cv
cp
f
4177.37 190.606 mo
4175.2 190.606 4173.44 188.843 4173.44 186.676 cv
4173.44 184.508 4175.2 182.745 4177.37 182.745 cv
4179.54 182.745 4181.3 184.508 4181.3 186.676 cv
4181.3 188.843 4179.54 190.606 4177.37 190.606 cv
cp
f
4175.11 228.137 mo
4172.94 228.137 4171.18 226.372 4171.18 224.204 cv
4171.18 222.037 4172.94 220.273 4175.11 220.273 cv
4177.28 220.273 4179.04 222.037 4179.04 224.204 cv
4179.04 226.372 4177.28 228.137 4175.11 228.137 cv
cp
f
4175.11 264.624 mo
4172.94 264.624 4171.18 262.858 4171.18 260.691 cv
4171.18 258.523 4172.94 256.76 4175.11 256.76 cv
4177.28 256.76 4179.04 258.523 4179.04 260.691 cv
4179.04 262.858 4177.28 264.624 4175.11 264.624 cv
cp
f
1752.31 899.513 mo
1828.58 687.19 li
1833.64 673.108 1816.51 661.618 1805.4 671.638 cv
1712.2 755.667 li
1694.14 771.951 1665.23 762.842 1659.76 739.146 cv
1626.5 594.872 li
1606.18 724.902 li
1602.92 745.755 1589.08 763.428 1569.62 771.592 cv
1547.46 780.884 li
1537.42 785.095 1531.4 795.453 1532.69 806.263 cv
1546.26 919.337 li
1547.06 925.986 1545.69 932.714 1542.35 938.521 cv
1361.71 1253.09 li
1358.77 1258.22 1363.38 1264.39 1369.14 1263.02 cv
1494.05 1233.15 li
1569.84 1215.03 1643.66 1189.47 1714.43 1156.86 cv
1805.92 1114.71 li
1811.34 1112.21 1813.92 1105.94 1811.82 1100.36 cv
1752.62 942.789 li
1747.39 928.857 1747.27 913.519 1752.31 899.513 cv
cp
f
1716.32 983.313 mo
1682.29 983.313 li
1669.37 895.752 li
1605.16 895.752 li
1605.16 792.619 li
1674.64 792.619 li
1685.24 792.619 1695.43 788.496 1703.05 781.121 cv
1807.81 679.699 li
1813.23 674.448 1822.04 680.076 1819.56 687.205 cv
1716.32 983.313 li
cp
1 1 1 rgb
f
1568.39 220.142 mo
1578.83 227.183 li
1579.09 227.363 1579.46 227.292 1579.64 227.026 cv
1592.15 208.472 li
1592.33 208.206 1592.26 207.844 1591.99 207.665 cv
1581.55 200.623 li
1580.69 200.038 1579.51 200.267 1578.92 201.134 cv
1567.88 217.512 li
1567.29 218.379 1567.52 219.557 1568.39 220.142 cv
cp
0 0 0 rgb
f
1577.72 216.399 mo
1600.58 231.823 li
1604.44 226.098 li
1581.58 210.674 li
1577.72 216.399 li
cp
f
1582.78 198.36 mo
1593.21 205.401 li
1593.48 205.581 1593.84 205.511 1594.02 205.244 cv
1606.54 186.69 li
1606.72 186.423 1606.65 186.062 1606.38 185.882 cv
1595.94 178.841 li
1595.07 178.256 1593.9 178.485 1593.31 179.353 cv
1582.27 195.729 li
1581.68 196.597 1581.91 197.775 1582.78 198.36 cv
cp
f
1592.1 194.617 mo
1614.97 210.041 li
1618.83 204.315 li
1595.97 188.891 li
1592.1 194.617 li
cp
f
1597.16 176.578 mo
1607.6 183.619 li
1607.87 183.799 1608.23 183.729 1608.41 183.462 cv
1620.93 164.908 li
1621.1 164.641 1621.03 164.28 1620.77 164.1 cv
1610.33 157.059 li
1609.46 156.474 1608.28 156.703 1607.7 157.57 cv
1596.65 173.947 li
1596.07 174.815 1596.3 175.993 1597.16 176.578 cv
cp
f
1606.49 172.834 mo
1629.36 188.259 li
1633.22 182.533 li
1610.35 167.109 li
1606.49 172.834 li
cp
f
1611.55 154.795 mo
1621.99 161.837 li
1622.26 162.017 1622.62 161.946 1622.8 161.68 cv
1635.31 143.125 li
1635.49 142.859 1635.42 142.498 1635.16 142.318 cv
1624.72 135.277 li
1623.85 134.691 1622.67 134.92 1622.09 135.788 cv
1611.04 152.166 li
1610.46 153.033 1610.68 154.21 1611.55 154.795 cv
cp
f
1620.88 151.052 mo
1643.75 166.477 li
1647.61 160.751 li
1624.74 145.327 li
1620.88 151.052 li
cp
f
1625.94 133.013 mo
1636.38 140.054 li
1636.65 140.234 1637.01 140.164 1637.19 139.897 cv
1649.7 121.343 li
1649.88 121.077 1649.81 120.715 1649.54 120.536 cv
1639.1 113.494 li
1638.24 112.909 1637.06 113.138 1636.47 114.005 cv
1625.43 130.383 li
1624.84 131.25 1625.07 132.428 1625.94 133.013 cv
cp
f
1635.27 129.27 mo
1658.13 144.694 li
1662 138.969 li
1639.13 123.545 li
1635.27 129.27 li
cp
f
1640.33 111.231 mo
1650.77 118.272 li
1651.03 118.452 1651.39 118.382 1651.57 118.115 cv
1664.09 99.561 li
1664.27 99.2949 1664.2 98.9331 1663.93 98.7534 cv
1653.49 91.7124 li
1652.63 91.127 1651.45 91.356 1650.86 92.2236 cv
1639.82 108.601 li
1639.23 109.468 1639.46 110.646 1640.33 111.231 cv
cp
f
1649.65 107.488 mo
1672.52 122.912 li
1676.38 117.187 li
1653.52 101.763 li
1649.65 107.488 li
cp
f
1658.52 785.084 mo
1594.75 785.084 li
1603.6 285.135 li
1649.67 285.135 li
1658.52 785.084 li
cp
f
1649.67 279.817 mo
1603.6 279.817 li
1603.6 285.135 li
1649.67 285.135 li
1649.67 279.817 li
cp
f
1724.13 92.0078 mo
1724.13 85.2041 1713.91 82.2881 1712.22 82.2881 cv
1683.55 82.2881 1670.4 99.5908 1649.84 131.614 cv
1620.78 176.878 1584.81 230.701 1577.07 242.266 cv
1576.36 243.331 1576.83 244.713 1578.01 245.229 cv
1585.51 248.525 1603.6 262.978 1603.6 279.817 cv
1649.67 279.817 li
1649.67 256.752 1675.53 183.856 1698.86 139.147 cv
1712.46 113.065 1724.13 97.188 1724.13 92.0078 cv
cp
f
1608.71 233.138 mo
1606.4 236.559 1601.76 237.461 1598.34 235.154 cv
1594.92 232.847 1594.01 228.204 1596.32 224.783 cv
1598.63 221.362 1603.27 220.459 1606.69 222.767 cv
1610.11 225.074 1611.02 229.717 1608.71 233.138 cv
cp
1 1 1 rgb
f
1623.1 211.356 mo
1620.79 214.777 1616.14 215.68 1612.72 213.372 cv
1609.3 211.065 1608.4 206.421 1610.71 203 cv
1613.02 199.58 1617.66 198.677 1621.08 200.984 cv
1624.5 203.292 1625.4 207.936 1623.1 211.356 cv
cp
f
1637.48 189.574 mo
1635.18 192.995 1630.53 193.897 1627.11 191.59 cv
1623.69 189.283 1622.79 184.639 1625.1 181.218 cv
1627.4 177.798 1632.05 176.895 1635.47 179.202 cv
1638.89 181.51 1639.79 186.153 1637.48 189.574 cv
cp
f
1651.87 167.792 mo
1649.56 171.212 1644.92 172.115 1641.5 169.808 cv
1638.08 167.5 1637.18 162.857 1639.48 159.436 cv
1641.79 156.016 1646.43 155.113 1649.85 157.42 cv
1653.28 159.728 1654.18 164.371 1651.87 167.792 cv
cp
f
1666.26 146.009 mo
1663.95 149.43 1659.31 150.333 1655.89 148.025 cv
1652.47 145.718 1651.56 141.075 1653.87 137.654 cv
1656.18 134.233 1660.82 133.331 1664.24 135.638 cv
1667.66 137.945 1668.57 142.588 1666.26 146.009 cv
cp
f
1680.65 124.228 mo
1678.34 127.648 1673.7 128.551 1670.27 126.243 cv
1666.85 123.936 1665.95 119.292 1668.26 115.872 cv
1670.57 112.451 1675.21 111.548 1678.63 113.855 cv
1682.05 116.163 1682.95 120.807 1680.65 124.228 cv
cp
f
1572.62 837.188 mo
1572.62 781 li
1572.62 779.895 1573.51 779 1574.62 779 cv
1678.65 779 li
1679.75 779 1680.65 779.895 1680.65 781 cv
1680.65 837.188 li
1680.65 838.293 1679.75 839.188 1678.65 839.188 cv
1574.62 839.188 li
1573.51 839.188 1572.62 838.293 1572.62 837.188 cv
cp
0 0 0 rgb
f
1673.56 833.104 mo
1579.7 833.104 li
1579.15 833.104 1578.7 832.657 1578.7 832.104 cv
1578.7 786.084 li
1578.7 785.532 1579.15 785.084 1579.7 785.084 cv
1673.56 785.084 li
1674.11 785.084 1674.56 785.532 1674.56 786.084 cv
1674.56 832.104 li
1674.56 832.657 1674.11 833.104 1673.56 833.104 cv
cp
1 1 1 rgb
f
1662.29 809.094 mo
1590.97 809.094 li
1590.05 809.094 1589.3 808.347 1589.3 807.426 cv
1589.3 790.466 li
1589.3 789.545 1590.05 788.799 1590.97 788.799 cv
1662.29 788.799 li
1663.21 788.799 1663.96 789.545 1663.96 790.467 cv
1663.96 807.426 li
1663.96 808.347 1663.21 809.094 1662.29 809.094 cv
cp
0 0 0 rgb
f
1662.29 829.39 mo
1590.97 829.39 li
1590.05 829.39 1589.3 828.643 1589.3 827.722 cv
1589.3 810.762 li
1589.3 809.841 1590.05 809.094 1590.97 809.094 cv
1662.29 809.094 li
1663.21 809.094 1663.96 809.841 1663.96 810.762 cv
1663.96 827.722 li
1663.96 828.643 1663.21 829.39 1662.29 829.39 cv
cp
f
1572.62 947.323 mo
1572.62 891.134 li
1572.62 890.029 1573.51 889.134 1574.62 889.134 cv
1678.65 889.134 li
1679.75 889.134 1680.65 890.029 1680.65 891.134 cv
1680.65 947.323 li
1680.65 948.428 1679.75 949.323 1678.65 949.323 cv
1574.62 949.323 li
1573.51 949.323 1572.62 948.428 1572.62 947.323 cv
cp
f
1673.56 943.239 mo
1579.7 943.239 li
1579.15 943.239 1578.7 942.791 1578.7 942.239 cv
1578.7 896.219 li
1578.7 895.667 1579.15 895.219 1579.7 895.219 cv
1673.56 895.219 li
1674.11 895.219 1674.56 895.667 1674.56 896.219 cv
1674.56 942.239 li
1674.56 942.791 1674.11 943.239 1673.56 943.239 cv
cp
1 1 1 rgb
f
1662.29 919.229 mo
1590.97 919.229 li
1590.05 919.229 1589.3 918.482 1589.3 917.561 cv
1589.3 900.601 li
1589.3 899.68 1590.05 898.933 1590.97 898.933 cv
1662.29 898.933 li
1663.21 898.933 1663.96 899.68 1663.96 900.601 cv
1663.96 917.561 li
1663.96 918.482 1663.21 919.229 1662.29 919.229 cv
cp
0 0 0 rgb
f
1662.29 939.524 mo
1590.97 939.524 li
1590.05 939.524 1589.3 938.777 1589.3 937.856 cv
1589.3 920.896 li
1589.3 919.975 1590.05 919.229 1590.97 919.229 cv
1662.29 919.229 li
1663.21 919.229 1663.96 919.975 1663.96 920.896 cv
1663.96 937.856 li
1663.96 938.777 1663.21 939.524 1662.29 939.524 cv
cp
f
1676.54 993.507 mo
1576.72 993.507 li
1576.72 993.507 1573.18 996.674 1573.18 1002.3 cv
1573.18 1007.92 1576.72 1011.09 1576.72 1011.09 cv
1676.54 1011.09 li
1676.54 1011.09 1680.08 1007.92 1680.08 1002.3 cv
1680.08 996.674 1676.54 993.507 1676.54 993.507 cv
cp
1 1 1 rgb
f
1673.46 968.384 mo
1580.67 974.447 li
1580.07 974.486 1579.55 974.028 1579.51 973.423 cv
1578.78 962.283 li
1578.74 961.679 1579.2 961.156 1579.8 961.116 cv
1672.59 955.054 li
1673.19 955.014 1673.72 955.473 1673.76 956.077 cv
1674.48 967.217 li
1674.52 967.822 1674.06 968.345 1673.46 968.384 cv
cp
f
1745.75 1013.48 mo
1745.75 1021.2 1739.49 1027.46 1731.77 1027.46 cv
1724.05 1027.46 1717.79 1021.2 1717.79 1013.48 cv
1717.79 1005.76 1724.05 999.501 1731.77 999.501 cv
1739.49 999.501 1745.75 1005.76 1745.75 1013.48 cv
cp
f
1714.38 1094.91 mo
1714.38 1102.63 1708.13 1108.89 1700.41 1108.89 cv
1692.69 1108.89 1686.43 1102.63 1686.43 1094.91 cv
1686.43 1087.19 1692.69 1080.93 1700.41 1080.93 cv
1708.13 1080.93 1714.38 1087.19 1714.38 1094.91 cv
cp
f
1603.98 798.946 mo
1603.98 800.919 1602.38 802.518 1600.41 802.518 cv
1598.44 802.518 1596.84 800.919 1596.84 798.946 cv
1596.84 796.974 1598.44 795.375 1600.41 795.375 cv
1602.38 795.375 1603.98 796.974 1603.98 798.946 cv
cp
f
1614.47 798.946 mo
1614.47 800.919 1612.87 802.518 1610.9 802.518 cv
1608.92 802.518 1607.33 800.919 1607.33 798.946 cv
1607.33 796.974 1608.92 795.375 1610.9 795.375 cv
1612.87 795.375 1614.47 796.974 1614.47 798.946 cv
cp
f
1624.96 798.946 mo
1624.96 800.919 1623.36 802.518 1621.39 802.518 cv
1619.41 802.518 1617.81 800.919 1617.81 798.946 cv
1617.81 796.974 1619.41 795.375 1621.39 795.375 cv
1623.36 795.375 1624.96 796.974 1624.96 798.946 cv
cp
f
1635.45 798.946 mo
1635.45 800.919 1633.85 802.518 1631.88 802.518 cv
1629.9 802.518 1628.3 800.919 1628.3 798.946 cv
1628.3 796.974 1629.9 795.375 1631.88 795.375 cv
1633.85 795.375 1635.45 796.974 1635.45 798.946 cv
cp
f
1645.94 798.946 mo
1645.94 800.919 1644.34 802.518 1642.36 802.518 cv
1640.39 802.518 1638.79 800.919 1638.79 798.946 cv
1638.79 796.974 1640.39 795.375 1642.36 795.375 cv
1644.34 795.375 1645.94 796.974 1645.94 798.946 cv
cp
f
1656.43 798.946 mo
1656.43 800.919 1654.83 802.518 1652.85 802.518 cv
1650.88 802.518 1649.28 800.919 1649.28 798.946 cv
1649.28 796.974 1650.88 795.375 1652.85 795.375 cv
1654.83 795.375 1656.43 796.974 1656.43 798.946 cv
cp
f
1603.98 819.242 mo
1603.98 821.214 1602.38 822.813 1600.41 822.813 cv
1598.44 822.813 1596.84 821.214 1596.84 819.242 cv
1596.84 817.27 1598.44 815.67 1600.41 815.67 cv
1602.38 815.67 1603.98 817.27 1603.98 819.242 cv
cp
f
1614.47 819.242 mo
1614.47 821.214 1612.87 822.813 1610.9 822.813 cv
1608.92 822.813 1607.33 821.214 1607.33 819.242 cv
1607.33 817.27 1608.92 815.67 1610.9 815.67 cv
1612.87 815.67 1614.47 817.27 1614.47 819.242 cv
cp
f
1624.96 819.242 mo
1624.96 821.214 1623.36 822.813 1621.39 822.813 cv
1619.41 822.813 1617.81 821.214 1617.81 819.242 cv
1617.81 817.27 1619.41 815.67 1621.39 815.67 cv
1623.36 815.67 1624.96 817.27 1624.96 819.242 cv
cp
f
1635.45 819.242 mo
1635.45 821.214 1633.85 822.813 1631.88 822.813 cv
1629.9 822.813 1628.3 821.214 1628.3 819.242 cv
1628.3 817.27 1629.9 815.67 1631.88 815.67 cv
1633.85 815.67 1635.45 817.27 1635.45 819.242 cv
cp
f
1645.94 819.242 mo
1645.94 821.214 1644.34 822.813 1642.36 822.813 cv
1640.39 822.813 1638.79 821.214 1638.79 819.242 cv
1638.79 817.27 1640.39 815.67 1642.36 815.67 cv
1644.34 815.67 1645.94 817.27 1645.94 819.242 cv
cp
f
1656.43 819.242 mo
1656.43 821.214 1654.83 822.813 1652.85 822.813 cv
1650.88 822.813 1649.28 821.214 1649.28 819.242 cv
1649.28 817.27 1650.88 815.67 1652.85 815.67 cv
1654.83 815.67 1656.43 817.27 1656.43 819.242 cv
cp
f
1603.98 909.081 mo
1603.98 911.053 1602.38 912.652 1600.41 912.652 cv
1598.44 912.652 1596.84 911.053 1596.84 909.081 cv
1596.84 907.108 1598.44 905.51 1600.41 905.51 cv
1602.38 905.51 1603.98 907.108 1603.98 909.081 cv
cp
f
1614.47 909.081 mo
1614.47 911.053 1612.87 912.652 1610.9 912.652 cv
1608.92 912.652 1607.33 911.053 1607.33 909.081 cv
1607.33 907.108 1608.92 905.51 1610.9 905.51 cv
1612.87 905.51 1614.47 907.108 1614.47 909.081 cv
cp
f
1624.96 909.081 mo
1624.96 911.053 1623.36 912.652 1621.39 912.652 cv
1619.41 912.652 1617.81 911.053 1617.81 909.081 cv
1617.81 907.108 1619.41 905.51 1621.39 905.51 cv
1623.36 905.51 1624.96 907.108 1624.96 909.081 cv
cp
f
1635.45 909.081 mo
1635.45 911.053 1633.85 912.652 1631.88 912.652 cv
1629.9 912.652 1628.3 911.053 1628.3 909.081 cv
1628.3 907.108 1629.9 905.51 1631.88 905.51 cv
1633.85 905.51 1635.45 907.108 1635.45 909.081 cv
cp
f
1645.94 909.081 mo
1645.94 911.053 1644.34 912.652 1642.36 912.652 cv
1640.39 912.652 1638.79 911.053 1638.79 909.081 cv
1638.79 907.108 1640.39 905.51 1642.36 905.51 cv
1644.34 905.51 1645.94 907.108 1645.94 909.081 cv
cp
f
1656.43 909.081 mo
1656.43 911.053 1654.83 912.652 1652.85 912.652 cv
1650.88 912.652 1649.28 911.053 1649.28 909.081 cv
1649.28 907.108 1650.88 905.51 1652.85 905.51 cv
1654.83 905.51 1656.43 907.108 1656.43 909.081 cv
cp
f
1603.98 929.376 mo
1603.98 931.349 1602.38 932.948 1600.41 932.948 cv
1598.44 932.948 1596.84 931.349 1596.84 929.376 cv
1596.84 927.404 1598.44 925.805 1600.41 925.805 cv
1602.38 925.805 1603.98 927.404 1603.98 929.376 cv
cp
f
1614.47 929.376 mo
1614.47 931.349 1612.87 932.948 1610.9 932.948 cv
1608.92 932.948 1607.33 931.349 1607.33 929.376 cv
1607.33 927.404 1608.92 925.805 1610.9 925.805 cv
1612.87 925.805 1614.47 927.404 1614.47 929.376 cv
cp
f
1624.96 929.376 mo
1624.96 931.349 1623.36 932.948 1621.39 932.948 cv
1619.41 932.948 1617.81 931.349 1617.81 929.376 cv
1617.81 927.404 1619.41 925.805 1621.39 925.805 cv
1623.36 925.805 1624.96 927.404 1624.96 929.376 cv
cp
f
1635.45 929.376 mo
1635.45 931.349 1633.85 932.948 1631.88 932.948 cv
1629.9 932.948 1628.3 931.349 1628.3 929.376 cv
1628.3 927.404 1629.9 925.805 1631.88 925.805 cv
1633.85 925.805 1635.45 927.404 1635.45 929.376 cv
cp
f
1645.94 929.376 mo
1645.94 931.349 1644.34 932.948 1642.36 932.948 cv
1640.39 932.948 1638.79 931.349 1638.79 929.376 cv
1638.79 927.404 1640.39 925.805 1642.36 925.805 cv
1644.34 925.805 1645.94 927.404 1645.94 929.376 cv
cp
f
1656.43 929.376 mo
1656.43 931.349 1654.83 932.948 1652.85 932.948 cv
1650.88 932.948 1649.28 931.349 1649.28 929.376 cv
1649.28 927.404 1650.88 925.805 1652.85 925.805 cv
1654.83 925.805 1656.43 927.404 1656.43 929.376 cv
cp
f
1602.94 322.423 mo
1602.9 324.193 li
1650.36 324.193 li
1650.33 322.423 li
1602.94 322.423 li
cp
f
1602.29 359.14 mo
1602.25 360.91 li
1651.01 360.91 li
1650.98 359.14 li
1602.29 359.14 li
cp
f
1601.68 393.215 mo
1601.65 394.985 li
1651.61 394.985 li
1651.58 393.215 li
1601.68 393.215 li
cp
f
1601.11 425.532 mo
1601.08 427.302 li
1652.18 427.302 li
1652.15 425.532 li
1601.11 425.532 li
cp
f
1600.57 455.961 mo
1600.54 457.731 li
1652.72 457.731 li
1652.69 455.961 li
1600.57 455.961 li
cp
f
1600.06 484.756 mo
1600.03 486.526 li
1653.23 486.526 li
1653.2 484.756 li
1600.06 484.756 li
cp
f
1599.59 511.516 mo
1599.56 513.286 li
1653.7 513.286 li
1653.67 511.516 li
1599.59 511.516 li
cp
f
1599.14 537.083 mo
1599.1 538.853 li
1654.16 538.853 li
1654.13 537.083 li
1599.14 537.083 li
cp
f
1598.72 560.7 mo
1598.69 562.47 li
1654.57 562.47 li
1654.54 560.7 li
1598.72 560.7 li
cp
f
1598.32 583.224 mo
1598.29 584.994 li
1654.97 584.994 li
1654.94 583.224 li
1598.32 583.224 li
cp
f
1597.94 604.528 mo
1597.91 606.298 li
1655.35 606.298 li
1655.32 604.528 li
1597.94 604.528 li
cp
f
1597.59 624.618 mo
1597.56 626.388 li
1655.71 626.388 li
1655.67 624.618 li
1597.59 624.618 li
cp
f
1597.25 643.486 mo
1597.22 645.257 li
1656.04 645.257 li
1656.01 643.486 li
1597.25 643.486 li
cp
f
1596.93 661.505 mo
1596.9 663.275 li
1656.36 663.275 li
1656.33 661.505 li
1596.93 661.505 li
cp
f
1596.64 678.186 mo
1596.61 679.956 li
1656.65 679.956 li
1656.62 678.186 li
1596.64 678.186 li
cp
f
1596.36 694.134 mo
1596.32 695.904 li
1656.94 695.904 li
1656.91 694.134 li
1596.36 694.134 li
cp
f
1596.1 708.864 mo
1596.06 710.634 li
1657.2 710.634 li
1657.17 708.864 li
1596.1 708.864 li
cp
f
1595.85 722.987 mo
1595.81 724.757 li
1657.45 724.757 li
1657.42 722.987 li
1595.85 722.987 li
cp
f
1595.6 736.57 mo
1595.57 738.34 li
1657.69 738.34 li
1657.66 736.57 li
1595.6 736.57 li
cp
f
1595.39 748.953 mo
1595.35 750.723 li
1657.91 750.723 li
1657.88 748.953 li
1595.39 748.953 li
cp
f
1595.18 760.766 mo
1595.15 762.536 li
1658.12 762.536 li
1658.08 760.766 li
1595.18 760.766 li
cp
f
1658.31 773.63 mo
1658.28 771.86 li
1594.98 771.86 li
1594.95 773.63 li
1658.31 773.63 li
cp
f
1629.88 441.632 mo
1629.88 443.428 1628.43 444.885 1626.63 444.885 cv
1624.83 444.885 1623.38 443.428 1623.38 441.632 cv
1623.38 439.835 1624.83 438.379 1626.63 438.379 cv
1628.43 438.379 1629.88 439.835 1629.88 441.632 cv
cp
f
1629.88 377.062 mo
1629.88 378.859 1628.43 380.315 1626.63 380.315 cv
1624.83 380.315 1623.38 378.859 1623.38 377.062 cv
1623.38 375.266 1624.83 373.809 1626.63 373.809 cv
1628.43 373.809 1629.88 375.266 1629.88 377.062 cv
cp
f
1629.88 499.021 mo
1629.88 500.817 1628.43 502.274 1626.63 502.274 cv
1624.83 502.274 1623.38 500.817 1623.38 499.021 cv
1623.38 497.225 1624.83 495.768 1626.63 495.768 cv
1628.43 495.768 1629.88 497.225 1629.88 499.021 cv
cp
f
1629.88 549.777 mo
1629.88 551.573 1628.43 553.03 1626.63 553.03 cv
1624.83 553.03 1623.38 551.573 1623.38 549.777 cv
1623.38 547.98 1624.83 546.524 1626.63 546.524 cv
1628.43 546.524 1629.88 547.98 1629.88 549.777 cv
cp
f
1629.88 670.73 mo
1629.88 672.527 1628.43 673.983 1626.63 673.983 cv
1624.83 673.983 1623.38 672.527 1623.38 670.73 cv
1623.38 668.934 1624.83 667.478 1626.63 667.478 cv
1628.43 667.478 1629.88 668.934 1629.88 670.73 cv
cp
f
1629.88 702.384 mo
1629.88 704.181 1628.43 705.637 1626.63 705.637 cv
1624.83 705.637 1623.38 704.181 1623.38 702.384 cv
1623.38 700.587 1624.83 699.131 1626.63 699.131 cv
1628.43 699.131 1629.88 700.587 1629.88 702.384 cv
cp
f
1629.88 730.663 mo
1629.88 732.459 1628.43 733.916 1626.63 733.916 cv
1624.83 733.916 1623.38 732.459 1623.38 730.663 cv
1623.38 728.867 1624.83 727.41 1626.63 727.41 cv
1628.43 727.41 1629.88 728.867 1629.88 730.663 cv
cp
f
1629.88 755.745 mo
1629.88 757.542 1628.43 758.998 1626.63 758.998 cv
1624.83 758.998 1623.38 757.542 1623.38 755.745 cv
1623.38 753.948 1624.83 752.492 1626.63 752.492 cv
1628.43 752.492 1629.88 753.948 1629.88 755.745 cv
cp
f
1612.18 615.458 mo
1612.18 617.254 1610.73 618.711 1608.93 618.711 cv
1607.13 618.711 1605.68 617.254 1605.68 615.458 cv
1605.68 613.661 1607.13 612.205 1608.93 612.205 cv
1610.73 612.205 1612.18 613.661 1612.18 615.458 cv
cp
f
1647.58 615.458 mo
1647.58 617.254 1646.13 618.711 1644.33 618.711 cv
1642.53 618.711 1641.08 617.254 1641.08 615.458 cv
1641.08 613.661 1642.53 612.205 1644.33 612.205 cv
1646.13 612.205 1647.58 613.661 1647.58 615.458 cv
cp
f
1599.37 1001.56 mo
1597.84 1001.55 li
1604.71 228.953 li
1606.23 228.965 li
1605.83 279.822 li
1599.37 1001.56 li
cp
f
1610.58 1001.56 mo
1609.06 1001.55 li
1612.77 279.814 li
1619.09 207.113 li
1620.61 207.244 li
1614.29 279.882 li
1610.58 1001.56 li
cp
f
1621.79 1001.56 mo
1620.26 1001.56 li
1621.45 279.817 li
1633.49 185.3 li
1635 185.491 li
1622.96 279.912 li
1621.79 1001.56 li
cp
f
1631.48 1001.56 mo
1630.29 279.817 li
1647.88 163.5 li
1649.39 163.725 li
1631.81 279.93 li
1633 1001.56 li
1631.48 1001.56 li
cp
f
1642.68 1001.56 mo
1638.98 279.819 li
1662.27 141.704 li
1663.77 141.96 li
1640.48 279.944 li
1644.2 1001.55 li
1642.68 1001.56 li
cp
f
1653.9 1001.56 mo
1647.44 279.822 li
1676.71 119.912 li
1678.2 120.186 li
1648.95 279.954 li
1655.42 1001.55 li
1653.9 1001.56 li
cp
f
1600.31 232.22 mo
1598.52 231.008 1598.04 228.559 1599.26 226.762 cv
1600.47 224.964 1602.92 224.489 1604.71 225.701 cv
1606.51 226.913 1606.98 229.36 1605.77 231.158 cv
1604.56 232.955 1602.11 233.432 1600.31 232.22 cv
cp
0 0 0 rgb
f
1614.7 210.438 mo
1612.91 209.225 1612.43 206.776 1613.64 204.979 cv
1614.85 203.182 1617.3 202.707 1619.1 203.918 cv
1620.9 205.131 1621.37 207.578 1620.16 209.375 cv
1618.95 211.172 1616.5 211.649 1614.7 210.438 cv
cp
f
1629.09 188.655 mo
1627.29 187.443 1626.82 184.994 1628.03 183.197 cv
1629.24 181.4 1631.69 180.924 1633.49 182.136 cv
1635.28 183.349 1635.76 185.796 1634.55 187.593 cv
1633.34 189.39 1630.89 189.867 1629.09 188.655 cv
cp
f
1643.48 166.873 mo
1641.68 165.661 1641.21 163.212 1642.42 161.415 cv
1643.63 159.618 1646.08 159.142 1647.88 160.354 cv
1649.67 161.566 1650.15 164.014 1648.94 165.811 cv
1647.72 167.608 1645.28 168.085 1643.48 166.873 cv
cp
f
1657.87 145.091 mo
1656.07 143.879 1655.59 141.43 1656.81 139.633 cv
1658.02 137.836 1660.47 137.36 1662.26 138.572 cv
1664.06 139.784 1664.54 142.231 1663.32 144.029 cv
1662.11 145.826 1659.66 146.303 1657.87 145.091 cv
cp
f
1672.25 123.309 mo
1670.46 122.097 1669.98 119.647 1671.19 117.851 cv
1672.41 116.054 1674.85 115.578 1676.65 116.79 cv
1678.45 118.002 1678.92 120.449 1677.71 122.247 cv
1676.5 124.044 1674.05 124.521 1672.25 123.309 cv
cp
f
3860.38 889.867 mo
3925.87 705.19 li
3927 702.001 3927.22 698.561 3926.51 695.253 cv
3920.23 666.021 li
3919.53 662.757 3915.16 662.103 3913.56 665.033 cv
3897.26 694.93 3840.53 792.07 3791.98 792.07 cv
3753.62 792.07 3736.95 603.78 3736.95 603.78 cv
3736.95 603.78 3730.16 742.931 3701.63 742.931 cv
3675.83 742.931 3660.53 698.264 3655.55 680.913 cv
3654.8 678.284 3651.33 677.742 3649.8 680.011 cv
3639.76 694.926 li
3636.28 700.084 3634.87 706.36 3635.81 712.509 cv
3661.34 881.027 li
3664.18 899.77 3660.64 918.923 3651.29 935.415 cv
3504.54 1194.31 li
3499.29 1203.68 3497.22 1214.51 3498.64 1225.16 cv
3501.12 1243.8 li
3501.54 1246.98 3505.5 1248.18 3507.59 1245.76 cv
3536.92 1211.85 3680.65 1052.98 3799.59 1052.98 cv
3863.63 1052.98 3898.19 1112.27 3898.19 1112.27 cv
3907.38 1074.54 li
3860.9 945.921 li
3854.13 927.882 3853.94 908.029 3860.38 889.867 cv
cp
f
3795 219.796 mo
3785.21 227.72 li
3784.96 227.922 3784.6 227.884 3784.39 227.634 cv
3770.31 210.242 li
3770.11 209.992 3770.15 209.625 3770.4 209.423 cv
3780.18 201.499 li
3781 200.84 3782.19 200.965 3782.85 201.779 cv
3795.28 217.131 li
3795.94 217.945 3795.81 219.138 3795 219.796 cv
cp
f
3785.38 216.88 mo
3763.94 234.239 li
3759.6 228.872 li
3781.03 211.513 li
3785.38 216.88 li
cp
f
3778.77 199.351 mo
3768.98 207.275 li
3768.73 207.477 3768.37 207.438 3768.16 207.189 cv
3754.08 189.796 li
3753.88 189.546 3753.92 189.18 3754.17 188.978 cv
3763.95 181.054 li
3764.76 180.395 3765.96 180.521 3766.62 181.333 cv
3779.05 196.686 li
3779.71 197.499 3779.58 198.692 3778.77 199.351 cv
cp
f
3769.15 196.435 mo
3747.71 213.793 li
3743.37 208.426 li
3764.8 191.067 li
3769.15 196.435 li
cp
f
3762.54 178.905 mo
3752.75 186.83 li
3752.5 187.032 3752.13 186.993 3751.93 186.744 cv
3737.85 169.351 li
3737.65 169.101 3737.68 168.735 3737.93 168.533 cv
3747.72 160.608 li
3748.53 159.95 3749.73 160.075 3750.38 160.888 cv
3762.82 176.241 li
3763.47 177.054 3763.35 178.247 3762.54 178.905 cv
cp
f
3752.92 175.989 mo
3731.48 193.348 li
3727.14 187.98 li
3748.57 170.622 li
3752.92 175.989 li
cp
f
3746.3 158.46 mo
3736.52 166.384 li
3736.27 166.586 3735.9 166.548 3735.7 166.298 cv
3721.62 148.905 li
3721.41 148.656 3721.45 148.29 3721.7 148.087 cv
3731.49 140.163 li
3732.3 139.504 3733.49 139.63 3734.15 140.443 cv
3746.58 155.795 li
3747.24 156.608 3747.12 157.801 3746.3 158.46 cv
cp
f
3736.69 155.544 mo
3715.25 172.903 li
3710.9 167.535 li
3732.34 150.177 li
3736.69 155.544 li
cp
f
3730.07 138.015 mo
3720.29 145.939 li
3720.04 146.141 3719.67 146.103 3719.47 145.853 cv
3705.38 128.46 li
3705.18 128.21 3705.22 127.844 3705.47 127.642 cv
3715.26 119.717 li
3716.07 119.059 3717.26 119.184 3717.92 119.997 cv
3730.35 135.35 li
3731.01 136.163 3730.89 137.356 3730.07 138.015 cv
cp
f
3720.46 135.099 mo
3699.02 152.458 li
3694.67 147.09 li
3716.11 129.731 li
3720.46 135.099 li
cp
f
3713.84 117.569 mo
3704.06 125.494 li
3703.81 125.696 3703.44 125.657 3703.24 125.408 cv
3689.15 108.015 li
3688.95 107.765 3688.99 107.398 3689.24 107.196 cv
3699.02 99.272 li
3699.84 98.6138 3701.03 98.7388 3701.69 99.5522 cv
3714.12 114.904 li
3714.78 115.718 3714.66 116.911 3713.84 117.569 cv
cp
f
3704.22 114.653 mo
3682.79 132.012 li
3678.44 126.645 li
3699.88 109.286 li
3704.22 114.653 li
cp
f
3768.76 793.992 mo
3704.99 793.992 li
3713.84 294.043 li
3759.91 294.043 li
3768.76 793.992 li
cp
f
3759.91 288.725 mo
3713.84 288.725 li
3713.84 294.043 li
3759.91 294.043 li
3759.91 288.725 li
cp
f
3647.35 98.561 mo
3676.84 109.889 li
3680.01 111.106 3682.79 113.146 3684.91 115.8 cv
3780.55 235.754 li
3781.49 236.94 3781.31 238.617 3780.21 239.662 cv
3769.41 249.926 3759.91 268.74 3759.91 288.725 cv
3713.84 288.725 li
3713.84 257.889 3655 123.72 3645.44 100.492 cv
3644.95 99.2891 3646.14 98.0947 3647.35 98.561 cv
cp
f
3755.97 236.257 mo
3758.56 239.463 3763.27 239.958 3766.47 237.361 cv
3769.68 234.765 3770.17 230.06 3767.58 226.854 cv
3764.98 223.646 3760.28 223.152 3757.07 225.749 cv
3753.86 228.346 3753.37 233.05 3755.97 236.257 cv
cp
1 1 1 rgb
f
3739.73 215.812 mo
3742.33 219.018 3747.04 219.513 3750.24 216.916 cv
3753.45 214.319 3753.94 209.615 3751.35 206.408 cv
3748.75 203.201 3744.04 202.707 3740.84 205.304 cv
3737.63 207.9 3737.14 212.605 3739.73 215.812 cv
cp
f
3723.5 195.366 mo
3726.1 198.573 3730.8 199.067 3734.01 196.471 cv
3737.22 193.874 3737.71 189.169 3735.12 185.963 cv
3732.52 182.756 3727.81 182.261 3724.61 184.858 cv
3721.4 187.455 3720.91 192.16 3723.5 195.366 cv
cp
f
3707.27 174.921 mo
3709.87 178.127 3714.57 178.622 3717.78 176.025 cv
3720.99 173.428 3721.48 168.724 3718.88 165.518 cv
3716.29 162.311 3711.58 161.816 3708.38 164.413 cv
3705.17 167.009 3704.67 171.714 3707.27 174.921 cv
cp
f
3691.04 154.476 mo
3693.64 157.682 3698.34 158.176 3701.55 155.58 cv
3704.75 152.983 3705.25 148.279 3702.65 145.072 cv
3700.06 141.865 3695.35 141.371 3692.14 143.968 cv
3688.94 146.564 3688.44 151.269 3691.04 154.476 cv
cp
f
3674.81 134.03 mo
3677.41 137.237 3682.11 137.731 3685.32 135.135 cv
3688.52 132.538 3689.02 127.833 3686.42 124.626 cv
3683.82 121.42 3679.12 120.925 3675.91 123.522 cv
3672.71 126.119 3672.21 130.824 3674.81 134.03 cv
cp
f
3838.6 952.146 mo
3838.6 959.867 3832.35 966.126 3824.63 966.126 cv
3816.91 966.126 3810.65 959.867 3810.65 952.146 cv
3810.65 944.427 3816.91 938.168 3824.63 938.168 cv
3832.35 938.168 3838.6 944.427 3838.6 952.146 cv
cp
f
3866.56 1029 mo
3866.56 1036.72 3860.3 1042.98 3852.58 1042.98 cv
3844.86 1042.98 3838.6 1036.72 3838.6 1029 cv
3838.6 1021.28 3844.86 1015.02 3852.58 1015.02 cv
3860.3 1015.02 3866.56 1021.28 3866.56 1029 cv
cp
f
3780.54 950.066 mo
3693.21 950.066 li
3689.73 950.066 3686.91 952.886 3686.91 956.363 cv
3686.91 989.673 li
3686.91 993.15 3689.73 995.971 3693.21 995.971 cv
3693.21 995.971 li
3696.68 995.971 3699.5 998.79 3699.5 1002.27 cv
3699.5 1022.7 li
3699.5 1026.18 3702.32 1029 3705.8 1029 cv
3767.94 1029 li
3771.42 1029 3774.24 1026.18 3774.24 1022.7 cv
3774.24 1002.27 li
3774.24 998.79 3777.06 995.971 3780.54 995.971 cv
3780.54 995.971 li
3784.01 995.971 3786.83 993.15 3786.83 989.673 cv
3786.83 956.363 li
3786.83 952.886 3784.01 950.066 3780.54 950.066 cv
cp
f
3705.8 1027.23 mo
3703.3 1027.23 3701.27 1025.2 3701.27 1022.7 cv
3701.27 1002.27 li
3701.27 997.82 3697.65 994.201 3693.21 994.201 cv
3690.71 994.201 3688.68 992.168 3688.68 989.672 cv
3688.68 956.363 li
3688.68 953.867 3690.71 951.838 3693.21 951.838 cv
3780.54 951.838 li
3783.03 951.838 3785.06 953.867 3785.06 956.363 cv
3785.06 989.672 li
3785.06 992.168 3783.03 994.201 3780.54 994.201 cv
3776.09 994.201 3772.47 997.82 3772.47 1002.27 cv
3772.47 1022.7 li
3772.47 1025.2 3770.44 1027.23 3767.94 1027.23 cv
3705.8 1027.23 li
cp
0 0 0 rgb
f
3705.8 1025.46 mo
3704.28 1025.46 3703.04 1024.22 3703.04 1022.7 cv
3703.04 1002.27 li
3703.04 996.846 3698.63 992.431 3693.21 992.431 cv
3691.69 992.431 3690.45 991.193 3690.45 989.672 cv
3690.45 956.363 li
3690.45 954.845 3691.69 953.607 3693.21 953.607 cv
3780.54 953.607 li
3782.06 953.607 3783.29 954.845 3783.29 956.363 cv
3783.29 989.672 li
3783.29 991.193 3782.06 992.431 3780.54 992.431 cv
3775.11 992.431 3770.7 996.846 3770.7 1002.27 cv
3770.7 1022.7 li
3770.7 1024.22 3769.46 1025.46 3767.94 1025.46 cv
3705.8 1025.46 li
cp
1 1 1 rgb
f
3784.36 852.633 mo
3690.5 852.633 li
3689.95 852.633 3689.5 852.185 3689.5 851.633 cv
3689.5 805.612 li
3689.5 805.06 3689.95 804.612 3690.5 804.612 cv
3784.36 804.612 li
3784.91 804.612 3785.36 805.06 3785.36 805.612 cv
3785.36 851.633 li
3785.36 852.185 3784.91 852.633 3784.36 852.633 cv
cp
f
3773.09 828.623 mo
3701.77 828.623 li
3700.85 828.623 3700.1 827.876 3700.1 826.955 cv
3700.1 809.995 li
3700.1 809.074 3700.85 808.327 3701.77 808.327 cv
3773.09 808.327 li
3774.01 808.327 3774.76 809.074 3774.76 809.995 cv
3774.76 826.955 li
3774.76 827.876 3774.01 828.623 3773.09 828.623 cv
cp
0 0 0 rgb
f
3773.09 848.918 mo
3701.77 848.918 li
3700.85 848.918 3700.1 848.171 3700.1 847.25 cv
3700.1 830.291 li
3700.1 829.369 3700.85 828.623 3701.77 828.623 cv
3773.09 828.623 li
3774.01 828.623 3774.76 829.369 3774.76 830.291 cv
3774.76 847.25 li
3774.76 848.171 3774.01 848.918 3773.09 848.918 cv
cp
f
3784.36 945.067 mo
3690.5 945.067 li
3689.95 945.067 3689.5 944.619 3689.5 944.067 cv
3689.5 898.047 li
3689.5 897.494 3689.95 897.047 3690.5 897.047 cv
3784.36 897.047 li
3784.91 897.047 3785.36 897.494 3785.36 898.047 cv
3785.36 944.067 li
3785.36 944.619 3784.91 945.067 3784.36 945.067 cv
cp
1 1 1 rgb
f
3773.09 921.057 mo
3701.77 921.057 li
3700.85 921.057 3700.1 920.31 3700.1 919.389 cv
3700.1 902.429 li
3700.1 901.508 3700.85 900.761 3701.77 900.761 cv
3773.09 900.761 li
3774.01 900.761 3774.76 901.508 3774.76 902.429 cv
3774.76 919.389 li
3774.76 920.31 3774.01 921.057 3773.09 921.057 cv
cp
0 0 0 rgb
f
3773.09 941.352 mo
3701.77 941.352 li
3700.85 941.352 3700.1 940.605 3700.1 939.685 cv
3700.1 922.725 li
3700.1 921.803 3700.85 921.057 3701.77 921.057 cv
3773.09 921.057 li
3774.01 921.057 3774.76 921.803 3774.76 922.725 cv
3774.76 939.685 li
3774.76 940.605 3774.01 941.352 3773.09 941.352 cv
cp
f
3714.78 818.475 mo
3714.78 820.447 3713.18 822.046 3711.21 822.046 cv
3709.23 822.046 3707.63 820.447 3707.63 818.475 cv
3707.63 816.502 3709.23 814.904 3711.21 814.904 cv
3713.18 814.904 3714.78 816.502 3714.78 818.475 cv
cp
1 1 1 rgb
f
3725.27 818.475 mo
3725.27 820.447 3723.67 822.046 3721.69 822.046 cv
3719.72 822.046 3718.12 820.447 3718.12 818.475 cv
3718.12 816.502 3719.72 814.904 3721.69 814.904 cv
3723.67 814.904 3725.27 816.502 3725.27 818.475 cv
cp
f
3735.75 818.475 mo
3735.75 820.447 3734.16 822.046 3732.18 822.046 cv
3730.21 822.046 3728.61 820.447 3728.61 818.475 cv
3728.61 816.502 3730.21 814.904 3732.18 814.904 cv
3734.16 814.904 3735.75 816.502 3735.75 818.475 cv
cp
f
3746.24 818.475 mo
3746.24 820.447 3744.65 822.046 3742.67 822.046 cv
3740.7 822.046 3739.1 820.447 3739.1 818.475 cv
3739.1 816.502 3740.7 814.904 3742.67 814.904 cv
3744.65 814.904 3746.24 816.502 3746.24 818.475 cv
cp
f
3756.73 818.475 mo
3756.73 820.447 3755.13 822.046 3753.16 822.046 cv
3751.19 822.046 3749.59 820.447 3749.59 818.475 cv
3749.59 816.502 3751.19 814.904 3753.16 814.904 cv
3755.13 814.904 3756.73 816.502 3756.73 818.475 cv
cp
f
3767.22 818.475 mo
3767.22 820.447 3765.62 822.046 3763.65 822.046 cv
3761.68 822.046 3760.08 820.447 3760.08 818.475 cv
3760.08 816.502 3761.68 814.904 3763.65 814.904 cv
3765.62 814.904 3767.22 816.502 3767.22 818.475 cv
cp
f
3714.78 838.771 mo
3714.78 840.743 3713.18 842.342 3711.21 842.342 cv
3709.23 842.342 3707.63 840.743 3707.63 838.771 cv
3707.63 836.798 3709.23 835.199 3711.21 835.199 cv
3713.18 835.199 3714.78 836.798 3714.78 838.771 cv
cp
f
3725.27 838.771 mo
3725.27 840.743 3723.67 842.342 3721.69 842.342 cv
3719.72 842.342 3718.12 840.743 3718.12 838.771 cv
3718.12 836.798 3719.72 835.199 3721.69 835.199 cv
3723.67 835.199 3725.27 836.798 3725.27 838.771 cv
cp
f
3735.75 838.771 mo
3735.75 840.743 3734.16 842.342 3732.18 842.342 cv
3730.21 842.342 3728.61 840.743 3728.61 838.771 cv
3728.61 836.798 3730.21 835.199 3732.18 835.199 cv
3734.16 835.199 3735.75 836.798 3735.75 838.771 cv
cp
f
3746.24 838.771 mo
3746.24 840.743 3744.65 842.342 3742.67 842.342 cv
3740.7 842.342 3739.1 840.743 3739.1 838.771 cv
3739.1 836.798 3740.7 835.199 3742.67 835.199 cv
3744.65 835.199 3746.24 836.798 3746.24 838.771 cv
cp
f
3756.73 838.771 mo
3756.73 840.743 3755.13 842.342 3753.16 842.342 cv
3751.19 842.342 3749.59 840.743 3749.59 838.771 cv
3749.59 836.798 3751.19 835.199 3753.16 835.199 cv
3755.13 835.199 3756.73 836.798 3756.73 838.771 cv
cp
f
3767.22 838.771 mo
3767.22 840.743 3765.62 842.342 3763.65 842.342 cv
3761.68 842.342 3760.08 840.743 3760.08 838.771 cv
3760.08 836.798 3761.68 835.199 3763.65 835.199 cv
3765.62 835.199 3767.22 836.798 3767.22 838.771 cv
cp
f
3714.78 910.909 mo
3714.78 912.881 3713.18 914.48 3711.21 914.48 cv
3709.23 914.48 3707.63 912.881 3707.63 910.909 cv
3707.63 908.937 3709.23 907.337 3711.21 907.337 cv
3713.18 907.337 3714.78 908.937 3714.78 910.909 cv
cp
f
3725.27 910.909 mo
3725.27 912.881 3723.67 914.48 3721.69 914.48 cv
3719.72 914.48 3718.12 912.881 3718.12 910.909 cv
3718.12 908.937 3719.72 907.337 3721.69 907.337 cv
3723.67 907.337 3725.27 908.937 3725.27 910.909 cv
cp
f
3735.75 910.909 mo
3735.75 912.881 3734.16 914.48 3732.18 914.48 cv
3730.21 914.48 3728.61 912.881 3728.61 910.909 cv
3728.61 908.937 3730.21 907.337 3732.18 907.337 cv
3734.16 907.337 3735.75 908.937 3735.75 910.909 cv
cp
f
3746.24 910.909 mo
3746.24 912.881 3744.65 914.48 3742.67 914.48 cv
3740.7 914.48 3739.1 912.881 3739.1 910.909 cv
3739.1 908.937 3740.7 907.337 3742.67 907.337 cv
3744.65 907.337 3746.24 908.937 3746.24 910.909 cv
cp
f
3756.73 910.909 mo
3756.73 912.881 3755.13 914.48 3753.16 914.48 cv
3751.19 914.48 3749.59 912.881 3749.59 910.909 cv
3749.59 908.937 3751.19 907.337 3753.16 907.337 cv
3755.13 907.337 3756.73 908.937 3756.73 910.909 cv
cp
f
3767.22 910.909 mo
3767.22 912.881 3765.62 914.48 3763.65 914.48 cv
3761.68 914.48 3760.08 912.881 3760.08 910.909 cv
3760.08 908.937 3761.68 907.337 3763.65 907.337 cv
3765.62 907.337 3767.22 908.937 3767.22 910.909 cv
cp
f
3714.78 931.205 mo
3714.78 933.177 3713.18 934.776 3711.21 934.776 cv
3709.23 934.776 3707.63 933.177 3707.63 931.205 cv
3707.63 929.232 3709.23 927.633 3711.21 927.633 cv
3713.18 927.633 3714.78 929.232 3714.78 931.205 cv
cp
f
3725.27 931.205 mo
3725.27 933.177 3723.67 934.776 3721.69 934.776 cv
3719.72 934.776 3718.12 933.177 3718.12 931.205 cv
3718.12 929.232 3719.72 927.633 3721.69 927.633 cv
3723.67 927.633 3725.27 929.232 3725.27 931.205 cv
cp
f
3735.75 931.205 mo
3735.75 933.177 3734.16 934.776 3732.18 934.776 cv
3730.21 934.776 3728.61 933.177 3728.61 931.205 cv
3728.61 929.232 3730.21 927.633 3732.18 927.633 cv
3734.16 927.633 3735.75 929.232 3735.75 931.205 cv
cp
f
3746.24 931.205 mo
3746.24 933.177 3744.65 934.776 3742.67 934.776 cv
3740.7 934.776 3739.1 933.177 3739.1 931.205 cv
3739.1 929.232 3740.7 927.633 3742.67 927.633 cv
3744.65 927.633 3746.24 929.232 3746.24 931.205 cv
cp
f
3756.73 931.205 mo
3756.73 933.177 3755.13 934.776 3753.16 934.776 cv
3751.19 934.776 3749.59 933.177 3749.59 931.205 cv
3749.59 929.232 3751.19 927.633 3753.16 927.633 cv
3755.13 927.633 3756.73 929.232 3756.73 931.205 cv
cp
f
3767.22 931.205 mo
3767.22 933.177 3765.62 934.776 3763.65 934.776 cv
3761.68 934.776 3760.08 933.177 3760.08 931.205 cv
3760.08 929.232 3761.68 927.633 3763.65 927.633 cv
3765.62 927.633 3767.22 929.232 3767.22 931.205 cv
cp
f
3774.76 984.799 mo
3700.1 984.799 li
3700.1 969.283 li
3774.76 969.283 li
3774.76 984.799 li
cp
0 0 0 rgb
f
3710.65 1020.31 mo
3707.05 1020.31 li
3707.05 997.714 li
3710.65 997.714 li
3710.65 1020.31 li
cp
f
3721.86 1020.31 mo
3718.26 1020.31 li
3718.26 997.714 li
3721.86 997.714 li
3721.86 1020.31 li
cp
f
3733.07 1020.31 mo
3729.47 1020.31 li
3729.47 997.714 li
3733.07 997.714 li
3733.07 1020.31 li
cp
f
3744.28 1020.31 mo
3740.68 1020.31 li
3740.68 997.714 li
3744.28 997.714 li
3744.28 1020.31 li
cp
f
3755.48 1020.31 mo
3751.88 1020.31 li
3751.88 997.714 li
3755.48 997.714 li
3755.48 1020.31 li
cp
f
3766.69 1020.31 mo
3763.09 1020.31 li
3763.09 997.714 li
3766.69 997.714 li
3766.69 1020.31 li
cp
f
3713.18 331.332 mo
3713.14 333.101 li
3760.6 333.101 li
3760.57 331.332 li
3713.18 331.332 li
cp
1 1 1 rgb
f
3712.53 368.048 mo
3712.5 369.818 li
3761.25 369.818 li
3761.22 368.048 li
3712.53 368.048 li
cp
f
3711.92 402.123 mo
3711.89 403.893 li
3761.85 403.893 li
3761.82 402.123 li
3711.92 402.123 li
cp
f
3711.35 434.44 mo
3711.32 436.21 li
3762.42 436.21 li
3762.39 434.44 li
3711.35 434.44 li
cp
f
3710.81 464.87 mo
3710.78 466.64 li
3762.96 466.64 li
3762.93 464.87 li
3710.81 464.87 li
cp
f
3710.3 493.664 mo
3710.27 495.435 li
3763.47 495.435 li
3763.44 493.664 li
3710.3 493.664 li
cp
f
3709.83 520.424 mo
3709.8 522.194 li
3763.94 522.194 li
3763.91 520.424 li
3709.83 520.424 li
cp
f
3709.38 545.991 mo
3709.34 547.761 li
3764.4 547.761 li
3764.37 545.991 li
3709.38 545.991 li
cp
f
3708.96 569.609 mo
3708.93 571.379 li
3764.82 571.379 li
3764.78 569.609 li
3708.96 569.609 li
cp
f
3708.56 592.132 mo
3708.53 593.902 li
3765.21 593.902 li
3765.18 592.132 li
3708.56 592.132 li
cp
f
3708.18 613.437 mo
3708.15 615.207 li
3765.59 615.207 li
3765.56 613.437 li
3708.18 613.437 li
cp
f
3707.83 633.526 mo
3707.79 635.296 li
3765.95 635.296 li
3765.92 633.526 li
3707.83 633.526 li
cp
f
3707.49 652.395 mo
3707.46 654.165 li
3766.28 654.165 li
3766.25 652.395 li
3707.49 652.395 li
cp
f
3707.17 670.413 mo
3707.14 672.184 li
3766.6 672.184 li
3766.57 670.413 li
3707.17 670.413 li
cp
f
3706.88 687.094 mo
3706.85 688.864 li
3766.89 688.864 li
3766.86 687.094 li
3706.88 687.094 li
cp
f
3706.6 703.042 mo
3706.56 704.812 li
3767.18 704.812 li
3767.15 703.042 li
3706.6 703.042 li
cp
f
3706.34 717.772 mo
3706.3 719.542 li
3767.44 719.542 li
3767.41 717.772 li
3706.34 717.772 li
cp
f
3706.08 731.895 mo
3706.05 733.665 li
3767.69 733.665 li
3767.66 731.895 li
3706.08 731.895 li
cp
f
3705.84 745.478 mo
3705.81 747.248 li
3767.93 747.248 li
3767.9 745.478 li
3705.84 745.478 li
cp
f
3705.63 757.861 mo
3705.59 759.631 li
3768.15 759.631 li
3768.12 757.861 li
3705.63 757.861 li
cp
f
3705.42 769.674 mo
3705.38 771.444 li
3768.36 771.444 li
3768.33 769.674 li
3705.42 769.674 li
cp
f
3768.55 782.538 mo
3768.52 780.768 li
3705.22 780.768 li
3705.19 782.538 li
3768.55 782.538 li
cp
f
3740.12 450.54 mo
3740.12 452.336 3738.67 453.793 3736.87 453.793 cv
3735.07 453.793 3733.62 452.336 3733.62 450.54 cv
3733.62 448.743 3735.07 447.287 3736.87 447.287 cv
3738.67 447.287 3740.12 448.743 3740.12 450.54 cv
cp
f
3740.12 385.97 mo
3740.12 387.767 3738.67 389.223 3736.87 389.223 cv
3735.07 389.223 3733.62 387.767 3733.62 385.97 cv
3733.62 384.174 3735.07 382.717 3736.87 382.717 cv
3738.67 382.717 3740.12 384.174 3740.12 385.97 cv
cp
f
3740.12 507.929 mo
3740.12 509.726 3738.67 511.182 3736.87 511.182 cv
3735.07 511.182 3733.62 509.726 3733.62 507.929 cv
3733.62 506.132 3735.07 504.676 3736.87 504.676 cv
3738.67 504.676 3740.12 506.132 3740.12 507.929 cv
cp
f
3740.12 558.685 mo
3740.12 560.481 3738.67 561.938 3736.87 561.938 cv
3735.07 561.938 3733.62 560.481 3733.62 558.685 cv
3733.62 556.888 3735.07 555.432 3736.87 555.432 cv
3738.67 555.432 3740.12 556.888 3740.12 558.685 cv
cp
f
3740.12 679.639 mo
3740.12 681.436 3738.67 682.892 3736.87 682.892 cv
3735.07 682.892 3733.62 681.436 3733.62 679.639 cv
3733.62 677.842 3735.07 676.386 3736.87 676.386 cv
3738.67 676.386 3740.12 677.842 3740.12 679.639 cv
cp
f
3740.12 711.292 mo
3740.12 713.089 3738.67 714.545 3736.87 714.545 cv
3735.07 714.545 3733.62 713.089 3733.62 711.292 cv
3733.62 709.496 3735.07 708.039 3736.87 708.039 cv
3738.67 708.039 3740.12 709.496 3740.12 711.292 cv
cp
f
3740.12 739.571 mo
3740.12 741.368 3738.67 742.825 3736.87 742.825 cv
3735.07 742.825 3733.62 741.368 3733.62 739.571 cv
3733.62 737.775 3735.07 736.318 3736.87 736.318 cv
3738.67 736.318 3740.12 737.775 3740.12 739.571 cv
cp
f
3740.12 764.653 mo
3740.12 766.449 3738.67 767.906 3736.87 767.906 cv
3735.07 767.906 3733.62 766.449 3733.62 764.653 cv
3733.62 762.856 3735.07 761.4 3736.87 761.4 cv
3738.67 761.4 3740.12 762.856 3740.12 764.653 cv
cp
f
3722.42 624.366 mo
3722.42 626.163 3720.97 627.619 3719.17 627.619 cv
3717.37 627.619 3715.92 626.163 3715.92 624.366 cv
3715.92 622.57 3717.37 621.113 3719.17 621.113 cv
3720.97 621.113 3722.42 622.57 3722.42 624.366 cv
cp
f
3757.82 624.366 mo
3757.82 626.163 3756.37 627.619 3754.57 627.619 cv
3752.78 627.619 3751.32 626.163 3751.32 624.366 cv
3751.32 622.57 3752.78 621.113 3754.57 621.113 cv
3756.37 621.113 3757.82 622.57 3757.82 624.366 cv
cp
f
3709.61 977.904 mo
3708.09 977.893 li
3714.55 288.718 li
3677.03 129.128 li
3678.51 128.784 li
3716.05 288.551 li
3709.61 977.904 li
cp
f
3720.82 977.904 mo
3719.3 977.893 li
3723 288.718 li
3693.33 149.937 li
3694.82 149.616 li
3724.51 288.563 li
3720.82 977.904 li
cp
f
3732.03 977.898 mo
3730.51 977.898 li
3731.69 288.724 li
3709.63 170.354 li
3711.12 170.081 li
3733.2 288.587 li
3732.03 977.898 li
cp
f
3741.72 977.898 mo
3740.53 288.724 li
3725.63 190.776 li
3727.13 190.551 li
3742.04 288.611 li
3743.24 977.898 li
3741.72 977.898 li
cp
f
3752.92 977.904 mo
3749.22 288.73 li
3741.72 211.181 li
3743.23 211.039 li
3750.74 288.652 li
3754.45 977.893 li
3752.92 977.904 li
cp
f
3764.13 977.904 mo
3757.68 288.73 li
3758.53 231.544 li
3760.05 231.568 li
3759.2 288.736 li
3765.66 977.893 li
3764.13 977.904 li
cp
f
3764.25 234.61 mo
3765.93 233.246 3766.19 230.765 3764.83 229.081 cv
3763.46 227.396 3760.98 227.135 3759.3 228.5 cv
3757.61 229.863 3757.35 232.343 3758.72 234.028 cv
3760.08 235.712 3762.56 235.975 3764.25 234.61 cv
cp
0 0 0 rgb
f
3748.01 214.165 mo
3749.7 212.801 3749.96 210.32 3748.59 208.635 cv
3747.23 206.951 3744.75 206.69 3743.07 208.054 cv
3741.38 209.418 3741.12 211.898 3742.49 213.583 cv
3743.85 215.267 3746.33 215.529 3748.01 214.165 cv
cp
f
3731.78 193.719 mo
3733.47 192.355 3733.73 189.875 3732.36 188.19 cv
3731 186.505 3728.52 186.245 3726.83 187.609 cv
3725.15 188.973 3724.89 191.453 3726.25 193.137 cv
3727.62 194.821 3730.1 195.084 3731.78 193.719 cv
cp
f
3715.55 173.274 mo
3717.24 171.91 3717.5 169.429 3716.13 167.744 cv
3714.77 166.06 3712.29 165.799 3710.6 167.164 cv
3708.92 168.527 3708.66 171.007 3710.02 172.691 cv
3711.39 174.376 3713.87 174.638 3715.55 173.274 cv
cp
f
3699.32 152.829 mo
3701 151.465 3701.26 148.983 3699.9 147.299 cv
3698.54 145.614 3696.06 145.354 3694.37 146.718 cv
3692.69 148.082 3692.43 150.562 3693.79 152.246 cv
3695.16 153.931 3697.64 154.193 3699.32 152.829 cv
cp
f
3683.09 132.383 mo
3684.77 131.02 3685.03 128.538 3683.67 126.854 cv
3682.3 125.169 3679.83 124.908 3678.14 126.272 cv
3676.46 127.637 3676.2 130.116 3677.56 131.801 cv
3678.92 133.485 3681.4 133.748 3683.09 132.383 cv
cp
f
1337.98 934.199 mo
1337.98 884.295 1374.49 862.785 1374.49 820.624 cv
1374.49 795.347 1364.86 782.488 1359.34 777.194 cv
1357.92 775.831 1355.56 776.813 1355.49 778.781 cv
1354.85 798.206 1349.02 865.169 1297.06 865.169 cv
1271.24 865.169 1250.34 849.878 1250.34 797.555 cv
1221.5 760.335 li
1221.5 760.335 1188.38 823.653 1157.7 823.653 cv
1108.54 823.653 1107.99 744.41 1110.08 709.832 cv
1110.45 703.858 1103.04 700.944 1099.13 705.477 cv
1088.91 717.348 1076.03 738.839 1076.03 771.796 cv
1076.03 809.176 1105.02 891.473 1105.02 915.522 cv
1105.02 990.986 1049.26 1003.89 1049.26 1089.93 cv
1049.26 1139.84 1087.11 1199.21 1158.27 1199.21 cv
1221.5 1199.21 li
1296.08 1199.21 li
1352.12 1199.21 1393.42 1153.84 1393.42 1114.89 cv
1393.42 1010.61 1337.98 984.677 1337.98 934.199 cv
cp
f
1160.7 304.895 mo
1172.77 308.471 li
1173.08 308.563 1173.4 308.387 1173.49 308.079 cv
1179.85 286.62 li
1179.94 286.312 1179.76 285.988 1179.46 285.896 cv
1167.38 282.32 li
1166.38 282.023 1165.32 282.595 1165.03 283.599 cv
1159.42 302.54 li
1159.12 303.543 1159.69 304.597 1160.7 304.895 cv
cp
f
1168.47 298.52 mo
1194.91 306.354 li
1196.87 299.732 li
1170.43 291.898 li
1168.47 298.52 li
cp
f
1167.87 279.794 mo
1179.94 283.37 li
1180.25 283.461 1180.57 283.286 1180.66 282.978 cv
1187.02 261.52 li
1187.11 261.211 1186.94 260.888 1186.63 260.796 cv
1174.55 257.22 li
1173.55 256.922 1172.5 257.495 1172.2 258.498 cv
1166.59 277.439 li
1166.29 278.443 1166.86 279.497 1167.87 279.794 cv
cp
f
1175.64 273.419 mo
1202.08 281.254 li
1204.05 274.632 li
1177.6 266.798 li
1175.64 273.419 li
cp
f
1175.04 254.694 mo
1187.11 258.27 li
1187.42 258.361 1187.74 258.186 1187.84 257.877 cv
1194.19 236.418 li
1194.28 236.11 1194.11 235.787 1193.8 235.695 cv
1181.73 232.119 li
1180.72 231.822 1179.67 232.395 1179.37 233.398 cv
1173.76 252.339 li
1173.46 253.342 1174.04 254.396 1175.04 254.694 cv
cp
f
1182.81 248.319 mo
1209.26 256.153 li
1211.22 249.531 li
1184.77 241.697 li
1182.81 248.319 li
cp
f
1182.21 229.593 mo
1194.28 233.169 li
1194.59 233.261 1194.92 233.085 1195.01 232.777 cv
1201.36 211.318 li
1201.46 211.01 1201.28 210.686 1200.97 210.595 cv
1188.9 207.019 li
1187.89 206.722 1186.84 207.294 1186.54 208.297 cv
1180.93 227.238 li
1180.64 228.242 1181.21 229.296 1182.21 229.593 cv
cp
f
1189.98 223.218 mo
1216.43 231.053 li
1218.39 224.431 li
1191.94 216.597 li
1189.98 223.218 li
cp
f
1189.38 204.493 mo
1201.46 208.069 li
1201.76 208.16 1202.09 207.984 1202.18 207.676 cv
1208.54 186.218 li
1208.63 185.91 1208.45 185.586 1208.14 185.495 cv
1196.07 181.918 li
1195.07 181.621 1194.01 182.193 1193.71 183.196 cv
1188.1 202.138 li
1187.81 203.141 1188.38 204.195 1189.38 204.493 cv
cp
f
1197.15 198.118 mo
1223.6 205.952 li
1225.56 199.33 li
1199.11 191.496 li
1197.15 198.118 li
cp
f
1196.55 179.392 mo
1208.63 182.968 li
1208.94 183.06 1209.26 182.884 1209.35 182.576 cv
1215.71 161.117 li
1215.8 160.809 1215.62 160.485 1215.31 160.394 cv
1203.24 156.818 li
1202.24 156.521 1201.18 157.093 1200.89 158.096 cv
1195.28 177.038 li
1194.98 178.041 1195.55 179.095 1196.55 179.392 cv
cp
f
1204.32 173.018 mo
1230.77 180.852 li
1232.73 174.229 li
1206.29 166.396 li
1204.32 173.018 li
cp
f
1253.78 854.824 mo
1190.01 854.824 li
1198.86 354.875 li
1244.93 354.875 li
1253.78 854.824 li
cp
f
1244.93 349.557 mo
1198.86 349.557 li
1198.86 354.875 li
1244.93 354.875 li
1244.93 349.557 li
cp
f
1222.12 163.217 mo
1180.91 309.175 li
1180.39 311.007 1181.12 312.987 1182.73 314.003 cv
1195.33 321.961 1198.86 331.052 1198.86 349.557 cv
1221.9 349.557 li
1244.93 349.557 li
1244.93 323.164 1251.51 308.106 1261.71 300.484 cv
1262.99 299.525 1263.52 297.865 1263.16 296.303 cv
1261.17 287.556 1255.21 266.574 1255.21 242.977 cv
1255.21 217.149 1256.37 170.257 1256.89 150.506 cv
1256.99 146.965 1252.85 144.983 1250.15 147.272 cv
1237.85 157.694 li
1235.86 159.377 1233.12 159.847 1230.68 158.917 cv
1230.68 158.917 li
1227.12 157.557 1223.16 159.547 1222.12 163.217 cv
cp
f
1265 1010.9 mo
1177.67 1010.9 li
1174.2 1010.9 1171.38 1013.72 1171.38 1017.2 cv
1171.38 1050.5 li
1171.38 1053.98 1174.2 1056.8 1177.67 1056.8 cv
1177.67 1056.8 li
1181.15 1056.8 1183.97 1059.62 1183.97 1063.1 cv
1183.97 1083.53 li
1183.97 1087.01 1186.79 1089.83 1190.27 1089.83 cv
1252.41 1089.83 li
1255.89 1089.83 1258.71 1087.01 1258.71 1083.53 cv
1258.71 1063.1 li
1258.71 1059.62 1261.53 1056.8 1265 1056.8 cv
1265 1056.8 li
1268.48 1056.8 1271.3 1053.98 1271.3 1050.5 cv
1271.3 1017.2 li
1271.3 1013.72 1268.48 1010.9 1265 1010.9 cv
cp
1 1 1 rgb
f
1190.27 1088.06 mo
1187.77 1088.06 1185.74 1086.03 1185.74 1083.53 cv
1185.74 1063.1 li
1185.74 1058.65 1182.12 1055.03 1177.67 1055.03 cv
1175.18 1055.03 1173.15 1053 1173.15 1050.5 cv
1173.15 1017.19 li
1173.15 1014.7 1175.18 1012.67 1177.67 1012.67 cv
1265 1012.67 li
1267.5 1012.67 1269.53 1014.7 1269.53 1017.19 cv
1269.53 1050.5 li
1269.53 1053 1267.5 1055.03 1265 1055.03 cv
1260.56 1055.03 1256.94 1058.65 1256.94 1063.1 cv
1256.94 1083.53 li
1256.94 1086.03 1254.91 1088.06 1252.41 1088.06 cv
1190.27 1088.06 li
cp
0 0 0 rgb
f
1190.27 1086.29 mo
1188.75 1086.29 1187.51 1085.05 1187.51 1083.53 cv
1187.51 1063.1 li
1187.51 1057.68 1183.1 1053.26 1177.67 1053.26 cv
1176.16 1053.26 1174.92 1052.03 1174.92 1050.5 cv
1174.92 1017.19 li
1174.92 1015.68 1176.16 1014.44 1177.67 1014.44 cv
1265 1014.44 li
1266.53 1014.44 1267.76 1015.68 1267.76 1017.19 cv
1267.76 1050.5 li
1267.76 1052.03 1266.53 1053.26 1265 1053.26 cv
1259.58 1053.26 1255.17 1057.68 1255.17 1063.1 cv
1255.17 1083.53 li
1255.17 1085.05 1253.93 1086.29 1252.41 1086.29 cv
1190.27 1086.29 li
cp
1 1 1 rgb
f
1203.06 305.165 mo
1201.88 309.122 1197.73 311.378 1193.77 310.207 cv
1189.82 309.035 1187.56 304.877 1188.73 300.921 cv
1189.9 296.965 1194.06 294.708 1198.02 295.88 cv
1201.97 297.052 1204.23 301.209 1203.06 305.165 cv
cp
f
1210.23 280.064 mo
1209.06 284.021 1204.9 286.278 1200.94 285.106 cv
1196.99 283.934 1194.73 279.777 1195.9 275.821 cv
1197.07 271.865 1201.23 269.607 1205.19 270.779 cv
1209.14 271.951 1211.4 276.108 1210.23 280.064 cv
cp
f
1217.4 254.964 mo
1216.23 258.92 1212.07 261.177 1208.12 260.006 cv
1204.16 258.834 1201.9 254.677 1203.07 250.72 cv
1204.25 246.764 1208.4 244.507 1212.36 245.679 cv
1216.32 246.851 1218.57 251.008 1217.4 254.964 cv
cp
f
1224.57 229.863 mo
1223.4 233.82 1219.24 236.077 1215.29 234.905 cv
1211.33 233.733 1209.07 229.576 1210.25 225.62 cv
1211.42 221.664 1215.57 219.406 1219.53 220.578 cv
1223.49 221.75 1225.74 225.907 1224.57 229.863 cv
cp
f
1231.74 204.763 mo
1230.57 208.719 1226.42 210.977 1222.46 209.804 cv
1218.5 208.633 1216.25 204.475 1217.42 200.519 cv
1218.59 196.563 1222.75 194.306 1226.7 195.478 cv
1230.66 196.649 1232.92 200.807 1231.74 204.763 cv
cp
f
1238.92 179.663 mo
1237.74 183.619 1233.59 185.876 1229.63 184.704 cv
1225.67 183.532 1223.42 179.375 1224.59 175.418 cv
1225.76 171.462 1229.92 169.205 1233.87 170.377 cv
1237.83 171.549 1240.09 175.706 1238.92 179.663 cv
cp
f
1268.83 913.464 mo
1174.97 913.464 li
1174.42 913.464 1173.97 913.017 1173.97 912.464 cv
1173.97 866.444 li
1173.97 865.892 1174.42 865.444 1174.97 865.444 cv
1268.83 865.444 li
1269.38 865.444 1269.83 865.892 1269.83 866.444 cv
1269.83 912.464 li
1269.83 913.017 1269.38 913.464 1268.83 913.464 cv
cp
f
1257.56 889.455 mo
1186.24 889.455 li
1185.31 889.455 1184.57 888.708 1184.57 887.787 cv
1184.57 870.827 li
1184.57 869.906 1185.31 869.159 1186.24 869.159 cv
1257.56 869.159 li
1258.48 869.159 1259.23 869.906 1259.23 870.827 cv
1259.23 887.787 li
1259.23 888.708 1258.48 889.455 1257.56 889.455 cv
cp
0 0 0 rgb
f
1257.56 909.75 mo
1186.24 909.75 li
1185.31 909.75 1184.57 909.003 1184.57 908.082 cv
1184.57 891.122 li
1184.57 890.201 1185.31 889.455 1186.24 889.455 cv
1257.56 889.455 li
1258.48 889.455 1259.23 890.201 1259.23 891.122 cv
1259.23 908.082 li
1259.23 909.003 1258.48 909.75 1257.56 909.75 cv
cp
f
1268.83 1005.9 mo
1174.97 1005.9 li
1174.42 1005.9 1173.97 1005.45 1173.97 1004.9 cv
1173.97 958.879 li
1173.97 958.326 1174.42 957.879 1174.97 957.879 cv
1268.83 957.879 li
1269.38 957.879 1269.83 958.326 1269.83 958.879 cv
1269.83 1004.9 li
1269.83 1005.45 1269.38 1005.9 1268.83 1005.9 cv
cp
1 1 1 rgb
f
1257.56 981.889 mo
1186.24 981.889 li
1185.31 981.889 1184.57 981.142 1184.57 980.221 cv
1184.57 963.261 li
1184.57 962.34 1185.31 961.594 1186.24 961.594 cv
1257.56 961.594 li
1258.48 961.594 1259.23 962.34 1259.23 963.261 cv
1259.23 980.221 li
1259.23 981.142 1258.48 981.889 1257.56 981.889 cv
cp
0 0 0 rgb
f
1257.56 1002.18 mo
1186.24 1002.18 li
1185.31 1002.18 1184.57 1001.44 1184.57 1000.52 cv
1184.57 983.557 li
1184.57 982.635 1185.31 981.889 1186.24 981.889 cv
1257.56 981.889 li
1258.48 981.889 1259.23 982.635 1259.23 983.557 cv
1259.23 1000.52 li
1259.23 1001.44 1258.48 1002.18 1257.56 1002.18 cv
cp
f
1330.57 1012.67 mo
1330.57 1020.39 1324.32 1026.65 1316.6 1026.65 cv
1308.88 1026.65 1302.62 1020.39 1302.62 1012.67 cv
1302.62 1004.95 1308.88 998.69 1316.6 998.69 cv
1324.32 998.69 1330.57 1004.95 1330.57 1012.67 cv
cp
1 1 1 rgb
f
1344.55 1085.27 mo
1344.55 1092.99 1338.29 1099.25 1330.57 1099.25 cv
1322.85 1099.25 1316.6 1092.99 1316.6 1085.27 cv
1316.6 1077.55 1322.85 1071.3 1330.57 1071.3 cv
1338.29 1071.3 1344.55 1077.55 1344.55 1085.27 cv
cp
f
1199.25 879.307 mo
1199.25 881.279 1197.65 882.878 1195.67 882.878 cv
1193.7 882.878 1192.1 881.279 1192.1 879.307 cv
1192.1 877.334 1193.7 875.735 1195.67 875.735 cv
1197.65 875.735 1199.25 877.334 1199.25 879.307 cv
cp
f
1209.73 879.307 mo
1209.73 881.279 1208.14 882.878 1206.16 882.878 cv
1204.19 882.878 1202.59 881.279 1202.59 879.307 cv
1202.59 877.334 1204.19 875.735 1206.16 875.735 cv
1208.14 875.735 1209.73 877.334 1209.73 879.307 cv
cp
f
1220.22 879.307 mo
1220.22 881.279 1218.63 882.878 1216.65 882.878 cv
1214.68 882.878 1213.08 881.279 1213.08 879.307 cv
1213.08 877.334 1214.68 875.735 1216.65 875.735 cv
1218.63 875.735 1220.22 877.334 1220.22 879.307 cv
cp
f
1230.71 879.307 mo
1230.71 881.279 1229.11 882.878 1227.14 882.878 cv
1225.17 882.878 1223.57 881.279 1223.57 879.307 cv
1223.57 877.334 1225.17 875.735 1227.14 875.735 cv
1229.11 875.735 1230.71 877.334 1230.71 879.307 cv
cp
f
1241.2 879.307 mo
1241.2 881.279 1239.6 882.878 1237.63 882.878 cv
1235.66 882.878 1234.06 881.279 1234.06 879.307 cv
1234.06 877.334 1235.66 875.735 1237.63 875.735 cv
1239.6 875.735 1241.2 877.334 1241.2 879.307 cv
cp
f
1251.69 879.307 mo
1251.69 881.279 1250.09 882.878 1248.12 882.878 cv
1246.15 882.878 1244.55 881.279 1244.55 879.307 cv
1244.55 877.334 1246.15 875.735 1248.12 875.735 cv
1250.09 875.735 1251.69 877.334 1251.69 879.307 cv
cp
f
1199.25 899.602 mo
1199.25 901.574 1197.65 903.173 1195.67 903.173 cv
1193.7 903.173 1192.1 901.574 1192.1 899.602 cv
1192.1 897.63 1193.7 896.031 1195.67 896.031 cv
1197.65 896.031 1199.25 897.63 1199.25 899.602 cv
cp
f
1209.73 899.602 mo
1209.73 901.574 1208.14 903.173 1206.16 903.173 cv
1204.19 903.173 1202.59 901.574 1202.59 899.602 cv
1202.59 897.63 1204.19 896.031 1206.16 896.031 cv
1208.14 896.031 1209.73 897.63 1209.73 899.602 cv
cp
f
1220.22 899.602 mo
1220.22 901.574 1218.63 903.173 1216.65 903.173 cv
1214.68 903.173 1213.08 901.574 1213.08 899.602 cv
1213.08 897.63 1214.68 896.031 1216.65 896.031 cv
1218.63 896.031 1220.22 897.63 1220.22 899.602 cv
cp
f
1230.71 899.602 mo
1230.71 901.574 1229.11 903.173 1227.14 903.173 cv
1225.17 903.173 1223.57 901.574 1223.57 899.602 cv
1223.57 897.63 1225.17 896.031 1227.14 896.031 cv
1229.11 896.031 1230.71 897.63 1230.71 899.602 cv
cp
f
1241.2 899.602 mo
1241.2 901.574 1239.6 903.173 1237.63 903.173 cv
1235.66 903.173 1234.06 901.574 1234.06 899.602 cv
1234.06 897.63 1235.66 896.031 1237.63 896.031 cv
1239.6 896.031 1241.2 897.63 1241.2 899.602 cv
cp
f
1251.69 899.602 mo
1251.69 901.574 1250.09 903.173 1248.12 903.173 cv
1246.15 903.173 1244.55 901.574 1244.55 899.602 cv
1244.55 897.63 1246.15 896.031 1248.12 896.031 cv
1250.09 896.031 1251.69 897.63 1251.69 899.602 cv
cp
f
1199.25 971.741 mo
1199.25 973.713 1197.65 975.312 1195.67 975.312 cv
1193.7 975.312 1192.1 973.713 1192.1 971.741 cv
1192.1 969.769 1193.7 968.17 1195.67 968.17 cv
1197.65 968.17 1199.25 969.769 1199.25 971.741 cv
cp
f
1209.73 971.741 mo
1209.73 973.713 1208.14 975.312 1206.16 975.312 cv
1204.19 975.312 1202.59 973.713 1202.59 971.741 cv
1202.59 969.769 1204.19 968.17 1206.16 968.17 cv
1208.14 968.17 1209.73 969.769 1209.73 971.741 cv
cp
f
1220.22 971.741 mo
1220.22 973.713 1218.63 975.312 1216.65 975.312 cv
1214.68 975.312 1213.08 973.713 1213.08 971.741 cv
1213.08 969.769 1214.68 968.17 1216.65 968.17 cv
1218.63 968.17 1220.22 969.769 1220.22 971.741 cv
cp
f
1230.71 971.741 mo
1230.71 973.713 1229.11 975.312 1227.14 975.312 cv
1225.17 975.312 1223.57 973.713 1223.57 971.741 cv
1223.57 969.769 1225.17 968.17 1227.14 968.17 cv
1229.11 968.17 1230.71 969.769 1230.71 971.741 cv
cp
f
1241.2 971.741 mo
1241.2 973.713 1239.6 975.312 1237.63 975.312 cv
1235.66 975.312 1234.06 973.713 1234.06 971.741 cv
1234.06 969.769 1235.66 968.17 1237.63 968.17 cv
1239.6 968.17 1241.2 969.769 1241.2 971.741 cv
cp
f
1251.69 971.741 mo
1251.69 973.713 1250.09 975.312 1248.12 975.312 cv
1246.15 975.312 1244.55 973.713 1244.55 971.741 cv
1244.55 969.769 1246.15 968.17 1248.12 968.17 cv
1250.09 968.17 1251.69 969.769 1251.69 971.741 cv
cp
f
1268.83 949.446 mo
1174.97 949.446 li
1174.42 949.446 1173.97 948.999 1173.97 948.447 cv
1173.97 922.896 li
1173.97 922.344 1174.42 921.896 1174.97 921.896 cv
1268.83 921.896 li
1269.38 921.896 1269.83 922.344 1269.83 922.896 cv
1269.83 948.447 li
1269.83 948.999 1269.38 949.446 1268.83 949.446 cv
cp
f
1257.56 945.819 mo
1186.24 945.819 li
1185.31 945.819 1184.57 945.073 1184.57 944.151 cv
1184.57 927.191 li
1184.57 926.271 1185.31 925.524 1186.24 925.524 cv
1257.56 925.524 li
1258.48 925.524 1259.23 926.271 1259.23 927.191 cv
1259.23 944.151 li
1259.23 945.073 1258.48 945.819 1257.56 945.819 cv
cp
0 0 0 rgb
f
1199.25 935.759 mo
1199.25 937.731 1197.65 939.33 1195.67 939.33 cv
1193.7 939.33 1192.1 937.731 1192.1 935.759 cv
1192.1 933.787 1193.7 932.188 1195.67 932.188 cv
1197.65 932.188 1199.25 933.787 1199.25 935.759 cv
cp
1 1 1 rgb
f
1209.73 935.759 mo
1209.73 937.731 1208.14 939.33 1206.16 939.33 cv
1204.19 939.33 1202.59 937.731 1202.59 935.759 cv
1202.59 933.787 1204.19 932.188 1206.16 932.188 cv
1208.14 932.188 1209.73 933.787 1209.73 935.759 cv
cp
f
1220.22 935.759 mo
1220.22 937.731 1218.63 939.33 1216.65 939.33 cv
1214.68 939.33 1213.08 937.731 1213.08 935.759 cv
1213.08 933.787 1214.68 932.188 1216.65 932.188 cv
1218.63 932.188 1220.22 933.787 1220.22 935.759 cv
cp
f
1230.71 935.759 mo
1230.71 937.731 1229.11 939.33 1227.14 939.33 cv
1225.17 939.33 1223.57 937.731 1223.57 935.759 cv
1223.57 933.787 1225.17 932.188 1227.14 932.188 cv
1229.11 932.188 1230.71 933.787 1230.71 935.759 cv
cp
f
1241.2 935.759 mo
1241.2 937.731 1239.6 939.33 1237.63 939.33 cv
1235.66 939.33 1234.06 937.731 1234.06 935.759 cv
1234.06 933.787 1235.66 932.188 1237.63 932.188 cv
1239.6 932.188 1241.2 933.787 1241.2 935.759 cv
cp
f
1251.69 935.759 mo
1251.69 937.731 1250.09 939.33 1248.12 939.33 cv
1246.15 939.33 1244.55 937.731 1244.55 935.759 cv
1244.55 933.787 1246.15 932.188 1248.12 932.188 cv
1250.09 932.188 1251.69 933.787 1251.69 935.759 cv
cp
f
1199.25 992.036 mo
1199.25 994.009 1197.65 995.607 1195.67 995.607 cv
1193.7 995.607 1192.1 994.009 1192.1 992.036 cv
1192.1 990.063 1193.7 988.465 1195.67 988.465 cv
1197.65 988.465 1199.25 990.063 1199.25 992.036 cv
cp
f
1209.73 992.036 mo
1209.73 994.009 1208.14 995.607 1206.16 995.607 cv
1204.19 995.607 1202.59 994.009 1202.59 992.036 cv
1202.59 990.063 1204.19 988.465 1206.16 988.465 cv
1208.14 988.465 1209.73 990.063 1209.73 992.036 cv
cp
f
1220.22 992.036 mo
1220.22 994.009 1218.63 995.607 1216.65 995.607 cv
1214.68 995.607 1213.08 994.009 1213.08 992.036 cv
1213.08 990.063 1214.68 988.465 1216.65 988.465 cv
1218.63 988.465 1220.22 990.063 1220.22 992.036 cv
cp
f
1230.71 992.036 mo
1230.71 994.009 1229.11 995.607 1227.14 995.607 cv
1225.17 995.607 1223.57 994.009 1223.57 992.036 cv
1223.57 990.063 1225.17 988.465 1227.14 988.465 cv
1229.11 988.465 1230.71 990.063 1230.71 992.036 cv
cp
f
1241.2 992.036 mo
1241.2 994.009 1239.6 995.607 1237.63 995.607 cv
1235.66 995.607 1234.06 994.009 1234.06 992.036 cv
1234.06 990.063 1235.66 988.465 1237.63 988.465 cv
1239.6 988.465 1241.2 990.063 1241.2 992.036 cv
cp
f
1251.69 992.036 mo
1251.69 994.009 1250.09 995.607 1248.12 995.607 cv
1246.15 995.607 1244.55 994.009 1244.55 992.036 cv
1244.55 990.063 1246.15 988.465 1248.12 988.465 cv
1250.09 988.465 1251.69 990.063 1251.69 992.036 cv
cp
f
1259.23 1045.63 mo
1184.57 1045.63 li
1184.57 1030.12 li
1259.23 1030.12 li
1259.23 1045.63 li
cp
0 0 0 rgb
f
1195.12 1081.14 mo
1191.52 1081.14 li
1191.52 1058.55 li
1195.12 1058.55 li
1195.12 1081.14 li
cp
f
1206.33 1081.14 mo
1202.73 1081.14 li
1202.73 1058.55 li
1206.33 1058.55 li
1206.33 1081.14 li
cp
f
1217.54 1081.14 mo
1213.94 1081.14 li
1213.94 1058.55 li
1217.54 1058.55 li
1217.54 1081.14 li
cp
f
1228.74 1081.14 mo
1225.15 1081.14 li
1225.15 1058.55 li
1228.74 1058.55 li
1228.74 1081.14 li
cp
f
1239.95 1081.14 mo
1236.35 1081.14 li
1236.35 1058.55 li
1239.95 1058.55 li
1239.95 1081.14 li
cp
f
1251.16 1081.14 mo
1247.56 1081.14 li
1247.56 1058.55 li
1251.16 1058.55 li
1251.16 1081.14 li
cp
f
1198.2 392.163 mo
1198.17 393.933 li
1245.62 393.933 li
1245.59 392.163 li
1198.2 392.163 li
cp
1 1 1 rgb
f
1197.55 428.879 mo
1197.52 430.65 li
1246.27 430.65 li
1246.24 428.879 li
1197.55 428.879 li
cp
f
1196.95 462.955 mo
1196.92 464.725 li
1246.88 464.725 li
1246.85 462.955 li
1196.95 462.955 li
cp
f
1196.38 495.272 mo
1196.35 497.042 li
1247.45 497.042 li
1247.42 495.272 li
1196.38 495.272 li
cp
f
1195.84 525.702 mo
1195.81 527.472 li
1247.99 527.472 li
1247.96 525.702 li
1195.84 525.702 li
cp
f
1195.33 554.496 mo
1195.3 556.266 li
1248.5 556.266 li
1248.47 554.496 li
1195.33 554.496 li
cp
f
1194.86 581.256 mo
1194.82 583.026 li
1248.97 583.026 li
1248.94 581.256 li
1194.86 581.256 li
cp
f
1194.4 606.823 mo
1194.37 608.593 li
1249.42 608.593 li
1249.39 606.823 li
1194.4 606.823 li
cp
f
1193.98 630.44 mo
1193.95 632.21 li
1249.84 632.21 li
1249.81 630.44 li
1193.98 630.44 li
cp
f
1193.59 652.964 mo
1193.55 654.734 li
1250.24 654.734 li
1250.21 652.964 li
1193.59 652.964 li
cp
f
1193.21 674.269 mo
1193.18 676.039 li
1250.62 676.039 li
1250.59 674.269 li
1193.21 674.269 li
cp
f
1192.85 694.357 mo
1192.82 696.127 li
1250.97 696.127 li
1250.94 694.357 li
1192.85 694.357 li
cp
f
1192.52 713.227 mo
1192.49 714.997 li
1251.31 714.997 li
1251.28 713.227 li
1192.52 713.227 li
cp
f
1192.2 731.245 mo
1192.17 733.015 li
1251.63 733.015 li
1251.59 731.245 li
1192.2 731.245 li
cp
f
1191.9 747.926 mo
1191.87 749.696 li
1251.92 749.696 li
1251.89 747.926 li
1191.9 747.926 li
cp
f
1191.62 763.874 mo
1191.59 765.644 li
1252.2 765.644 li
1252.17 763.874 li
1191.62 763.874 li
cp
f
1191.36 778.604 mo
1191.33 780.375 li
1252.46 780.375 li
1252.43 778.604 li
1191.36 778.604 li
cp
f
1191.11 792.727 mo
1191.08 794.497 li
1252.71 794.497 li
1252.68 792.727 li
1191.11 792.727 li
cp
f
1190.87 806.31 mo
1190.84 808.08 li
1252.95 808.08 li
1252.92 806.31 li
1190.87 806.31 li
cp
f
1190.65 818.693 mo
1190.62 820.463 li
1253.17 820.463 li
1253.14 818.693 li
1190.65 818.693 li
cp
f
1190.44 830.506 mo
1190.41 832.276 li
1253.38 832.276 li
1253.35 830.506 li
1190.44 830.506 li
cp
f
1253.58 843.37 mo
1253.55 841.6 li
1190.25 841.6 li
1190.22 843.37 li
1253.58 843.37 li
cp
f
1225.15 511.372 mo
1225.15 513.168 1223.69 514.625 1221.9 514.625 cv
1220.1 514.625 1218.64 513.168 1218.64 511.372 cv
1218.64 509.575 1220.1 508.119 1221.9 508.119 cv
1223.69 508.119 1225.15 509.575 1225.15 511.372 cv
cp
f
1225.15 446.802 mo
1225.15 448.599 1223.69 450.055 1221.9 450.055 cv
1220.1 450.055 1218.64 448.599 1218.64 446.802 cv
1218.64 445.005 1220.1 443.549 1221.9 443.549 cv
1223.69 443.549 1225.15 445.005 1225.15 446.802 cv
cp
f
1225.15 568.761 mo
1225.15 570.558 1223.69 572.014 1221.9 572.014 cv
1220.1 572.014 1218.64 570.558 1218.64 568.761 cv
1218.64 566.964 1220.1 565.508 1221.9 565.508 cv
1223.69 565.508 1225.15 566.964 1225.15 568.761 cv
cp
f
1225.15 619.517 mo
1225.15 621.313 1223.69 622.77 1221.9 622.77 cv
1220.1 622.77 1218.64 621.313 1218.64 619.517 cv
1218.64 617.72 1220.1 616.264 1221.9 616.264 cv
1223.69 616.264 1225.15 617.72 1225.15 619.517 cv
cp
f
1225.15 740.471 mo
1225.15 742.267 1223.69 743.723 1221.9 743.723 cv
1220.1 743.723 1218.64 742.267 1218.64 740.471 cv
1218.64 738.674 1220.1 737.218 1221.9 737.218 cv
1223.69 737.218 1225.15 738.674 1225.15 740.471 cv
cp
f
1225.15 772.124 mo
1225.15 773.92 1223.69 775.377 1221.9 775.377 cv
1220.1 775.377 1218.64 773.92 1218.64 772.124 cv
1218.64 770.328 1220.1 768.871 1221.9 768.871 cv
1223.69 768.871 1225.15 770.328 1225.15 772.124 cv
cp
f
1225.15 800.403 mo
1225.15 802.2 1223.69 803.656 1221.9 803.656 cv
1220.1 803.656 1218.64 802.2 1218.64 800.403 cv
1218.64 798.607 1220.1 797.15 1221.9 797.15 cv
1223.69 797.15 1225.15 798.607 1225.15 800.403 cv
cp
f
1225.15 825.485 mo
1225.15 827.281 1223.69 828.738 1221.9 828.738 cv
1220.1 828.738 1218.64 827.281 1218.64 825.485 cv
1218.64 823.688 1220.1 822.232 1221.9 822.232 cv
1223.69 822.232 1225.15 823.688 1225.15 825.485 cv
cp
f
1207.45 685.198 mo
1207.45 686.994 1205.99 688.451 1204.2 688.451 cv
1202.4 688.451 1200.94 686.994 1200.94 685.198 cv
1200.94 683.401 1202.4 681.945 1204.2 681.945 cv
1205.99 681.945 1207.45 683.401 1207.45 685.198 cv
cp
f
1242.85 685.198 mo
1242.85 686.994 1241.39 688.451 1239.6 688.451 cv
1237.8 688.451 1236.35 686.994 1236.35 685.198 cv
1236.35 683.401 1237.8 681.945 1239.6 681.945 cv
1241.39 681.945 1242.85 683.401 1242.85 685.198 cv
cp
f
1194.64 1037.96 mo
1193.12 1037.95 li
1199.57 349.552 li
1198.08 303.067 li
1199.6 303.02 li
1201.1 349.534 li
1194.64 1037.96 li
cp
f
1205.84 1037.96 mo
1204.32 1037.95 li
1208.03 349.555 li
1205.25 278.093 li
1206.77 278.034 li
1209.55 349.528 li
1205.84 1037.96 li
cp
f
1217.06 1037.95 mo
1215.53 1037.95 li
1216.72 349.558 li
1212.48 252.875 li
1214 252.81 li
1218.24 349.525 li
1217.06 1037.95 li
cp
f
1226.74 1037.95 mo
1225.56 349.558 li
1219.68 227.777 li
1221.2 227.706 li
1227.08 349.522 li
1228.26 1037.95 li
1226.74 1037.95 li
cp
f
1237.95 1037.96 mo
1234.24 349.561 li
1226.82 202.681 li
1228.35 202.604 li
1235.76 349.519 li
1239.47 1037.95 li
1237.95 1037.96 li
cp
f
1249.16 1037.96 mo
1242.7 349.563 li
1234.03 177.579 li
1235.55 177.501 li
1244.22 349.519 li
1250.68 1037.95 li
1249.16 1037.96 li
cp
f
1194.78 306.813 mo
1192.7 306.197 1191.51 304.004 1192.12 301.926 cv
1192.74 299.848 1194.93 298.658 1197.01 299.273 cv
1199.09 299.889 1200.28 302.08 1199.66 304.159 cv
1199.05 306.237 1196.85 307.429 1194.78 306.813 cv
cp
0 0 0 rgb
f
1201.95 281.712 mo
1199.87 281.097 1198.68 278.904 1199.3 276.825 cv
1199.91 274.747 1202.1 273.557 1204.18 274.173 cv
1206.26 274.789 1207.45 276.98 1206.83 279.058 cv
1206.22 281.137 1204.03 282.328 1201.95 281.712 cv
cp
f
1209.12 256.612 mo
1207.04 255.996 1205.85 253.803 1206.47 251.725 cv
1207.08 249.646 1209.27 248.457 1211.35 249.072 cv
1213.43 249.688 1214.62 251.879 1214.01 253.958 cv
1213.39 256.036 1211.2 257.228 1209.12 256.612 cv
cp
f
1216.29 231.511 mo
1214.21 230.896 1213.02 228.703 1213.64 226.625 cv
1214.26 224.546 1216.45 223.356 1218.52 223.972 cv
1220.6 224.587 1221.79 226.779 1221.18 228.857 cv
1220.56 230.936 1218.37 232.127 1216.29 231.511 cv
cp
f
1223.46 206.411 mo
1221.39 205.795 1220.2 203.602 1220.81 201.523 cv
1221.43 199.445 1223.62 198.255 1225.7 198.871 cv
1227.77 199.487 1228.96 201.678 1228.35 203.756 cv
1227.73 205.835 1225.54 207.026 1223.46 206.411 cv
cp
f
1230.64 181.31 mo
1228.56 180.694 1227.37 178.501 1227.98 176.423 cv
1228.6 174.345 1230.79 173.155 1232.87 173.771 cv
1234.95 174.386 1236.14 176.578 1235.52 178.656 cv
1234.91 180.734 1232.71 181.926 1230.64 181.31 cv
cp
f
2167.97 938.964 mo
2167.97 889.06 2193.86 886.283 2193.86 844.123 cv
2193.86 809.909 2150.06 770.408 2150.06 820.287 cv
2150.06 841.936 2121.99 859.313 2105.1 859.313 cv
2090.67 859.313 2069.71 854.643 2069.71 802.319 cv
2040.87 765.1 li
2040.87 765.1 2009.38 828.417 1983.55 828.417 cv
1946.3 828.417 1944.28 794.037 1944.28 759.396 cv
1944.28 711.038 1921.08 722.297 1913.38 730.966 cv
1902.97 742.68 1895.4 765.458 1895.4 798.415 cv
1895.4 835.794 1920.85 896.238 1920.85 920.287 cv
1920.85 995.751 1868.63 1008.66 1868.63 1094.7 cv
1868.63 1144.6 1906.48 1203.97 1977.64 1203.97 cv
2040.87 1203.97 li
2115.45 1203.97 li
2171.49 1203.97 2212.79 1158.6 2212.79 1119.65 cv
2212.79 1015.37 2167.97 989.441 2167.97 938.964 cv
cp
f
2171.53 1001.67 mo
2162.42 981.652 2153.81 962.746 2153.81 938.964 cv
2153.81 909.426 2162.01 894.032 2169.24 880.449 cv
2175.08 869.462 2179.71 860.781 2179.71 844.121 cv
2179.71 831.015 2170.8 817.864 2164.73 812.841 cv
2164.45 814.577 2164.22 816.993 2164.22 820.288 cv
2164.22 851.139 2128.91 873.472 2105.1 873.472 cv
2073.39 873.472 2007.19 842.579 1983.55 842.579 cv
1983.43 842.579 1983.26 842.557 1983.05 842.515 cv
1972.99 840.468 1964.15 849.156 1966.87 859.055 cv
1971.39 875.527 1976.31 895.368 1976.31 903.681 cv
1976.31 957.555 1946.68 961.272 1946.68 1026.92 cv
1946.68 1072.83 1985.92 1083.49 2003.94 1083.49 cv
2036.02 1083.49 2078.6 1083.49 2078.6 1083.49 cv
2136.1 1083.49 2164.23 1134.24 2181.29 1134.24 cv
2191.49 1134.24 2198.63 1130.6 2198.63 1119.65 cv
2198.63 1061.23 2184.23 1029.59 2171.53 1001.67 cv
cp
1 1 1 rgb
f
1980.07 309.659 mo
1992.14 313.236 li
1992.45 313.327 1992.77 313.151 1992.86 312.843 cv
1999.22 291.384 li
1999.31 291.076 1999.13 290.752 1998.83 290.661 cv
1986.75 287.085 li
1985.75 286.788 1984.7 287.36 1984.4 288.363 cv
1978.79 307.304 li
1978.49 308.308 1979.06 309.362 1980.07 309.659 cv
cp
0 0 0 rgb
f
1987.84 303.285 mo
2014.28 311.119 li
2016.24 304.497 li
1989.8 296.663 li
1987.84 303.285 li
cp
f
1987.24 284.559 mo
1999.31 288.135 li
1999.62 288.227 1999.94 288.051 2000.03 287.743 cv
2006.39 266.284 li
2006.48 265.976 2006.31 265.652 2006 265.561 cv
1993.92 261.984 li
1992.92 261.687 1991.87 262.259 1991.57 263.263 cv
1985.96 282.204 li
1985.66 283.208 1986.23 284.262 1987.24 284.559 cv
cp
f
1995.01 278.184 mo
2021.46 286.019 li
2023.42 279.396 li
1996.97 271.563 li
1995.01 278.184 li
cp
f
1994.41 259.458 mo
2006.48 263.034 li
2006.79 263.125 2007.11 262.95 2007.21 262.642 cv
2013.56 241.183 li
2013.65 240.875 2013.48 240.551 2013.17 240.46 cv
2001.1 236.884 li
2000.09 236.587 1999.04 237.159 1998.74 238.163 cv
1993.13 257.104 li
1992.83 258.107 1993.41 259.161 1994.41 259.458 cv
cp
f
2002.18 253.084 mo
2028.63 260.917 li
2030.59 254.296 li
2004.14 246.462 li
2002.18 253.084 li
cp
f
2001.58 234.358 mo
2013.65 237.934 li
2013.96 238.025 2014.29 237.85 2014.38 237.542 cv
2020.73 216.083 li
2020.83 215.774 2020.65 215.451 2020.34 215.359 cv
2008.27 211.784 li
2007.26 211.486 2006.21 212.059 2005.91 213.062 cv
2000.3 232.003 li
2000.01 233.006 2000.58 234.061 2001.58 234.358 cv
cp
f
2009.35 227.983 mo
2035.8 235.817 li
2037.76 229.195 li
2011.31 221.361 li
2009.35 227.983 li
cp
f
2008.75 209.257 mo
2020.83 212.833 li
2021.13 212.925 2021.46 212.749 2021.55 212.441 cv
2027.91 190.982 li
2028 190.674 2027.82 190.35 2027.51 190.259 cv
2015.44 186.683 li
2014.44 186.385 2013.38 186.958 2013.08 187.961 cv
2007.47 206.902 li
2007.18 207.906 2007.75 208.96 2008.75 209.257 cv
cp
f
2016.52 202.882 mo
2042.97 210.717 li
2044.93 204.095 li
2018.48 196.261 li
2016.52 202.882 li
cp
f
2015.92 184.157 mo
2028 187.733 li
2028.31 187.824 2028.63 187.648 2028.72 187.34 cv
2035.08 165.882 li
2035.17 165.574 2034.99 165.25 2034.68 165.159 cv
2022.61 161.582 li
2021.61 161.285 2020.55 161.857 2020.26 162.86 cv
2014.65 181.802 li
2014.35 182.805 2014.92 183.859 2015.92 184.157 cv
cp
f
2023.69 177.782 mo
2050.14 185.616 li
2052.1 178.994 li
2025.66 171.16 li
2023.69 177.782 li
cp
f
2073.15 859.588 mo
2073.15 859.588 2063.59 863.129 2041.27 863.129 cv
2018.95 863.129 2009.38 859.588 2009.38 859.588 cv
2018.23 359.64 li
2064.3 359.64 li
2073.15 859.588 li
cp
f
2064.3 354.322 mo
2018.23 354.322 li
2018.23 359.64 li
2064.3 359.64 li
2064.3 354.322 li
cp
1 1 1 rgb
f
2043.42 161.15 mo
2032.7 197.803 2001.3 310.322 2001.3 310.322 cv
2000.21 314.174 2001.65 318.296 2004.88 320.655 cv
2015.23 328.202 2018.23 337.261 2018.23 354.322 cv
2041.27 354.322 li
2064.3 354.322 li
2064.3 337.278 2070.19 326.41 2077.36 318.91 cv
2085.42 310.471 2087.67 298.059 2083.42 287.187 cv
2079.05 275.992 2074.58 261.786 2074.58 247.741 cv
2074.58 186.237 2098.82 202.324 2098.82 174.832 cv
2098.82 147.885 2082.36 141.527 2065.92 141.527 cv
2058.45 141.527 2047.76 146.299 2043.42 161.15 cv
cp
0 0 0 rgb
f
2084.38 1015.66 mo
1997.04 1015.66 li
1993.57 1015.66 1990.75 1018.48 1990.75 1021.96 cv
1990.75 1055.27 li
1990.75 1058.75 1993.57 1061.57 1997.04 1061.57 cv
1997.04 1061.57 li
2000.52 1061.57 2080.9 1061.57 2084.38 1061.57 cv
2084.38 1061.57 li
2087.85 1061.57 2090.67 1058.75 2090.67 1055.27 cv
2090.67 1021.96 li
2090.67 1018.48 2087.85 1015.66 2084.38 1015.66 cv
cp
f
1997.04 1059.8 mo
1994.55 1059.8 1992.52 1057.76 1992.52 1055.27 cv
1992.52 1021.96 li
1992.52 1019.46 1994.55 1017.43 1997.04 1017.43 cv
2084.38 1017.43 li
2086.87 1017.43 2088.9 1019.46 2088.9 1021.96 cv
2088.9 1055.27 li
2088.9 1057.76 2086.87 1059.8 2084.38 1059.8 cv
2079.93 1059.8 2001.49 1059.8 1997.04 1059.8 cv
cp
1 1 1 rgb
f
1997.04 1058.03 mo
1995.53 1058.03 1994.29 1056.79 1994.29 1055.27 cv
1994.29 1021.96 li
1994.29 1020.44 1995.53 1019.2 1997.04 1019.2 cv
2084.38 1019.2 li
2085.9 1019.2 2087.13 1020.44 2087.13 1021.96 cv
2087.13 1055.27 li
2087.13 1056.79 2085.9 1058.03 2084.38 1058.03 cv
2078.95 1058.03 2002.47 1058.03 1997.04 1058.03 cv
cp
0 0 0 rgb
f
2022.43 309.93 mo
2021.25 313.886 2017.1 316.143 2013.14 314.971 cv
2009.19 313.799 2006.93 309.642 2008.1 305.686 cv
2009.27 301.729 2013.43 299.473 2017.39 300.645 cv
2021.34 301.816 2023.6 305.974 2022.43 309.93 cv
cp
1 1 1 rgb
f
2029.6 284.829 mo
2028.43 288.786 2024.27 291.042 2020.31 289.871 cv
2016.36 288.699 2014.1 284.542 2015.27 280.585 cv
2016.44 276.629 2020.6 274.372 2024.56 275.544 cv
2028.51 276.716 2030.77 280.873 2029.6 284.829 cv
cp
f
2036.77 259.729 mo
2035.6 263.685 2031.44 265.942 2027.49 264.77 cv
2023.53 263.599 2021.27 259.441 2022.44 255.485 cv
2023.62 251.529 2027.77 249.271 2031.73 250.443 cv
2035.69 251.615 2037.94 255.772 2036.77 259.729 cv
cp
f
2043.94 234.628 mo
2042.77 238.584 2038.61 240.841 2034.66 239.67 cv
2030.7 238.498 2028.44 234.341 2029.62 230.384 cv
2030.79 226.428 2034.94 224.171 2038.9 225.343 cv
2042.86 226.515 2045.11 230.672 2043.94 234.628 cv
cp
f
2051.11 209.527 mo
2049.94 213.484 2045.79 215.741 2041.83 214.569 cv
2037.87 213.397 2035.62 209.24 2036.79 205.284 cv
2037.96 201.328 2042.12 199.07 2046.07 200.242 cv
2050.03 201.414 2052.29 205.571 2051.11 209.527 cv
cp
f
2058.29 184.427 mo
2057.11 188.383 2052.96 190.641 2049 189.469 cv
2045.04 188.297 2042.79 184.14 2043.96 180.184 cv
2045.13 176.227 2049.29 173.97 2053.25 175.142 cv
2057.2 176.314 2059.46 180.471 2058.29 184.427 cv
cp
f
2135.97 1012.94 mo
2135.97 1020.66 2129.71 1026.92 2121.99 1026.92 cv
2114.27 1026.92 2108.01 1020.66 2108.01 1012.94 cv
2108.01 1005.22 2114.27 998.964 2121.99 998.964 cv
2129.71 998.964 2135.97 1005.22 2135.97 1012.94 cv
cp
0 0 0 rgb
f
2170.9 1045.82 mo
2170.9 1053.54 2164.64 1059.8 2156.92 1059.8 cv
2149.2 1059.8 2142.94 1053.54 2142.94 1045.82 cv
2142.94 1038.1 2149.2 1031.84 2156.92 1031.84 cv
2164.64 1031.84 2170.9 1038.1 2170.9 1045.82 cv
cp
f
2185.92 1091.99 mo
2185.92 1099.71 2179.66 1105.97 2171.94 1105.97 cv
2164.22 1105.97 2157.96 1099.71 2157.96 1091.99 cv
2157.96 1084.27 2164.22 1078.01 2171.94 1078.01 cv
2179.66 1078.01 2185.92 1084.27 2185.92 1091.99 cv
cp
f
2076.93 947.773 mo
2005.61 947.773 li
2004.69 947.773 2003.94 947.026 2003.94 946.105 cv
2003.94 929.146 li
2003.94 928.225 2004.69 927.478 2005.61 927.478 cv
2076.93 927.478 li
2077.85 927.478 2078.6 928.225 2078.6 929.146 cv
2078.6 946.105 li
2078.6 947.026 2077.85 947.773 2076.93 947.773 cv
cp
f
2018.62 937.713 mo
2018.62 939.685 2017.02 941.284 2015.04 941.284 cv
2013.07 941.284 2011.47 939.685 2011.47 937.713 cv
2011.47 935.741 2013.07 934.142 2015.04 934.142 cv
2017.02 934.142 2018.62 935.741 2018.62 937.713 cv
cp
1 1 1 rgb
f
2029.1 937.713 mo
2029.1 939.685 2027.51 941.284 2025.53 941.284 cv
2023.56 941.284 2021.96 939.685 2021.96 937.713 cv
2021.96 935.741 2023.56 934.142 2025.53 934.142 cv
2027.51 934.142 2029.1 935.741 2029.1 937.713 cv
cp
f
2039.59 937.713 mo
2039.59 939.685 2038 941.284 2036.02 941.284 cv
2034.05 941.284 2032.45 939.685 2032.45 937.713 cv
2032.45 935.741 2034.05 934.142 2036.02 934.142 cv
2038 934.142 2039.59 935.741 2039.59 937.713 cv
cp
f
2050.08 937.713 mo
2050.08 939.685 2048.49 941.284 2046.51 941.284 cv
2044.54 941.284 2042.94 939.685 2042.94 937.713 cv
2042.94 935.741 2044.54 934.142 2046.51 934.142 cv
2048.49 934.142 2050.08 935.741 2050.08 937.713 cv
cp
f
2060.57 937.713 mo
2060.57 939.685 2058.97 941.284 2057 941.284 cv
2055.03 941.284 2053.43 939.685 2053.43 937.713 cv
2053.43 935.741 2055.03 934.142 2057 934.142 cv
2058.97 934.142 2060.57 935.741 2060.57 937.713 cv
cp
f
2071.06 937.713 mo
2071.06 939.685 2069.46 941.284 2067.49 941.284 cv
2065.52 941.284 2063.92 939.685 2063.92 937.713 cv
2063.92 935.741 2065.52 934.142 2067.49 934.142 cv
2069.46 934.142 2071.06 935.741 2071.06 937.713 cv
cp
f
2076.93 991.865 mo
2005.61 991.865 li
2004.69 991.865 2003.94 991.118 2003.94 990.197 cv
2003.94 973.238 li
2003.94 972.316 2004.69 971.57 2005.61 971.57 cv
2076.93 971.57 li
2077.85 971.57 2078.6 972.316 2078.6 973.238 cv
2078.6 990.197 li
2078.6 991.118 2077.85 991.865 2076.93 991.865 cv
cp
0 0 0 rgb
f
2018.62 981.805 mo
2018.62 983.777 2017.02 985.376 2015.04 985.376 cv
2013.07 985.376 2011.47 983.777 2011.47 981.805 cv
2011.47 979.833 2013.07 978.233 2015.04 978.233 cv
2017.02 978.233 2018.62 979.833 2018.62 981.805 cv
cp
1 1 1 rgb
f
2029.1 981.805 mo
2029.1 983.777 2027.51 985.376 2025.53 985.376 cv
2023.56 985.376 2021.96 983.777 2021.96 981.805 cv
2021.96 979.833 2023.56 978.233 2025.53 978.233 cv
2027.51 978.233 2029.1 979.833 2029.1 981.805 cv
cp
f
2039.59 981.805 mo
2039.59 983.777 2038 985.376 2036.02 985.376 cv
2034.05 985.376 2032.45 983.777 2032.45 981.805 cv
2032.45 979.833 2034.05 978.233 2036.02 978.233 cv
2038 978.233 2039.59 979.833 2039.59 981.805 cv
cp
f
2050.08 981.805 mo
2050.08 983.777 2048.49 985.376 2046.51 985.376 cv
2044.54 985.376 2042.94 983.777 2042.94 981.805 cv
2042.94 979.833 2044.54 978.233 2046.51 978.233 cv
2048.49 978.233 2050.08 979.833 2050.08 981.805 cv
cp
f
2060.57 981.805 mo
2060.57 983.777 2058.97 985.376 2057 985.376 cv
2055.03 985.376 2053.43 983.777 2053.43 981.805 cv
2053.43 979.833 2055.03 978.233 2057 978.233 cv
2058.97 978.233 2060.57 979.833 2060.57 981.805 cv
cp
f
2071.06 981.805 mo
2071.06 983.777 2069.46 985.376 2067.49 985.376 cv
2065.52 985.376 2063.92 983.777 2063.92 981.805 cv
2063.92 979.833 2065.52 978.233 2067.49 978.233 cv
2069.46 978.233 2071.06 979.833 2071.06 981.805 cv
cp
f
2076.93 903.681 mo
2005.61 903.681 li
2004.69 903.681 2003.94 902.934 2003.94 902.013 cv
2003.94 885.053 li
2003.94 884.132 2004.69 883.385 2005.61 883.385 cv
2076.93 883.385 li
2077.85 883.385 2078.6 884.132 2078.6 885.053 cv
2078.6 902.013 li
2078.6 902.934 2077.85 903.681 2076.93 903.681 cv
cp
0 0 0 rgb
f
2018.62 893.621 mo
2018.62 895.593 2017.02 897.192 2015.04 897.192 cv
2013.07 897.192 2011.47 895.593 2011.47 893.621 cv
2011.47 891.648 2013.07 890.049 2015.04 890.049 cv
2017.02 890.049 2018.62 891.648 2018.62 893.621 cv
cp
1 1 1 rgb
f
2029.1 893.621 mo
2029.1 895.593 2027.51 897.192 2025.53 897.192 cv
2023.56 897.192 2021.96 895.593 2021.96 893.621 cv
2021.96 891.648 2023.56 890.049 2025.53 890.049 cv
2027.51 890.049 2029.1 891.648 2029.1 893.621 cv
cp
f
2039.59 893.621 mo
2039.59 895.593 2038 897.192 2036.02 897.192 cv
2034.05 897.192 2032.45 895.593 2032.45 893.621 cv
2032.45 891.648 2034.05 890.049 2036.02 890.049 cv
2038 890.049 2039.59 891.648 2039.59 893.621 cv
cp
f
2050.08 893.621 mo
2050.08 895.593 2048.49 897.192 2046.51 897.192 cv
2044.54 897.192 2042.94 895.593 2042.94 893.621 cv
2042.94 891.648 2044.54 890.049 2046.51 890.049 cv
2048.49 890.049 2050.08 891.648 2050.08 893.621 cv
cp
f
2060.57 893.621 mo
2060.57 895.593 2058.97 897.192 2057 897.192 cv
2055.03 897.192 2053.43 895.593 2053.43 893.621 cv
2053.43 891.648 2055.03 890.049 2057 890.049 cv
2058.97 890.049 2060.57 891.648 2060.57 893.621 cv
cp
f
2071.06 893.621 mo
2071.06 895.593 2069.46 897.192 2067.49 897.192 cv
2065.52 897.192 2063.92 895.593 2063.92 893.621 cv
2063.92 891.648 2065.52 890.049 2067.49 890.049 cv
2069.46 890.049 2071.06 891.648 2071.06 893.621 cv
cp
f
2078.6 1050.4 mo
2003.94 1050.4 li
2003.94 1034.88 li
2078.6 1034.88 li
2078.6 1050.4 li
cp
f
2017.57 396.928 mo
2017.54 398.698 li
2064.99 398.698 li
2064.96 396.928 li
2017.57 396.928 li
cp
f
2016.92 433.644 mo
2016.89 435.414 li
2065.64 435.414 li
2065.61 433.644 li
2016.92 433.644 li
cp
f
2016.32 467.719 mo
2016.29 469.489 li
2066.25 469.489 li
2066.22 467.719 li
2016.32 467.719 li
cp
f
2015.75 500.037 mo
2015.72 501.807 li
2066.82 501.807 li
2066.79 500.037 li
2015.75 500.037 li
cp
f
2015.21 530.466 mo
2015.18 532.236 li
2067.36 532.236 li
2067.33 530.466 li
2015.21 530.466 li
cp
f
2014.7 559.261 mo
2014.67 561.031 li
2067.87 561.031 li
2067.84 559.261 li
2014.7 559.261 li
cp
f
2014.23 586.021 mo
2014.19 587.791 li
2068.34 587.791 li
2068.31 586.021 li
2014.23 586.021 li
cp
f
2013.77 611.588 mo
2013.74 613.358 li
2068.79 613.358 li
2068.76 611.588 li
2013.77 611.588 li
cp
f
2013.35 635.205 mo
2013.32 636.975 li
2069.21 636.975 li
2069.18 635.205 li
2013.35 635.205 li
cp
f
2012.96 657.728 mo
2012.92 659.499 li
2069.61 659.499 li
2069.58 657.728 li
2012.96 657.728 li
cp
f
2012.58 679.033 mo
2012.55 680.803 li
2069.99 680.803 li
2069.96 679.033 li
2012.58 679.033 li
cp
f
2012.22 699.122 mo
2012.19 700.892 li
2070.34 700.892 li
2070.31 699.122 li
2012.22 699.122 li
cp
f
2011.89 717.991 mo
2011.86 719.761 li
2070.68 719.761 li
2070.65 717.991 li
2011.89 717.991 li
cp
f
2011.57 736.01 mo
2011.54 737.78 li
2071 737.78 li
2070.96 736.01 li
2011.57 736.01 li
cp
f
2011.28 752.69 mo
2011.24 754.46 li
2071.29 754.46 li
2071.26 752.69 li
2011.28 752.69 li
cp
f
2010.99 768.638 mo
2010.96 770.408 li
2071.57 770.408 li
2071.54 768.638 li
2010.99 768.638 li
cp
f
2010.73 783.369 mo
2010.7 785.139 li
2071.83 785.139 li
2071.8 783.369 li
2010.73 783.369 li
cp
f
2010.48 797.491 mo
2010.45 799.261 li
2072.08 799.261 li
2072.05 797.491 li
2010.48 797.491 li
cp
f
2010.24 811.074 mo
2010.21 812.844 li
2072.33 812.844 li
2072.29 811.074 li
2010.24 811.074 li
cp
f
2010.02 823.458 mo
2009.99 825.228 li
2072.54 825.228 li
2072.51 823.458 li
2010.02 823.458 li
cp
f
2009.81 835.271 mo
2009.78 837.041 li
2072.75 837.041 li
2072.72 835.271 li
2009.81 835.271 li
cp
f
2072.95 848.135 mo
2072.92 846.365 li
2009.62 846.365 li
2009.59 848.135 li
2072.95 848.135 li
cp
f
2044.52 516.137 mo
2044.52 517.933 2043.06 519.389 2041.27 519.389 cv
2039.47 519.389 2038.01 517.933 2038.01 516.137 cv
2038.01 514.34 2039.47 512.884 2041.27 512.884 cv
2043.06 512.884 2044.52 514.34 2044.52 516.137 cv
cp
f
2044.52 451.567 mo
2044.52 453.363 2043.06 454.82 2041.27 454.82 cv
2039.47 454.82 2038.01 453.363 2038.01 451.567 cv
2038.01 449.77 2039.47 448.314 2041.27 448.314 cv
2043.06 448.314 2044.52 449.77 2044.52 451.567 cv
cp
f
2044.52 573.526 mo
2044.52 575.322 2043.06 576.778 2041.27 576.778 cv
2039.47 576.778 2038.01 575.322 2038.01 573.526 cv
2038.01 571.729 2039.47 570.273 2041.27 570.273 cv
2043.06 570.273 2044.52 571.729 2044.52 573.526 cv
cp
f
2044.52 624.282 mo
2044.52 626.078 2043.06 627.534 2041.27 627.534 cv
2039.47 627.534 2038.01 626.078 2038.01 624.282 cv
2038.01 622.485 2039.47 621.028 2041.27 621.028 cv
2043.06 621.028 2044.52 622.485 2044.52 624.282 cv
cp
f
2044.52 745.235 mo
2044.52 747.032 2043.06 748.488 2041.27 748.488 cv
2039.47 748.488 2038.01 747.032 2038.01 745.235 cv
2038.01 743.438 2039.47 741.982 2041.27 741.982 cv
2043.06 741.982 2044.52 743.438 2044.52 745.235 cv
cp
f
2044.52 776.889 mo
2044.52 778.685 2043.06 780.142 2041.27 780.142 cv
2039.47 780.142 2038.01 778.685 2038.01 776.889 cv
2038.01 775.092 2039.47 773.636 2041.27 773.636 cv
2043.06 773.636 2044.52 775.092 2044.52 776.889 cv
cp
f
2044.52 805.168 mo
2044.52 806.964 2043.06 808.421 2041.27 808.421 cv
2039.47 808.421 2038.01 806.964 2038.01 805.168 cv
2038.01 803.372 2039.47 801.915 2041.27 801.915 cv
2043.06 801.915 2044.52 803.372 2044.52 805.168 cv
cp
f
2044.52 830.25 mo
2044.52 832.046 2043.06 833.502 2041.27 833.502 cv
2039.47 833.502 2038.01 832.046 2038.01 830.25 cv
2038.01 828.453 2039.47 826.996 2041.27 826.996 cv
2043.06 826.996 2044.52 828.453 2044.52 830.25 cv
cp
f
2026.82 689.962 mo
2026.82 691.759 2025.36 693.215 2023.57 693.215 cv
2021.77 693.215 2020.31 691.759 2020.31 689.962 cv
2020.31 688.166 2021.77 686.709 2023.57 686.709 cv
2025.36 686.709 2026.82 688.166 2026.82 689.962 cv
cp
f
2062.22 689.962 mo
2062.22 691.759 2060.76 693.215 2058.97 693.215 cv
2057.17 693.215 2055.71 691.759 2055.71 689.962 cv
2055.71 688.166 2057.17 686.709 2058.97 686.709 cv
2060.76 686.709 2062.22 688.166 2062.22 689.962 cv
cp
f
2014.01 1042.72 mo
2012.48 1042.71 li
2018.94 354.314 li
2017.45 307.833 li
2018.97 307.786 li
2020.46 354.296 li
2014.01 1042.72 li
cp
f
2025.21 1042.72 mo
2023.69 1042.71 li
2027.4 354.317 li
2024.62 282.856 li
2026.15 282.796 li
2028.92 354.291 li
2025.21 1042.72 li
cp
f
2036.42 1042.72 mo
2034.9 1042.72 li
2036.09 354.32 li
2031.85 257.638 li
2033.37 257.573 li
2037.61 354.288 li
2036.42 1042.72 li
cp
f
2046.11 1042.72 mo
2044.93 354.32 li
2039.05 232.542 li
2040.57 232.471 li
2046.45 354.285 li
2047.63 1042.72 li
2046.11 1042.72 li
cp
f
2057.32 1042.72 mo
2053.62 354.323 li
2046.2 207.443 li
2047.72 207.366 li
2055.14 354.282 li
2058.84 1042.71 li
2057.32 1042.72 li
cp
f
2068.53 1042.72 mo
2062.07 354.326 li
2053.4 182.344 li
2054.92 182.267 li
2063.59 354.282 li
2070.05 1042.71 li
2068.53 1042.72 li
cp
f
2014.15 311.578 mo
2012.07 310.962 2010.88 308.769 2011.5 306.69 cv
2012.11 304.612 2014.3 303.422 2016.38 304.038 cv
2018.46 304.653 2019.65 306.845 2019.03 308.923 cv
2018.42 311.001 2016.22 312.193 2014.15 311.578 cv
cp
0 0 0 rgb
f
2021.32 286.477 mo
2019.24 285.861 2018.05 283.668 2018.67 281.59 cv
2019.28 279.512 2021.47 278.322 2023.55 278.938 cv
2025.63 279.553 2026.82 281.745 2026.2 283.823 cv
2025.59 285.901 2023.4 287.093 2021.32 286.477 cv
cp
f
2028.49 261.376 mo
2026.41 260.761 2025.22 258.568 2025.84 256.489 cv
2026.45 254.411 2028.65 253.221 2030.72 253.837 cv
2032.8 254.453 2033.99 256.644 2033.38 258.722 cv
2032.76 260.801 2030.57 261.992 2028.49 261.376 cv
cp
f
2035.66 236.276 mo
2033.58 235.66 2032.39 233.467 2033.01 231.389 cv
2033.63 229.311 2035.82 228.121 2037.9 228.736 cv
2039.97 229.352 2041.16 231.543 2040.55 233.622 cv
2039.93 235.7 2037.74 236.892 2035.66 236.276 cv
cp
f
2042.83 211.175 mo
2040.76 210.56 2039.57 208.367 2040.18 206.289 cv
2040.8 204.21 2042.99 203.02 2045.07 203.636 cv
2047.15 204.251 2048.33 206.443 2047.72 208.521 cv
2047.1 210.6 2044.91 211.791 2042.83 211.175 cv
cp
f
2050.01 186.075 mo
2047.93 185.459 2046.74 183.266 2047.35 181.188 cv
2047.97 179.109 2050.16 177.919 2052.24 178.535 cv
2054.32 179.151 2055.51 181.342 2054.89 183.42 cv
2054.28 185.499 2052.08 186.69 2050.01 186.075 cv
cp
f
472.181 938.964 mo
472.181 889.06 498.071 882.743 498.071 840.583 cv
498.071 783.369 462.939 799.207 454.263 820.287 cv
445.034 842.709 433.466 854.908 416.579 854.908 cv
402.152 854.908 373.922 854.643 373.922 802.319 cv
345.078 765.1 li
345.078 765.1 331.156 795.224 305.325 795.224 cv
290.272 795.224 273.808 771.632 231.402 771.632 cv
208.858 771.632 199.603 793.205 199.603 812.844 cv
199.603 850.225 225.056 896.238 225.056 920.287 cv
225.056 995.751 172.833 1008.66 172.833 1094.7 cv
172.833 1144.6 210.691 1203.97 281.85 1203.97 cv
345.078 1203.97 li
419.659 1203.97 li
475.701 1203.97 517 1158.6 517 1119.65 cv
517 1015.37 472.181 989.441 472.181 938.964 cv
cp
f
239.217 920.285 mo
239.217 956.312 244.221 976.231 252.312 1000.33 cv
253.061 1002.57 255.166 1004.08 257.519 1004.08 cv
474.134 1004.08 li
475.398 1004.08 476.257 1002.81 475.752 1001.65 cv
471.748 992.462 458.02 959.479 458.02 938.964 cv
458.02 909.641 466.115 893.323 473.257 878.928 cv
479.209 866.931 483.911 857.455 483.911 840.581 cv
483.911 821.978 479.677 815.811 478.565 815.209 cv
475.85 815.209 469.814 819.707 467.356 825.677 cv
462.939 836.408 449.495 869.068 416.58 869.068 cv
402.882 869.068 361.91 869.071 359.843 807.271 cv
345.793 789.142 li
337.053 799.075 323.586 809.384 305.324 809.384 cv
265.949 809.384 239.217 866.915 239.217 920.285 cv
cp
1 1 1 rgb
f
284.272 309.659 mo
296.346 313.236 li
296.654 313.327 296.978 313.151 297.069 312.843 cv
303.425 291.384 li
303.517 291.076 303.341 290.752 303.033 290.661 cv
290.959 287.085 li
289.956 286.788 288.902 287.36 288.605 288.364 cv
282.994 307.305 li
282.697 308.308 283.27 309.362 284.272 309.659 cv
cp
0 0 0 rgb
f
292.042 303.285 mo
318.49 311.119 li
320.451 304.497 li
294.004 296.663 li
292.042 303.285 li
cp
f
291.444 284.559 mo
303.518 288.135 li
303.826 288.227 304.149 288.051 304.241 287.743 cv
310.597 266.284 li
310.688 265.976 310.512 265.652 310.205 265.561 cv
298.131 261.984 li
297.128 261.687 296.074 262.259 295.777 263.263 cv
290.166 282.204 li
289.869 283.208 290.441 284.262 291.444 284.559 cv
cp
f
299.214 278.184 mo
325.662 286.019 li
327.623 279.396 li
301.176 271.563 li
299.214 278.184 li
cp
f
298.616 259.458 mo
310.689 263.034 li
310.998 263.125 311.321 262.95 311.413 262.642 cv
317.769 241.183 li
317.86 240.875 317.684 240.551 317.376 240.46 cv
305.303 236.884 li
304.3 236.587 303.246 237.159 302.948 238.163 cv
297.338 257.104 li
297.04 258.107 297.613 259.161 298.616 259.458 cv
cp
f
306.386 253.084 mo
332.833 260.917 li
334.795 254.296 li
308.348 246.462 li
306.386 253.084 li
cp
f
305.788 234.358 mo
317.861 237.934 li
318.169 238.025 318.493 237.85 318.584 237.542 cv
324.94 216.083 li
325.032 215.774 324.856 215.451 324.548 215.359 cv
312.475 211.784 li
311.472 211.486 310.417 212.059 310.12 213.062 cv
304.509 232.003 li
304.212 233.006 304.785 234.061 305.788 234.358 cv
cp
f
313.558 227.983 mo
340.005 235.817 li
341.967 229.195 li
315.52 221.361 li
313.558 227.983 li
cp
f
312.96 209.257 mo
325.033 212.833 li
325.341 212.925 325.665 212.749 325.756 212.441 cv
332.112 190.982 li
332.204 190.674 332.028 190.35 331.72 190.259 cv
319.646 186.683 li
318.643 186.385 317.589 186.958 317.292 187.961 cv
311.681 206.902 li
311.384 207.905 311.957 208.96 312.96 209.257 cv
cp
f
320.729 202.882 mo
347.177 210.717 li
349.139 204.095 li
322.691 196.261 li
320.729 202.882 li
cp
f
320.131 184.157 mo
332.205 187.733 li
332.513 187.824 332.836 187.648 332.928 187.34 cv
339.284 165.882 li
339.375 165.574 339.2 165.25 338.892 165.159 cv
326.818 161.582 li
325.815 161.285 324.761 161.857 324.463 162.86 cv
318.853 181.802 li
318.556 182.805 319.128 183.859 320.131 184.157 cv
cp
f
327.901 177.782 mo
354.349 185.616 li
356.31 178.994 li
329.863 171.16 li
327.901 177.782 li
cp
f
377.359 859.588 mo
377.359 859.588 367.793 863.129 345.475 863.129 cv
323.155 863.129 313.59 859.588 313.59 859.588 cv
322.44 359.64 li
368.509 359.64 li
377.359 859.588 li
cp
f
368.509 354.322 mo
322.44 354.322 li
322.44 359.64 li
368.509 359.64 li
368.509 354.322 li
cp
f
347.628 161.15 mo
336.909 197.803 305.506 310.322 305.506 310.322 cv
304.419 314.174 305.857 318.296 309.091 320.655 cv
319.437 328.202 322.44 337.261 322.44 354.322 cv
345.475 354.322 li
368.509 354.322 li
368.509 326.235 386.155 306.641 386.155 275.234 cv
386.155 242.3 378.784 241.596 378.784 214.879 cv
378.784 189.778 394.622 183.99 394.622 168.33 cv
394.622 153.577 386.571 141.527 370.122 141.527 cv
362.66 141.527 351.971 146.299 347.628 161.15 cv
cp
f
388.582 1015.66 mo
301.251 1015.66 li
297.773 1015.66 294.954 1018.48 294.954 1021.96 cv
294.954 1055.27 li
294.954 1058.75 297.773 1061.57 301.251 1061.57 cv
301.251 1061.57 li
304.73 1061.57 385.104 1061.57 388.582 1061.57 cv
388.582 1061.57 li
392.061 1061.57 394.88 1058.75 394.88 1055.27 cv
394.88 1021.96 li
394.88 1018.48 392.061 1015.66 388.582 1015.66 cv
cp
1 1 1 rgb
f
301.251 1059.8 mo
298.755 1059.8 296.724 1057.76 296.724 1055.27 cv
296.724 1021.96 li
296.724 1019.46 298.755 1017.43 301.251 1017.43 cv
388.582 1017.43 li
391.08 1017.43 393.111 1019.46 393.111 1021.96 cv
393.111 1055.27 li
393.111 1057.76 391.08 1059.8 388.582 1059.8 cv
384.134 1059.8 305.699 1059.8 301.251 1059.8 cv
cp
0 0 0 rgb
f
301.251 1058.03 mo
299.732 1058.03 298.495 1056.79 298.495 1055.27 cv
298.495 1021.96 li
298.495 1020.44 299.732 1019.2 301.251 1019.2 cv
388.582 1019.2 li
390.103 1019.2 391.341 1020.44 391.341 1021.96 cv
391.341 1055.27 li
391.341 1056.79 390.103 1058.03 388.582 1058.03 cv
383.158 1058.03 306.676 1058.03 301.251 1058.03 cv
cp
1 1 1 rgb
f
326.634 309.93 mo
325.462 313.886 321.305 316.143 317.349 314.971 cv
313.393 313.799 311.135 309.642 312.307 305.686 cv
313.479 301.729 317.636 299.473 321.592 300.645 cv
325.548 301.816 327.806 305.974 326.634 309.93 cv
cp
f
333.806 284.829 mo
332.634 288.786 328.477 291.042 324.52 289.871 cv
320.564 288.699 318.307 284.542 319.479 280.585 cv
320.65 276.629 324.808 274.372 328.764 275.544 cv
332.72 276.716 334.978 280.873 333.806 284.829 cv
cp
f
340.978 259.729 mo
339.806 263.685 335.648 265.942 331.692 264.77 cv
327.736 263.599 325.478 259.441 326.651 255.485 cv
327.822 251.529 331.979 249.271 335.936 250.443 cv
339.892 251.615 342.149 255.772 340.978 259.729 cv
cp
f
348.149 234.628 mo
346.977 238.584 342.82 240.841 338.864 239.67 cv
334.908 238.498 332.65 234.341 333.822 230.384 cv
334.994 226.428 339.151 224.171 343.107 225.343 cv
347.064 226.515 349.321 230.672 348.149 234.628 cv
cp
f
355.321 209.527 mo
354.149 213.484 349.992 215.741 346.036 214.569 cv
342.079 213.397 339.822 209.24 340.994 205.284 cv
342.166 201.328 346.323 199.07 350.279 200.242 cv
354.236 201.414 356.493 205.571 355.321 209.527 cv
cp
f
362.493 184.427 mo
361.321 188.383 357.164 190.641 353.207 189.469 cv
349.251 188.297 346.994 184.14 348.166 180.184 cv
349.338 176.227 353.495 173.97 357.451 175.142 cv
361.408 176.314 363.665 180.471 362.493 184.427 cv
cp
f
461.13 1054.88 mo
461.13 1062.6 454.872 1068.86 447.151 1068.86 cv
439.431 1068.86 433.173 1062.6 433.173 1054.88 cv
433.173 1047.16 439.431 1040.9 447.151 1040.9 cv
454.872 1040.9 461.13 1047.16 461.13 1054.88 cv
cp
f
461.13 1119.95 mo
461.13 1127.67 454.872 1133.93 447.151 1133.93 cv
439.431 1133.93 433.173 1127.67 433.173 1119.95 cv
433.173 1112.23 439.431 1105.97 447.151 1105.97 cv
454.872 1105.97 461.13 1112.23 461.13 1119.95 cv
cp
f
381.136 991.865 mo
309.813 991.865 li
308.892 991.865 308.145 991.118 308.145 990.197 cv
308.145 973.238 li
308.145 972.316 308.892 971.57 309.813 971.57 cv
381.136 971.57 li
382.057 971.57 382.803 972.316 382.803 973.237 cv
382.803 990.197 li
382.803 991.118 382.057 991.865 381.136 991.865 cv
cp
0 0 0 rgb
f
322.822 981.805 mo
322.822 983.777 321.223 985.376 319.251 985.376 cv
317.279 985.376 315.68 983.777 315.68 981.805 cv
315.68 979.833 317.279 978.233 319.251 978.233 cv
321.223 978.233 322.822 979.833 322.822 981.805 cv
cp
1 1 1 rgb
f
333.311 981.805 mo
333.311 983.777 331.713 985.376 329.741 985.376 cv
327.768 985.376 326.169 983.777 326.169 981.805 cv
326.169 979.833 327.768 978.233 329.741 978.233 cv
331.713 978.233 333.311 979.833 333.311 981.805 cv
cp
f
343.801 981.805 mo
343.801 983.777 342.202 985.376 340.229 985.376 cv
338.257 985.376 336.659 983.777 336.659 981.805 cv
336.659 979.833 338.257 978.233 340.229 978.233 cv
342.202 978.233 343.801 979.833 343.801 981.805 cv
cp
f
354.29 981.805 mo
354.29 983.777 352.691 985.376 350.719 985.376 cv
348.747 985.376 347.148 983.777 347.148 981.805 cv
347.148 979.833 348.747 978.233 350.719 978.233 cv
352.691 978.233 354.29 979.833 354.29 981.805 cv
cp
f
364.78 981.805 mo
364.78 983.777 363.181 985.376 361.209 985.376 cv
359.236 985.376 357.638 983.777 357.638 981.805 cv
357.638 979.833 359.236 978.233 361.209 978.233 cv
363.181 978.233 364.78 979.833 364.78 981.805 cv
cp
f
375.269 981.805 mo
375.269 983.777 373.67 985.376 371.698 985.376 cv
369.726 985.376 368.127 983.777 368.127 981.805 cv
368.127 979.833 369.726 978.233 371.698 978.233 cv
373.67 978.233 375.269 979.833 375.269 981.805 cv
cp
f
381.136 903.681 mo
309.813 903.681 li
308.892 903.681 308.145 902.934 308.145 902.013 cv
308.145 885.053 li
308.145 884.132 308.892 883.385 309.813 883.385 cv
381.136 883.385 li
382.057 883.385 382.803 884.132 382.803 885.053 cv
382.803 902.013 li
382.803 902.934 382.057 903.681 381.136 903.681 cv
cp
0 0 0 rgb
f
322.822 893.621 mo
322.822 895.593 321.223 897.192 319.251 897.192 cv
317.279 897.192 315.68 895.593 315.68 893.621 cv
315.68 891.648 317.279 890.049 319.251 890.049 cv
321.223 890.049 322.822 891.648 322.822 893.621 cv
cp
1 1 1 rgb
f
333.311 893.621 mo
333.311 895.593 331.713 897.192 329.741 897.192 cv
327.768 897.192 326.169 895.593 326.169 893.621 cv
326.169 891.648 327.768 890.049 329.741 890.049 cv
331.713 890.049 333.311 891.648 333.311 893.621 cv
cp
f
343.801 893.621 mo
343.801 895.593 342.202 897.192 340.229 897.192 cv
338.257 897.192 336.659 895.593 336.659 893.621 cv
336.659 891.648 338.257 890.049 340.229 890.049 cv
342.202 890.049 343.801 891.648 343.801 893.621 cv
cp
f
354.29 893.621 mo
354.29 895.593 352.691 897.192 350.719 897.192 cv
348.747 897.192 347.148 895.593 347.148 893.621 cv
347.148 891.648 348.747 890.049 350.719 890.049 cv
352.691 890.049 354.29 891.648 354.29 893.621 cv
cp
f
364.78 893.621 mo
364.78 895.593 363.181 897.192 361.209 897.192 cv
359.236 897.192 357.638 895.593 357.638 893.621 cv
357.638 891.648 359.236 890.049 361.209 890.049 cv
363.181 890.049 364.78 891.648 364.78 893.621 cv
cp
f
375.269 893.621 mo
375.269 895.593 373.67 897.192 371.698 897.192 cv
369.726 897.192 368.127 895.593 368.127 893.621 cv
368.127 891.648 369.726 890.049 371.698 890.049 cv
373.67 890.049 375.269 891.648 375.269 893.621 cv
cp
f
382.803 1050.4 mo
308.145 1050.4 li
308.145 1034.88 li
382.803 1034.88 li
382.803 1050.4 li
cp
0 0 0 rgb
f
321.78 396.928 mo
321.749 398.698 li
369.2 398.698 li
369.169 396.928 li
321.78 396.928 li
cp
1 1 1 rgb
f
321.13 433.644 mo
321.099 435.414 li
369.851 435.414 li
369.819 433.644 li
321.13 433.644 li
cp
f
320.526 467.719 mo
320.495 469.489 li
370.454 469.489 li
370.422 467.719 li
320.526 467.719 li
cp
f
319.955 500.037 mo
319.923 501.807 li
371.026 501.807 li
370.995 500.037 li
319.955 500.037 li
cp
f
319.415 530.466 mo
319.384 532.236 li
371.564 532.236 li
371.533 530.466 li
319.415 530.466 li
cp
f
318.906 559.261 mo
318.874 561.031 li
372.074 561.031 li
372.043 559.261 li
318.906 559.261 li
cp
f
318.432 586.021 mo
318.401 587.791 li
372.548 587.791 li
372.517 586.021 li
318.432 586.021 li
cp
f
317.979 611.588 mo
317.949 613.358 li
373 613.358 li
372.969 611.588 li
317.979 611.588 li
cp
f
317.561 635.205 mo
317.53 636.975 li
373.419 636.975 li
373.387 635.205 li
317.561 635.205 li
cp
f
317.163 657.728 mo
317.132 659.499 li
373.817 659.499 li
373.786 657.728 li
317.163 657.728 li
cp
f
316.786 679.033 mo
316.754 680.803 li
374.194 680.803 li
374.163 679.033 li
316.786 679.033 li
cp
f
316.43 699.122 mo
316.399 700.892 li
374.55 700.892 li
374.519 699.122 li
316.43 699.122 li
cp
f
316.096 717.991 mo
316.065 719.761 li
374.884 719.761 li
374.853 717.991 li
316.096 717.991 li
cp
f
315.777 736.01 mo
315.746 737.78 li
375.203 737.78 li
375.172 736.01 li
315.777 736.01 li
cp
f
315.482 752.69 mo
315.451 754.46 li
375.498 754.46 li
375.467 752.69 li
315.482 752.69 li
cp
f
315.2 768.638 mo
315.168 770.408 li
375.781 770.408 li
375.749 768.638 li
315.2 768.638 li
cp
f
314.939 783.369 mo
314.908 785.139 li
376.041 785.139 li
376.01 783.369 li
314.939 783.369 li
cp
f
314.689 797.491 mo
314.658 799.261 li
376.291 799.261 li
376.26 797.491 li
314.689 797.491 li
cp
f
314.448 811.074 mo
314.417 812.844 li
376.532 812.844 li
376.5 811.074 li
314.448 811.074 li
cp
f
314.229 823.458 mo
314.198 825.228 li
376.751 825.228 li
376.72 823.458 li
314.229 823.458 li
cp
f
314.02 835.271 mo
313.989 837.041 li
376.96 837.041 li
376.929 835.271 li
314.02 835.271 li
cp
f
377.157 848.135 mo
377.125 846.365 li
313.824 846.365 li
313.792 848.135 li
377.157 848.135 li
cp
f
348.728 516.137 mo
348.728 517.933 347.271 519.389 345.475 519.389 cv
343.678 519.389 342.222 517.933 342.222 516.137 cv
342.222 514.34 343.678 512.884 345.475 512.884 cv
347.271 512.884 348.728 514.34 348.728 516.137 cv
cp
f
348.728 451.567 mo
348.728 453.363 347.271 454.82 345.475 454.82 cv
343.678 454.82 342.222 453.363 342.222 451.567 cv
342.222 449.77 343.678 448.314 345.475 448.314 cv
347.271 448.314 348.728 449.77 348.728 451.567 cv
cp
f
348.728 573.526 mo
348.728 575.322 347.271 576.778 345.475 576.778 cv
343.678 576.778 342.222 575.322 342.222 573.526 cv
342.222 571.729 343.678 570.273 345.475 570.273 cv
347.271 570.273 348.728 571.729 348.728 573.526 cv
cp
f
348.728 624.282 mo
348.728 626.078 347.271 627.534 345.475 627.534 cv
343.678 627.534 342.222 626.078 342.222 624.282 cv
342.222 622.485 343.678 621.028 345.475 621.028 cv
347.271 621.028 348.728 622.485 348.728 624.282 cv
cp
f
348.728 745.235 mo
348.728 747.032 347.271 748.488 345.475 748.488 cv
343.678 748.488 342.222 747.032 342.222 745.235 cv
342.222 743.438 343.678 741.982 345.475 741.982 cv
347.271 741.982 348.728 743.438 348.728 745.235 cv
cp
f
348.728 776.889 mo
348.728 778.685 347.271 780.142 345.475 780.142 cv
343.678 780.142 342.222 778.685 342.222 776.889 cv
342.222 775.092 343.678 773.636 345.475 773.636 cv
347.271 773.636 348.728 775.092 348.728 776.889 cv
cp
f
348.728 805.168 mo
348.728 806.964 347.271 808.421 345.475 808.421 cv
343.678 808.421 342.222 806.964 342.222 805.168 cv
342.222 803.372 343.678 801.915 345.475 801.915 cv
347.271 801.915 348.728 803.372 348.728 805.168 cv
cp
f
348.728 830.25 mo
348.728 832.046 347.271 833.502 345.475 833.502 cv
343.678 833.502 342.222 832.046 342.222 830.25 cv
342.222 828.453 343.678 826.996 345.475 826.996 cv
347.271 826.996 348.728 828.453 348.728 830.25 cv
cp
f
331.027 689.962 mo
331.027 691.759 329.571 693.215 327.774 693.215 cv
325.978 693.215 324.521 691.759 324.521 689.962 cv
324.521 688.166 325.978 686.709 327.774 686.709 cv
329.571 686.709 331.027 688.166 331.027 689.962 cv
cp
f
366.428 689.962 mo
366.428 691.759 364.972 693.215 363.175 693.215 cv
361.378 693.215 359.922 691.759 359.922 689.962 cv
359.922 688.166 361.378 686.709 363.175 686.709 cv
364.972 686.709 366.428 688.166 366.428 689.962 cv
cp
f
318.21 1042.73 mo
316.688 1042.71 li
323.147 354.317 li
321.656 307.833 li
323.177 307.786 li
324.669 354.299 li
318.21 1042.73 li
cp
f
329.422 1042.73 mo
327.901 1042.71 li
331.609 354.317 li
328.828 282.859 li
330.349 282.8 li
333.13 354.294 li
329.422 1042.73 li
cp
f
340.629 1042.72 mo
339.108 1042.72 li
340.29 354.323 li
336.054 257.642 li
337.575 257.57 li
341.811 354.288 li
340.629 1042.72 li
cp
f
350.32 1042.72 mo
349.138 354.323 li
343.255 232.542 li
344.776 232.471 li
350.659 354.288 li
351.841 1042.72 li
350.32 1042.72 li
cp
f
361.527 1042.73 mo
357.819 354.33 li
350.403 207.443 li
351.924 207.373 li
359.34 354.288 li
363.048 1042.71 li
361.527 1042.73 li
cp
f
372.739 1042.73 mo
366.28 354.33 li
357.605 182.338 li
359.126 182.268 li
367.802 354.288 li
374.26 1042.71 li
372.739 1042.73 li
cp
f
318.353 311.578 mo
316.275 310.962 315.085 308.769 315.701 306.69 cv
316.317 304.612 318.508 303.422 320.586 304.038 cv
322.665 304.653 323.854 306.845 323.239 308.923 cv
322.624 311.001 320.432 312.193 318.353 311.578 cv
cp
0 0 0 rgb
f
325.525 286.477 mo
323.447 285.861 322.257 283.668 322.873 281.59 cv
323.489 279.512 325.68 278.322 327.758 278.938 cv
329.837 279.553 331.026 281.745 330.411 283.823 cv
329.795 285.901 327.603 287.093 325.525 286.477 cv
cp
f
332.697 261.376 mo
330.619 260.761 329.429 258.568 330.045 256.489 cv
330.661 254.411 332.852 253.221 334.93 253.837 cv
337.009 254.453 338.198 256.644 337.582 258.722 cv
336.967 260.801 334.775 261.992 332.697 261.376 cv
cp
f
339.869 236.276 mo
337.79 235.66 336.601 233.467 337.217 231.389 cv
337.832 229.311 340.024 228.121 342.102 228.736 cv
344.18 229.352 345.37 231.543 344.754 233.622 cv
344.139 235.7 341.947 236.892 339.869 236.276 cv
cp
f
347.04 211.175 mo
344.962 210.56 343.773 208.367 344.389 206.289 cv
345.004 204.21 347.195 203.02 349.274 203.636 cv
351.352 204.251 352.542 206.443 351.926 208.521 cv
351.311 210.6 349.119 211.791 347.04 211.175 cv
cp
f
354.212 186.075 mo
352.134 185.459 350.945 183.266 351.561 181.188 cv
352.176 179.109 354.367 177.919 356.446 178.535 cv
358.524 179.151 359.714 181.342 359.098 183.42 cv
358.482 185.499 356.291 186.69 354.212 186.075 cv
cp
f
2982.5 771.594 mo
2977.95 758.745 2971.12 746.835 2962.47 736.296 cv
2950.18 721.314 2931.92 696.21 2921.89 668.853 cv
2911.87 696.21 2893.6 721.315 2881.31 736.296 cv
2872.66 746.835 2865.83 758.744 2861.28 771.593 cv
2698.68 1230.28 li
2690.05 1254.63 2721.4 1272.98 2738.41 1253.54 cv
2893.95 1075.65 li
2908.74 1058.74 2935.04 1058.74 2949.83 1075.65 cv
3105.37 1253.54 li
3122.38 1272.98 3153.73 1254.63 3145.1 1230.28 cv
2982.5 771.594 li
cp
f
3105.92 1162.68 mo
2989.18 1094.14 li
2982.17 1090.03 2977.87 1082.51 2977.87 1074.38 cv
2977.87 917.386 li
2938.88 917.386 li
2938.88 788.165 li
2980 788.165 li
2981.17 788.165 2982.2 788.91 2982.58 790.016 cv
3107.61 1161.31 li
3107.95 1162.33 3106.85 1163.23 3105.92 1162.68 cv
cp
1 1 1 rgb
f
2993.12 225.267 mo
2980.91 228.313 li
2980.59 228.39 2980.28 228.201 2980.2 227.889 cv
2974.79 206.173 li
2974.71 205.861 2974.9 205.546 2975.21 205.468 cv
2987.43 202.421 li
2988.44 202.168 2989.47 202.786 2989.72 203.802 cv
2994.5 222.97 li
2994.76 223.985 2994.14 225.013 2993.12 225.267 cv
cp
0 0 0 rgb
f
2985.64 218.559 mo
2958.88 225.232 li
2957.2 218.531 li
2983.97 211.858 li
2985.64 218.559 li
cp
f
2984.93 192.661 mo
2972.71 195.708 li
2972.4 195.785 2972.08 195.595 2972.01 195.284 cv
2966.59 173.568 li
2966.51 173.256 2966.7 172.94 2967.02 172.863 cv
2979.23 169.817 li
2980.25 169.563 2981.28 170.181 2981.53 171.197 cv
2986.31 190.364 li
2986.56 191.379 2985.94 192.408 2984.93 192.661 cv
cp
f
2977.44 185.954 mo
2950.68 192.626 li
2949.01 185.925 li
2975.77 179.252 li
2977.44 185.954 li
cp
f
2976.74 160.056 mo
2964.52 163.102 li
2964.21 163.18 2963.89 162.99 2963.81 162.678 cv
2958.4 140.962 li
2958.32 140.651 2958.51 140.335 2958.82 140.257 cv
2971.04 137.211 li
2972.05 136.958 2973.08 137.576 2973.34 138.591 cv
2978.12 157.759 li
2978.37 158.774 2977.75 159.803 2976.74 160.056 cv
cp
f
2969.25 153.349 mo
2942.49 160.021 li
2940.82 153.32 li
2967.58 146.647 li
2969.25 153.349 li
cp
f
2850.66 225.267 mo
2862.88 228.313 li
2863.19 228.39 2863.5 228.201 2863.58 227.889 cv
2869 206.173 li
2869.07 205.861 2868.88 205.546 2868.57 205.468 cv
2856.35 202.421 li
2855.34 202.168 2854.31 202.786 2854.06 203.802 cv
2849.28 222.97 li
2849.02 223.985 2849.64 225.013 2850.66 225.267 cv
cp
f
2858.14 218.559 mo
2884.91 225.232 li
2886.58 218.531 li
2859.81 211.858 li
2858.14 218.559 li
cp
f
2858.85 192.661 mo
2871.07 195.708 li
2871.38 195.785 2871.7 195.595 2871.77 195.284 cv
2877.19 173.568 li
2877.27 173.256 2877.08 172.94 2876.76 172.863 cv
2864.55 169.817 li
2863.53 169.563 2862.5 170.181 2862.25 171.197 cv
2857.47 190.364 li
2857.22 191.379 2857.84 192.408 2858.85 192.661 cv
cp
f
2866.34 185.954 mo
2893.1 192.626 li
2894.77 185.925 li
2868.01 179.252 li
2866.34 185.954 li
cp
f
2867.04 160.056 mo
2879.26 163.102 li
2879.57 163.18 2879.89 162.99 2879.97 162.678 cv
2885.38 140.962 li
2885.46 140.651 2885.27 140.335 2884.96 140.257 cv
2872.74 137.211 li
2871.73 136.958 2870.7 137.576 2870.44 138.591 cv
2865.67 157.759 li
2865.41 158.774 2866.03 159.803 2867.04 160.056 cv
cp
f
2874.53 153.349 mo
2901.29 160.021 li
2902.96 153.32 li
2876.2 146.647 li
2874.53 153.349 li
cp
f
2953.78 788.263 mo
2890.01 788.263 li
2898.86 288.314 li
2944.92 288.314 li
2953.78 788.263 li
cp
f
2944.92 282.996 mo
2898.86 282.996 li
2898.86 288.314 li
2944.92 288.314 li
2944.92 282.996 li
cp
1 1 1 rgb
f
2901.78 99.5498 mo
2867.12 239.739 li
2866.77 241.137 2867.69 242.468 2869.09 242.793 cv
2879.73 245.255 2898.86 261.145 2898.86 282.996 cv
2921.89 282.996 li
2944.92 282.996 li
2944.92 261.145 2964.05 245.255 2974.69 242.793 cv
2976.09 242.468 2977.01 241.137 2976.66 239.739 cv
2942 99.5498 li
2936.81 78.5566 2906.97 78.5566 2901.78 99.5498 cv
cp
0 0 0 rgb
f
2892.99 223.689 mo
2891.99 227.692 2887.94 230.128 2883.93 229.13 cv
2879.93 228.132 2877.49 224.078 2878.49 220.074 cv
2879.49 216.07 2883.54 213.634 2887.55 214.632 cv
2891.55 215.63 2893.99 219.685 2892.99 223.689 cv
cp
1 1 1 rgb
f
2901.18 191.083 mo
2900.19 195.087 2896.13 197.523 2892.13 196.525 cv
2888.12 195.527 2885.69 191.472 2886.69 187.469 cv
2887.68 183.465 2891.74 181.029 2895.74 182.027 cv
2899.75 183.025 2902.18 187.08 2901.18 191.083 cv
cp
f
2909.38 158.478 mo
2908.38 162.481 2904.33 164.918 2900.32 163.92 cv
2896.32 162.922 2893.88 158.867 2894.88 154.863 cv
2895.88 150.86 2899.93 148.423 2903.94 149.422 cv
2907.94 150.42 2910.38 154.475 2909.38 158.478 cv
cp
f
2870.92 837.826 mo
2870.92 786.718 li
2870.92 785.89 2871.59 785.218 2872.42 785.218 cv
2971.36 785.218 li
2972.19 785.218 2972.86 785.89 2972.86 786.718 cv
2972.86 837.826 li
2972.86 838.654 2972.19 839.326 2971.36 839.326 cv
2872.42 839.326 li
2871.59 839.326 2870.92 838.654 2870.92 837.826 cv
cp
0 0 0 rgb
f
2968.82 836.283 mo
2874.96 836.283 li
2874.41 836.283 2873.96 835.835 2873.96 835.283 cv
2873.96 789.263 li
2873.96 788.71 2874.41 788.263 2874.96 788.263 cv
2968.82 788.263 li
2969.37 788.263 2969.82 788.71 2969.82 789.263 cv
2969.82 835.283 li
2969.82 835.835 2969.37 836.283 2968.82 836.283 cv
cp
1 1 1 rgb
f
2958.22 832.568 mo
2885.56 832.568 li
2885.01 832.568 2884.56 832.121 2884.56 831.568 cv
2884.56 792.978 li
2884.56 792.425 2885.01 791.978 2885.56 791.978 cv
2958.22 791.978 li
2958.77 791.978 2959.22 792.425 2959.22 792.978 cv
2959.22 831.568 li
2959.22 832.121 2958.77 832.568 2958.22 832.568 cv
cp
0 0 0 rgb
f
2870.92 947.96 mo
2870.92 896.853 li
2870.92 896.024 2871.59 895.353 2872.42 895.353 cv
2971.36 895.353 li
2972.19 895.353 2972.86 896.024 2972.86 896.853 cv
2972.86 947.96 li
2972.86 948.789 2972.19 949.46 2971.36 949.46 cv
2872.42 949.46 li
2871.59 949.46 2870.92 948.789 2870.92 947.96 cv
cp
f
2968.82 946.418 mo
2874.96 946.418 li
2874.41 946.418 2873.96 945.97 2873.96 945.418 cv
2873.96 899.397 li
2873.96 898.845 2874.41 898.397 2874.96 898.397 cv
2968.82 898.397 li
2969.37 898.397 2969.82 898.845 2969.82 899.397 cv
2969.82 945.418 li
2969.82 945.97 2969.37 946.418 2968.82 946.418 cv
cp
1 1 1 rgb
f
2958.22 942.703 mo
2885.56 942.703 li
2885.01 942.703 2884.56 942.255 2884.56 941.703 cv
2884.56 903.112 li
2884.56 902.56 2885.01 902.112 2885.56 902.112 cv
2958.22 902.112 li
2958.77 902.112 2959.22 902.56 2959.22 903.112 cv
2959.22 941.703 li
2959.22 942.255 2958.77 942.703 2958.22 942.703 cv
cp
0 0 0 rgb
f
2971.8 996.686 mo
2871.98 996.686 li
2871.98 996.686 2868.44 999.853 2868.44 1005.48 cv
2868.44 1011.1 2871.98 1014.26 2871.98 1014.26 cv
2971.8 1014.26 li
2971.8 1014.26 2975.34 1011.1 2975.34 1005.48 cv
2975.34 999.853 2971.8 996.686 2971.8 996.686 cv
cp
1 1 1 rgb
f
2968.72 971.563 mo
2875.93 977.626 li
2875.33 977.666 2874.8 977.207 2874.77 976.603 cv
2874.04 965.462 li
2874 964.857 2874.46 964.335 2875.06 964.295 cv
2967.85 958.232 li
2968.45 958.192 2968.98 958.651 2969.02 959.256 cv
2969.74 970.396 li
2969.78 971.001 2969.32 971.523 2968.72 971.563 cv
cp
f
3015.46 1051.3 mo
3015.46 1059.02 3009.2 1065.28 3001.48 1065.28 cv
2993.76 1065.28 2987.5 1059.02 2987.5 1051.3 cv
2987.5 1043.58 2993.76 1037.32 3001.48 1037.32 cv
3009.2 1037.32 3015.46 1043.58 3015.46 1051.3 cv
cp
0 0 0 rgb
f
3051.23 1080.83 mo
3051.23 1088.55 3044.98 1094.81 3037.25 1094.81 cv
3029.54 1094.81 3023.28 1088.55 3023.28 1080.83 cv
3023.28 1073.11 3029.54 1066.85 3037.25 1066.85 cv
3044.98 1066.85 3051.23 1073.11 3051.23 1080.83 cv
cp
f
3055.37 1028.24 mo
3055.37 1035.96 3049.11 1042.22 3041.39 1042.22 cv
3033.67 1042.22 3027.41 1035.96 3027.41 1028.24 cv
3027.41 1020.52 3033.67 1014.26 3041.39 1014.26 cv
3049.11 1014.26 3055.37 1020.52 3055.37 1028.24 cv
cp
f
2950.79 223.689 mo
2951.79 227.692 2955.84 230.128 2959.85 229.13 cv
2963.85 228.132 2966.29 224.078 2965.29 220.074 cv
2964.29 216.07 2960.24 213.634 2956.23 214.632 cv
2952.23 215.63 2949.79 219.685 2950.79 223.689 cv
cp
1 1 1 rgb
f
2942.6 191.083 mo
2943.59 195.087 2947.65 197.523 2951.65 196.525 cv
2955.66 195.527 2958.09 191.472 2957.09 187.469 cv
2956.1 183.465 2952.04 181.029 2948.04 182.027 cv
2944.04 183.025 2941.6 187.08 2942.6 191.083 cv
cp
f
2934.4 158.478 mo
2935.4 162.481 2939.46 164.918 2943.46 163.92 cv
2947.46 162.922 2949.9 158.867 2948.9 154.863 cv
2947.9 150.86 2943.85 148.423 2939.84 149.422 cv
2935.84 150.42 2933.4 154.475 2934.4 158.478 cv
cp
f
2898.2 325.602 mo
2898.16 327.372 li
2945.62 327.372 li
2945.58 325.602 li
2898.2 325.602 li
cp
f
2897.55 362.318 mo
2897.51 364.088 li
2946.27 364.088 li
2946.24 362.318 li
2897.55 362.318 li
cp
f
2896.94 396.394 mo
2896.91 398.164 li
2946.87 398.164 li
2946.84 396.394 li
2896.94 396.394 li
cp
f
2896.37 428.71 mo
2896.34 430.481 li
2947.44 430.481 li
2947.41 428.71 li
2896.37 428.71 li
cp
f
2895.83 459.141 mo
2895.8 460.911 li
2947.98 460.911 li
2947.95 459.141 li
2895.83 459.141 li
cp
f
2895.32 487.935 mo
2895.29 489.705 li
2948.49 489.705 li
2948.46 487.935 li
2895.32 487.935 li
cp
f
2894.85 514.695 mo
2894.82 516.465 li
2948.96 516.465 li
2948.93 514.695 li
2894.85 514.695 li
cp
f
2894.4 540.262 mo
2894.36 542.032 li
2949.42 542.032 li
2949.38 540.262 li
2894.4 540.262 li
cp
f
2893.98 563.879 mo
2893.95 565.649 li
2949.83 565.649 li
2949.8 563.879 li
2893.98 563.879 li
cp
f
2893.58 586.402 mo
2893.55 588.172 li
2950.23 588.172 li
2950.2 586.402 li
2893.58 586.402 li
cp
f
2893.2 607.707 mo
2893.17 609.477 li
2950.61 609.477 li
2950.58 607.707 li
2893.2 607.707 li
cp
f
2892.85 627.796 mo
2892.81 629.566 li
2950.97 629.566 li
2950.93 627.796 li
2892.85 627.796 li
cp
f
2892.51 646.666 mo
2892.48 648.436 li
2951.3 648.436 li
2951.27 646.666 li
2892.51 646.666 li
cp
f
2892.19 664.684 mo
2892.16 666.454 li
2951.62 666.454 li
2951.59 664.684 li
2892.19 664.684 li
cp
f
2891.9 681.364 mo
2891.87 683.135 li
2951.91 683.135 li
2951.88 681.364 li
2891.9 681.364 li
cp
f
2891.62 697.312 mo
2891.58 699.083 li
2952.2 699.083 li
2952.17 697.312 li
2891.62 697.312 li
cp
f
2891.35 712.043 mo
2891.32 713.813 li
2952.46 713.813 li
2952.43 712.043 li
2891.35 712.043 li
cp
f
2891.1 726.166 mo
2891.07 727.936 li
2952.71 727.936 li
2952.68 726.166 li
2891.1 726.166 li
cp
f
2890.86 739.749 mo
2890.83 741.519 li
2952.95 741.519 li
2952.92 739.749 li
2890.86 739.749 li
cp
f
2890.64 752.132 mo
2890.61 753.902 li
2953.17 753.902 li
2953.14 752.132 li
2890.64 752.132 li
cp
f
2890.44 763.945 mo
2890.4 765.715 li
2953.38 765.715 li
2953.34 763.945 li
2890.44 763.945 li
cp
f
2953.57 776.809 mo
2953.54 775.039 li
2890.24 775.039 li
2890.21 776.809 li
2953.57 776.809 li
cp
f
2936.79 371.056 mo
2906.99 371.056 li
2905.88 371.056 2905.04 372.065 2905.25 373.155 cv
2908.12 388.32 li
2908.28 389.156 2909.01 389.761 2909.86 389.761 cv
2933.92 389.761 li
2934.77 389.761 2935.5 389.156 2935.66 388.32 cv
2938.53 373.155 li
2938.74 372.065 2937.9 371.056 2936.79 371.056 cv
cp
f
2936.79 435.458 mo
2906.99 435.458 li
2905.88 435.458 2905.04 436.467 2905.25 437.557 cv
2908.12 452.722 li
2908.28 453.558 2909.01 454.163 2909.86 454.163 cv
2933.92 454.163 li
2934.77 454.163 2935.5 453.558 2935.66 452.722 cv
2938.53 437.557 li
2938.74 436.467 2937.9 435.458 2936.79 435.458 cv
cp
f
2936.79 494.945 mo
2906.99 494.945 li
2905.88 494.945 2905.04 495.728 2905.25 496.574 cv
2908.12 508.336 li
2908.28 508.985 2909.01 509.454 2909.86 509.454 cv
2933.92 509.454 li
2934.77 509.454 2935.5 508.985 2935.66 508.336 cv
2938.53 496.574 li
2938.74 495.728 2937.9 494.945 2936.79 494.945 cv
cp
f
2936.79 545.701 mo
2906.99 545.701 li
2905.88 545.701 2905.04 546.484 2905.25 547.33 cv
2908.12 559.092 li
2908.28 559.741 2909.01 560.21 2909.86 560.21 cv
2933.92 560.21 li
2934.77 560.21 2935.5 559.741 2935.66 559.092 cv
2938.53 547.33 li
2938.74 546.484 2937.9 545.701 2936.79 545.701 cv
cp
f
2936.79 613.198 mo
2906.99 613.198 li
2905.88 613.198 2905.04 613.784 2905.25 614.418 cv
2908.12 623.238 li
2908.28 623.724 2909.01 624.076 2909.86 624.076 cv
2933.92 624.076 li
2934.77 624.076 2935.5 623.724 2935.66 623.238 cv
2938.53 614.418 li
2938.74 613.784 2937.9 613.198 2936.79 613.198 cv
cp
f
2936.79 668.47 mo
2906.99 668.47 li
2905.88 668.47 2905.04 669.057 2905.25 669.691 cv
2908.12 678.511 li
2908.28 678.997 2909.01 679.349 2909.86 679.349 cv
2933.92 679.349 li
2934.77 679.349 2935.5 678.997 2935.66 678.511 cv
2938.53 669.691 li
2938.74 669.057 2937.9 668.47 2936.79 668.47 cv
cp
f
2936.79 702.879 mo
2906.99 702.879 li
2905.88 702.879 2905.04 703.169 2905.25 703.481 cv
2908.12 707.833 li
2908.28 708.073 2909.01 708.246 2909.86 708.246 cv
2933.92 708.246 li
2934.77 708.246 2935.5 708.073 2935.66 707.833 cv
2938.53 703.481 li
2938.74 703.169 2937.9 702.879 2936.79 702.879 cv
cp
f
2936.79 731.159 mo
2906.99 731.159 li
2905.88 731.159 2905.04 731.448 2905.25 731.761 cv
2908.12 736.112 li
2908.28 736.352 2909.01 736.525 2909.86 736.525 cv
2933.92 736.525 li
2934.77 736.525 2935.5 736.352 2935.66 736.112 cv
2938.53 731.761 li
2938.74 731.448 2937.9 731.159 2936.79 731.159 cv
cp
f
2936.79 756.24 mo
2906.99 756.24 li
2905.88 756.24 2905.04 756.529 2905.25 756.842 cv
2908.12 761.193 li
2908.28 761.434 2909.01 761.607 2909.86 761.607 cv
2933.92 761.607 li
2934.77 761.607 2935.5 761.434 2935.66 761.193 cv
2938.53 756.842 li
2938.74 756.529 2937.9 756.24 2936.79 756.24 cv
cp
f
2894.63 1004.74 mo
2893.11 1004.73 li
2899.57 282.99 li
2888 222.025 li
2889.5 221.74 li
2901.08 282.853 li
2894.63 1004.74 li
cp
f
2905.84 1004.74 mo
2904.31 1004.73 li
2908.02 282.99 li
2895.89 189.374 li
2897.4 189.184 li
2909.54 282.901 li
2905.84 1004.74 li
cp
f
2917.05 1004.73 mo
2915.53 1004.73 li
2916.71 282.996 li
2904.11 156.747 li
2905.62 156.592 li
2918.22 282.918 li
2917.05 1004.73 li
cp
f
2926.73 1004.73 mo
2925.55 282.996 li
2938.07 156.592 li
2939.58 156.747 li
2927.07 283.073 li
2928.25 1004.73 li
2926.73 1004.73 li
cp
f
2937.95 1004.74 mo
2934.24 283.001 li
2946.4 190.123 li
2947.91 190.325 li
2935.75 283.097 li
2939.47 1004.73 li
2937.95 1004.74 li
cp
f
2949.15 1004.74 mo
2942.69 283.001 li
2954.29 222.352 li
2955.78 222.637 li
2944.2 283.138 li
2950.67 1004.73 li
2949.15 1004.74 li
cp
f
2884.79 225.696 mo
2882.69 225.171 2881.4 223.033 2881.93 220.929 cv
2882.45 218.826 2884.59 217.542 2886.69 218.066 cv
2888.79 218.591 2890.08 220.728 2889.55 222.831 cv
2889.03 224.935 2886.89 226.22 2884.79 225.696 cv
cp
0 0 0 rgb
f
2892.98 193.091 mo
2890.88 192.566 2889.6 190.427 2890.12 188.324 cv
2890.65 186.221 2892.78 184.937 2894.89 185.461 cv
2896.99 185.985 2898.27 188.123 2897.75 190.226 cv
2897.22 192.33 2895.09 193.615 2892.98 193.091 cv
cp
f
2901.18 160.485 mo
2899.07 159.961 2897.79 157.822 2898.31 155.719 cv
2898.84 153.616 2900.98 152.332 2903.08 152.855 cv
2905.18 153.38 2906.47 155.518 2905.94 157.621 cv
2905.42 159.724 2903.28 161.01 2901.18 160.485 cv
cp
f
2958.99 225.696 mo
2961.09 225.171 2962.38 223.033 2961.85 220.929 cv
2961.33 218.826 2959.19 217.542 2957.09 218.066 cv
2954.99 218.591 2953.7 220.728 2954.23 222.831 cv
2954.75 224.935 2956.89 226.22 2958.99 225.696 cv
cp
f
2950.8 193.091 mo
2952.9 192.566 2954.18 190.427 2953.66 188.324 cv
2953.14 186.221 2951 184.937 2948.89 185.461 cv
2946.79 185.985 2945.51 188.123 2946.03 190.226 cv
2946.56 192.33 2948.69 193.615 2950.8 193.091 cv
cp
f
2942.6 160.485 mo
2944.71 159.961 2945.99 157.822 2945.47 155.719 cv
2944.94 153.616 2942.8 152.332 2940.7 152.855 cv
2938.6 153.38 2937.31 155.518 2937.84 157.621 cv
2938.36 159.724 2940.5 161.01 2942.6 160.485 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Nout) ()
%%Title: (1908.m40.i030.n017.F.c06.1273240621 Black and white guitars. Acoustic and electric guitar outline musical instruments Vector isolated set.eps)
%%CreationDate: 9/10/2019 6:12 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9jne+!81^978Bi!Ls$IDM1K;,e7bf)PgqJKW.[SGD[Pp:%&cOG$'_R5lKON2$V-e^[r2e^[[M99tnX7__sN>.'%RB.OUf
%3LL=E,ZtI.148(@l*p[E0-=pFC3KfCM=QHP7R\B'nLMZ=2_:+Ib5J3klK()s=m^BrL2M+EYs@l8dL)Km20bhuDH0t$rWjckV;-SV
%nLX^1d<%6UFIGfT+@IX[A=lHPb:]"\!r/2!`TM%N5R"RIK2r"i6smYf8@Y]'./=2*?`5iagZp7Nc"K7p&N--p9[X*PXdBWL==c_T
%:C&!G;JK4rlTMT"J:e"IHf4sf=:^q0&^hu%"K7,'5EthNI\W_?_#B2;pqMG>q?]AB!>'fb:HkDf3Z&MrTE6*T3rI>L`>h2fdR``@
%U=sGL8l$b='7$OK@<e$+la)QX&g1kX+@fQ`&.r#&.RHQ<97_b1M2fZ0L$K"IrEWA%L]n8gV4r,a=iNP:K(^#%%($9IZ5atJX[a1U
%?0tn*ZlX=Z8PD$2EFMmH*>ioiA9<M2f>T-5CLIpB:/1,,H5_)O,nUMUPl9sUhomN6<7F"`WoU7`[Yi'>Bl&H2"W!n'"2-)b/`[(!
%+B+d^0,^-h"IC*F\jurqfYg2m;''iLXJ==Q<_S[e5X`&,8UN_cBGF$1TdqG\%q-\4\UJ,ef4lo,hWq-m]D4;TS31fU3u'n-@+FLB
%-##25&7,4&!)7CJ+OH+:p!ie(ScO[sgZ!neSkfeDTXBmNDuVmVT1R@S]akVa3_$lTD,lSQrYLGnN05+#Be;2M4q*ONiBZUXV5X]c
%B?ad\G[L[nIMqna3![2"^j,WU'F=dgPHCd@1Z5$cedd1+F.o<$b4WML[n5SWC;3Zi4ei*/>m[$d?Ju9kRrR%IS%i&A_K`#GKBG@L
%cNE;3::)(h:-fB)o)Rt@L'$a.I=<(>]$dj[!bKJTqd2SL_:V%D3!::)MD<k<m1LkGD*3f:E#',VY@.)e(GKR">JI5MdDl#WZ@3^R
%f9MZME=)=$lX,1Zd((>^WX5=!V?Ak_ALP$D(8,8ULt]K2eRfZuD30qSqoF<_&Ae%\=&hkr%TB4XWc\8in'Ie3ORrnZbM2gE!BFhV
%=d,J4,o'_;C)s-Vf?/Y4Vr+T]MM@i)"-$hr;R.Uf\cs*d%5aOlg6SHZB)KMENXgku4*Q$CF0W-eN6dPsaj@G5dkNkq=2>.YS26<3
%X#7g0Qu&7fi$0rX!LEt_c/'RSG^Ma]*+M=61+!5!"_YYr$8kE>oX(p,(4L@PWkYfno1Gp'ehXYu*u#X23X/?`KgRk+nW%!bZ8W`p
%.B.\><X,E"fjSDc2'QNZ-=aKK&=g']H+92tAdpO^gD]#hpZ/r"[KS$!P9G:_EqX1U34=29d2q##aWs]lWr.n%["`9;?.$HcR4qdX
%Mc9C<!QQdiPs1S#:s`4E"`[)+d+<TDl(l_`mbmG7hs(Qtic;1n`gUR/G/1OR\DX`EIg5r,m6=)b+*uKpANhYM*In7G_glHBn2V&4
%D`9&S;i$+JkEK#e^ddSdpu'P#+S9;FDo'<sFC[llom81`$6+L4mrXe&S8qoa.il#d0UTXf[afF?ih,'<o\_W(K\>OuhQABTF?$L-
%!7J!<(\Mu@mp!;*AHGV"BppHs#"72?,%de8O.#dl#7l<5*=F^cLP\7&9!@Z8&IWNGjmg4n)aC3**d(J`eU'J>Yn=a.*J4L(Y'f-I
%]N'gU+rMCC%!o-:r38"o2R1m&Pkkq:Q.:qBa"6ml[g\(B#t$;>d*kO#j<JiZ":l0"IY@+)r[R&tO1B#uRqLiSo"-QPgrNi73272f
%0j>s#X(FEX>9?hpNu8tTs!m/MG^[e@8+$"m5:4oMoP&+g[@)KIbo[lr[J5m3E4,N?T)TFs'T@L=X<*b>'-FAbbE"1+RW^"+>*H%C
%QOi6E(n'%*/iJZsg//uqo"g6:qShJ@Bf+R6QNV:lL<D5b"`[R,DSTjVXTl4G-C!QQU"hbpRtl%U:i7>s<BCQ_o(o>ZFm$Tr$j:W8
%VQLdFk'Z5jkHWf)QCGp8o2olObKXNW1R:\4^T2[SY#L?E^;]):K_Z*4*VYP&3e%d1p8H9'7"-J_S&KWmL]?/s<Dr,N)VOQH.kGY7
%J!H6mQ\M<F^4AXMdef5?WYtN!&!VOPX!t0hAF?>LDtYo1.XpNXaqmfLr`![u7u/6apmIL!?T9hZeS81Q]e^R=Gc[MLhI^emlSu`@
%DS@kd7J96"EnoZB21Oh=Ee>.a=6Z69>m&o3VlH!36<Wj!O9^2Of)?F(GUhdU5AApN9mc@uM^gnI%_1rm8gjRMgM!Q<5AZ;pq(`0Q
%o9V:;h4F0drgY/g)K7qM$3,G/7t:?uPeXpd']sg`1$.)F#jkD)r^6OcoJ,okf';Ap`U+VZXr.CYW9,YG@4%Ndh\4>c:SFE)"AJc_
%_"VmVk,TKNBE>j%U>RCMg=4jW+$O:hot^bTI2*8VglBCMXH&&@DS"rf8!t9&W(X_Qb:D;b+Cl68'L/TT8TZ#YcsOhGda<C6VV:WO
%HiMQYj"(DNT?6_SAn(^2JY&g2RYj6gPMV=L/,29hnOm(@hrXIUmIEgeL7[V-l<ca++JsXH&&16u3Ad3(:-3iND3"G<mdQX:gR)$&
%b"lnng9'?.g9]jmLRAGsl)9Y9"$0%Clh_Q<2W@eX;pk+6fC'SXSf"#A*H*q10h4rH(uj`2_R,f;mpNeWd2AdknX:E#Df!)#_l4;V
%#KN^sH:>QcDHK-W1uAK6mtns&,Vo=NgQ.&Wp<c%<U0tF4..FL\H3UQ$n6lf=oSN]7Q>Y8#Sf,;9TJU@=bC&lK_SIr/)lS/J;qLJ`
%QS1Pdie*Ma8QE]WX?@lq8unfR"]ZqR`::/J2,`M9pq-%#gA-$n7Z2ZaCm3;YD-\Tkp_p.GV*1;HcF::tEUXIJ^rT%"oC6=&a[\Sp
%WJrm^(3/X&fqni3I&utc7!Rm-/BsVRD8)b64Xj+9IIe&::;))IF4P@ID_LW<q+SC,o:oa/C=H&6B_.preW/&LZWW'VI?dKSLpUgi
%R?*<1j$D)m:ju)YAA#M,;`[+-e&;/>5L0Qr-+2mYA6=(``JUh+<5lndG_irSpkE/u*''s)`Dk#oq+0$dj`8,hIqO&]c'01CX4Ztt
%\%:8!.mG=rI*A9#s/VNgqV5mmeTBX)AkW*gR-COp0_Z`l8k$YLdJB!S!;4NI,p29Qioc=V'C/:9$`0[WI9D)[?e'aHE%tRB^(Y'=
%@Xs:,%<eK@dAC&>?d/"7Pk'%NM;l]F:&F.GmmNSGSLAsT?CSd5.,XgMLOO'qXA(i6^)*XD*VQ4TMs89K,;B(C;1,mp1U7h9cd8'J
%7@EU5RI<T?jLG&PHVs#,^g7^^cGHs7ZeoLNMP%.1CEE/MmmS\OpS*W>k,)T@MQb-7g.dqV%@ab&s%ffGbi534?WQ2#MYWOCSF+Mk
%I-i5M94IV_hO#<Lr6eVnAIH6,rIl\@J&h.FS4&peq<PXuYjNn72nrqdlSE"B]Ob\mf03]rKXkCcDKa9[8EY/5DV)V%>t]AA13_?a
%T3;%dm[B#*3k&jFX7eQS2L!`dSQ5P^cJ%'Rc)o]tXI=K)kkQ=W1GXm.bsrTJh'LaB=ob''UX'GqEB]>/FMW>Ac%j^90Zn0\Wd7uQ
%IQW+8e!N64i-jrc1o5HUCNH3XpT(fm^K\cL-d_s@MkL2/%tCPYr,0>`pid)e"MW8q<NT7uX'0<04#oHnV:qrt9DLVJn&##Qf&h1j
%]Z\M8htb];j/jsVZSTAfjm2A_q.PALr<lsnC=APpn]C^GQYEu!L%]$S^>k2+e)hR6r4Tsng7A+j+i=2pm/D3SUSL+cq_)mJT45'!
%]lngM-#DiWQC!SCgZUs`GLlNY?Mg-NQp"<1Apd<(Bo?aRXha+aD+:UXn!S7^D1R`^Ch(nR+?'sioOSmN+$<5#o(2@d9t),?-rXVJ
%k*9:q2;ZjJf-Gf.ZD#$n#Gn3gl:n\La+a=b:Qi&o&Fmkn2a?Oc5Nt*AlbD?9_TquRYD:$qdeYU/4g"c@e<WlfR'6>2f6i(%L\cGM
%I-9toR'6>2f6i&[1\3K]q3pb*'?#:CG60_p2;bT8[eZB\^OD5/[G(BHdYFe\"25H$"eU!XHa(79>N*K0ofH1C')]&s7K4jOI]0hq
%r:)L_\lPm+!$P7[X&4;L2dBb%mG69]D',Oq1*K5a"[R:SO7=8?nQ"B?[XS7Af@ub3Ei[bge^bM7Ye$[=.U(*LqHYn![C=[`.pGJ5
%Bh_:*cVnKJeCcs,2G]ll]@<6%7qA2U1ZnM>?ga*U=5T0&D9`bGq,fm]rmI86hPAa7H8Ngbr$oYuI'BC2nBGSac%Z&6Bpt8U!f\2R
%n1WUeOtm-"S2H_YVV6OOS-/sRo7Y&h-R?9?[1'3GkBe5'n27'ocI79O_8Z,5BGiDmAISF&>O9pi,*OieA4@4c<gq!$]NA;RP(/lI
%?KR*2H/`D,GaTpck)#FMian^+R3u;lPOKU$/Bebuo*!M))H*d@SsdkHI4BuDqM`@:4(8+O1G&.@-Do0'I(-R#ptnh,rH?!&.Jij7
%'@Xe8[,3^6CV@BT9hafsie6=S!g*4('D'?9h\\1K5;.K6j.H1YEIJ;EFNfa%i>*beR*T\YRSSr"3B>CEHM]&oh>HuCq<^g^V5EeL
%F.oa9N'G%qX*<]m'`$r<+*VPGO0a=]5VkXM5*[:tNu(5c-<VA8qYZu7Y$+ag6MuYVa%KnKd[*[1eS81QiFqGR'q_@=f#IV*iUOZ"
%"8n+"^Lo5SD3F^KbC[&FP^.p?>7oS5\/[Foo?/5^iQ$TI63iD1-m).\TiHL-WjD2l>9\M9WA!n=B\&54lDhVdFT]R-*b1)@.q,$i
%R"6Z&T#[3j#?[GX0rAN8p^tJ-O7DmQI\+TIk:ri.1@mWJ4HD3aH&S?SCU;46B//Q=R?()mItrDOq&eJ.o/1IJkU>PaU7W?mT9CL3
%\ITPrOT2&e#RW_s=.YX`oAfl_YGg^"DCk<cIhd$Rm]pR"RqEknhgKM+7fFm7W2Pb-Le:9@c#hIE^=k(6M0XjF^W]=F0QmD\)kMK"
%\_8d,I\oD_p2q;>j38Z/_iLoV^5e-I*D!MY#L`P0T\6k8aNnBS^GfiYUsJK=qWHbpnfPP'kZ9'ZMZ$;LYJ[<1c(q#9^jFdFf'deH
%ao$IH?T;N0>GBV%5gPW(q9DkNc-P7:C#AJMIA8B$ITW$3%:?j11#MK^Ek>t56)"%8>;f8dDbNq>gW-ag)9cMfh`$CO_s@3eg6qJ5
%cC[qqdG-jQRn%NU&C($<4m(/IZpYGrBPtEB0otJ2;`$GjPVcV7S<)tOAh]hJ_::Z<Rtl(VE6ai+F7X?g*mR&2GAS1^>"A+X1K,C=
%7Hj1Oc10[>Re%nhBohG)8RrmgIA_>8k@s9s[tm3LJf2:&iqp@oB7@&&<!G>%H\^[sR2qZ%O>/nmQsYsFou?<i\KKpJP0l;nFlj()
%@jPD02mrc7aCm)8XnO(&.oY*frQtLRW@bcddRBes\Xn*\m?<T6)b(]E]U9a.?#i_Po"V#-;a5^0h!I7'T<nL*B%2)mqTBN"dq7M8
%^O11XD4BuqJJH=b0:0\2rDd+ufNm%pGH+8<ouiX;rN#_iU[II?^2CWi4n@IRjlUHj^cYBjeUu#M+A&?Ym3r]U]]f`+LJ*"0GJ9'o
%J*!C<14$[P*EP)`_f.)TC!FAq"ge<m=7IO1\3<L7iLA-r^'j[nh5?K,N'P\G]%P*,C^;a"3GS\a8T/M7/^1n^0D$#Dou?9b$!dF6
%?"\5Mrj-IK<*rtYBTX`eo'FAF_TNlM1<WG?gaAQf7/oEBW*kVDR<FHO2(ME"*;eRc.=Y-c@@lhW7SE7,2N7H-hG:m,n1g=i-=%VQ
%Ace*lR>4@\/j)78e'3LeASQUd0'QOmY@nTEPZaMQI)K]X8N7crcsOhGda<C6VX!Jq)=tsiH3_^Ec\nFfpnrRYoJ?:*F5qA`@6QVF
%V/"9<`c!Ukc=.!'rj'B?QI@WOo(]&`Qq<;4?E^B#hafS.2\LP^f;*iX)eM=I]OuspmEG@E7!*sbI`?dS5X(JQq<2Iqfncu-N)Mr`
%2&.7sj'%>.R'[?rFSD=XG;F%]aP"(epOkE[B&\0pNq$Bpg$a@5I-0n=LjXui-%9-Ok%eMe_s<oj9.%sHQV:*E\Gq4h1\KeiB2i^P
%((W.kN_C1;g#]d9*HooA;"?Iu\">UUc_NZ$\R@>f`m2hhNru#\2Pn^36iEQ&<n+OHWnPR.SM/3:9Ug]^9$*-9B-P%."FR:T&;ICd
%k#+@p?YiFlrDr`'-I'VU;R35<TE="VbmrlNp=3nIIt(sopsRD1,fIMDcc(pml;mkr8RVsKrc;Dje2qB:4rZ?mM%>fN?fu[Z;]kV\
%LXgjZjXmY$o*FMl#N0ufjfd?Hq28GGad4,%a0RVqS8M=201-p;*^S,M7Oo!KaB^n?$_C11>0Hm*\,W#-aYV%dQIl$'pPcc,"<%uX
%(aV&$kk)L[^kpK;C2,,8eu:nR5C+/#T-b:Yf4sFVBV?1N6f3R3rGm>1j3;NcC,H9an2BGGYVr2'aMFYfL<2V-RN_]0'_unMr:B<B
%c"HQAYCJQ`G@<TT[u<OTj;STOcopTF!bUg3<9FtFKT+T9enj[;!/V&Qi?*Em(B3);#e>IM;3;V>M$m-WJR^]3Je,L>;`"k(7"JcW
%*^7r@9JPU8RMH(i_bD,mf\=2ZIc.[[q"+ot5G3?)-\;.b.T#pM*a[b9JXS+95dF$&e_#/Hf.^PB+tZ!7]F]<!"Vs:@p]Z-*ZN(Lq
%$9n(N$ic+$cZ:`A+#Jti8qJ<2Nrgp)/:N[LNful#[ss?8,$%MDQV]otNkD*e]q/soOtV6\je;PZT[<(K8BN$#$JDrb$iATRi4&aJ
%bN!muFKraQI,KPQ:#K@d24niV5%rm;1cbm7s+IaBMEfgk-In_.F'r%j_nqIHaj?1"s)X[a+m>^?/3[!%\_i(m/>`!3-^UGaD#e;t
%Ie>Z2!-!3!@ieF;VZD&s;u^'4rh3LB9rQ7]mlEk[c_6V)p\B$0e(slI)ZjPtn6pKKd$h-3lcaQQb@l=j1BO.cPT/nCGAiV0fVf`f
%_-fiMiOd]*hLH$ETJHbZG=oC8_5J=OT2^]_h^S$jSBK7X\jF;VR]hk48((bI#bO$_Z/>ML"iQrAKh">MrGKqp:4`6<V(*DL.d5:=
%*"(`Q^S^uLj/2>9<jR:f4l:$'GH63eJUYpq-1C,&q>6QL#_\^APRhS:W/CSGf_pYS8rPZ]AR&2hs$#Mef?8tA9:XTGIm&8n8J\)\
%a&;eRT/:9"O"'%FAi\_'.f+Kr0klF/IDo.#?=5Qt)"2HF14%kjjO@r5XJ=<0:+VUKN#%j#O+N`k1RCkng&-n6c0l8sk"cL)/n9!l
%b/\]d!.%YoeT\:3Rc-`.M@i+5H0etDVfZZg%t#nOn8tuc?Yk`<qG%n3l9hW"_u0jXV;p_E]%LM`!n3k]+)omg:7u@p]ltB@\b$Z)
%$8+]()=jDlZ/5Bu\'8XIoj`hnXe+7oQ*S^mQlCHC3&DEjIIcPD:X/h9nauJB#2``[58?mJg-)R;rC*#qVQ+&9cVHtkRVGWt.(r3M
%dQZ+sq/83(Z!o9mq&5AJCjWseTh.RPeI$WX="`LhV\^1p9R^5'g?s`KT]\R!8rA(k[ekC&4uhW/2"<+k#OGIp['$)Q4Z-'a<K`Of
%P$'mt#F%ueA14!@T^8*c(`.eY(C8MO=s_PGrj&"N@T-FPG2Xof/NOm'FPDQ+<NKSLe5e&a@5aQH[kS:iFNl^^S5fg$\`64*SdiX8
%4X4p>FMU^5NL\?UNL!FZ)#YL0Ab=^mY/'W[5I#P:1j#Q='8C"mag_`j<X5Z#+^m=8X2T+PXgHUgFF(9s4(lN[&9MNA%ib?_VAunK
%VdK$9[B"J"<s(nacX%`"d<\DVe$Ye75gf]aYlhl:l>':3rN:5MNj,$^8#QnuBu+obgOY<D?;(b'K2gG1\CQ69is2'%U3>i)73LD%
%\56TjoR!/qitOK=pY)8J*u(EZ!=,BZb:0Ps?`C#U][7cK'JBoqaf?Gp_7-?@XrbA<H6sCMrF^&3rCE$[h.$U8'167c9Zq<&o3?fs
%B3o7\<5o@T.Sq/X/.;hjCT2k+aDm07"W+2el=g89Q\mp[6OXX)U@+km7Qd1)laknP=3tcR#^`+6(1bL/.B**:dY$O>UTEZ-mOgdB
%n)t1aZfhd/;]]3<o-1'qZ"fo%dHu(8L,s.#:iS%O6tXdB$7^EGVuEjaPPBc2%/(m\UJ6,3<ekLeO*<mb]>s2t&)("6[5JF`>`&7i
%L1:[kG=RAT0$thG*Vg`J"i`7?*t#POBgfDt12VA#)o&GE2X[R.Ng;)(Xoh73:=0?c/P@fqYepHE&4M_T*@$<g%Z;^F5XHnYcmlLS
%!I)IKGq15?QX)J1D;qLPG?s<"B"Ei+",3>p)eXT=Pq[!r.t]tQeg*r0eJmBbj*7iP+B-BK_08BZd3AIkE0I<M$_/X,nPXEQ?#-R"
%n](e&\e-T"g7Q9A]:NeEK0Q.Y7f16)J;0MaD3acX"Dg"Eq=.E(E>SJJWhJHJ8'CNeYWVToE[(E3^q]LD/)YXL`U>q)GnW[^_o%'I
%U?S7N7_2gt-riS/*U.)k?$6!q*!>F0>k8m$ZV[;#r[R>D1`\=9;oRr4s34=g`bqMX`lqnnm>-.i'PB@eqc#<LkDBR1=%ouZIBFfk
%iN_p5DG3s2U#*`cpkQFLq(#r5Ee:OQ0D%M,"5T,(=cf$oK+A?q5?i)iNdY#k*tdGLrZBnfWI>cn@)V.@8Z6dY!i%PFRUB5)1,N-Q
%UU/NZC+-HS1AF](8+iN%h1(8K"5I(TeJjaHhCCte_g7UQkk?DTbAK]A1qfG9\]B>a"5hY#3:uaP4I21QZebM@<->l9f!]nJ'N<Vn
%/:6SekBjBB1(g$)m@oe&@!nWBGNt&![`2be5BOpVDM4^41He-JYoKZL$fccCdAa(00npsXH"uuac["9LjM2S=?+%LHaACBOc5/YO
%[9Sh9@M:+CC&+P@*hS[?LJ3MN2TDF1KIR"Yi^XPLlT;HNnq+n8T8Zhk+3]i3hJ^">Lpmf5(Ck+1idtCt\kEXqr^<l%rMD)]I.TB:
%Ap*Qblq#kpk#4OP3!Ni3%)eYe%lK30X"QkiW9__'GOrt9'G@!.i?K)D`OP0.UGlP>;RG3*g*Ilk(`Ik@GT@'Z3aL;"3)89Te?Ye6
%Nn6Io@Nm6if12'Q";/u)5kI5Y"q5"qkn#fI8(H@*4QE&E9Mgk3N)I)a2$2WBe2q-rPDV:W8*k6<n<*&AGm-,?j`\6LXW,hKDBIfI
%GJ?\-*#58hW/.FHc&A+'''u<U;QHIZPsFS(+Ou$g_7c^'>e];S6t<jCU3<qJ9,X)_).h/X2)+L@Z=IfLQrl5>7hV]fW(+7o6i4re
%M0=5*:n<9l+cBRn+CiY3o".MQ7%r>3;,MI;8+JDWAXQ+&o>m5mU[gfH:M3F?J[o(;@Gc-PC0Vo%n1)iDE>cMgAK4b)Z2J7BioBG^
%45\RmGhd+?eX]<s>](7X^Y;(?1HMqB]n)RnVb)D+-C9cMfV2Aq:FcID$?KJ.kko!n.8!H@G^k6e>`tm1$J`Se)0W`X(8DT<5-h=l
%hig`:mmIEP/Bf'ppZ;oQ/fQB-n)<9C]7UbnS"B98fU`.')-er+l'ORPpom0K,g\,W]r'6OK59DBS.F?+/[tEDO*@[VM,\A8m>_Z&
%%@Ae!J]uf`7@]VF&#!gu/3kum-UsI?"#87lGgarS6GqT\)I$Y!h7)DN_5u>_1Zet7dV9XPO)7jg#aV$am(OilJuQ14`EN'CXkI]Y
%#<(gPGKsLdch9l/!#S2;df0TJCj^o`rLap"aXc5YJ"4.OdiLEcZhse<XN14g>/\'h#%NUB.C'He#$<ol-B[8B[dSFqo$JN2dRb[\
%Vs,8KpjHnc2'(ihJ>V@KTT(M0GW;WZ)ac)6hV'/[;s?-M0O]B?(^Y4!,P-,7%m^;=daNMk0[0X_2EF]iT@d1`0ee?$3s64d>/E_0
%O-%L)j#tp:3$$W8fT1"!Q.NgDrif_QrKiaDpH>'dfKf!!gb&I1fdk7,YhaB&%n1JAiWH_I-M-39Y-rZ(MVdc#NR<Q0'^pYl'Tp!*
%;RcB1+W0&^%3lGmLRhfS>cVNOX@,^`.C]HU4r.<7LpXc9BFc<(o\94m)Ru&"-B&u6%3f[qJQR(,[Ys0.4YWHp$Zc.J)dDV:01S+9
%/V[(`,H,)],L5Z<.\G+h45n.KhX0e##hMMOh#-\>aD\XYiu7gBM"-.Z5":).J#l[saS3;]as`Hbq!hd>gb.h$gkk7]4U#Faje/AJ
%d%LjrXbsM:@B:0VV/hs$M0I0AA4+=,.?STb1=H@il5EUD7pVbEp;#+HWsn$Qad]Hod.2m]_-eZ-VY6pfkLE=-*OeXJ:juJA+CN^Q
%\f)Y_YkUb4N/1hV2=tbs9L+(]Z.f?+[Mf1ZB>>a+f+*>)rb*gaJ_dVL36A'R<jE5`B&!u3G`Kk-/ika[JMZn[4!c;4Z?n*W#L0lp
%BQhYi`fNN&&9hq;1qQQCKk*(lnL<[g$G!6JRG0f-\R47.hHAZ4DDmO-Q*X"j^N7c'a(ha7;'rdb>"ra([(@Sg*i=Y1f`(!KmKp?=
%b<;qum!&;;0p?3EUh,Yb,"6WQYGp4[[C!^A'OBJNhIq--]>r,B<3s?)$[-?fUL'[<Gb3[Ik0u^qgY"0VU=%NF86rdK/Q=-q1<VEB
%m\#nmI8"U(Oc=V7aE9c^HM-r:@BlFrED+o?=+0`[W_$3iUXE7Z9;5Z+YKlSYil,I#C3$Fo]\)9DFsHUg+6uCcl`#m*IO9/5WBrJ<
%^G7IgBDkg&nQJWMqta$gR],tDFn(LcoZ53JW_DU4p:'csY>%@1k\fsjp11t:Q+'`$Opr`^dd'fD&6Wh;NOVh8IAfVa%BYuGAc=fV
%XE2]lg[SiuANb%EnZom$>eS?,ec+:je^7iSX'A[Dpdn[c=*&MjC7<jU`/_:u'%<G4.LCNKD`,sGJ*=poKp=T-+M>I3<+hmC@I*2u
%5Mdln2V3.J[Pl+e_i?($S)#P5n!(0NH6Yli8=!1Eh(.\LEE*aW=fN+`P+)daR6K:175iYK0'8WM&%B+2rFC(unN+?,o6A;J.XNg"
%mYXTrBmolYEZ\d`MiWPZDJL+lg(i0S;(VIY[;b!>Y1cT,_Eu1=d&Td!U)t1I;Obi&8g_&sf>22)I.0P&&/;'t.P50knn!5.ZYb-E
%^.oc>prSNfMb/o=A[7uF2q7]lDL-q,mF?A26J"<R>F!gh-R-f$Mh0_fK"%c]XMiMZ$'.gpkg7TY@]:>un\IWYR<3XFmI"u2Sa]gC
%(K7O'WTrX9>?Xm)QP)XLnpL<got24sf#taOI]7]-0/>)Y5[8]L?%bP0]Ca@k?@U<pVXf&?or6nHPOrPOckb?;OfB2F("/pD<sc)!
%/oFsa;F8N&:&:8a^IiH(8"'<NVgcb,:9O>IPU'T$#U$skNV.rJ57R@aQZ[N(gKe@t(J-nM>O+BL:aW$f$0m>-_4Lg%1C<FU-"DG*
%fNX.JO*^cPhAh]UX6XWehfOGU/##abMe_e@Y3KB8C*p=9%O^SZ`Eg&CD6Kec:1o2Wo/g0/QC'fjk`4Far:u-q3k$,Tal&7DNi'+c
%U1.7+;lWaSXa(mNHV0f=P1:e6U5qs49X<*Z-'iY3*"EUmY]K1C(OEW_]>S,tEG)3^:^sd!4\HePQ;smLHlJ%S93#KR`b9^Sn]L?8
%UNb'k.*;&V(3_gh-X0aCOcimL'8Yn3guk*p@eS1-CJ0Yh1gs'bKMfidep!/BNpKqb%q*jgGe0DL46Sh/Rdn8<;/0%a$"Zd3e^[#1
%?9BrWqcCb<P"A=02c.cm3gG.2oLM'W@@T*@'d7`&K($nIEoV#UY(6uq>qsUrb5H&bCurrWr'G>*\adt16SO4pS9Rn<MoLfr$SA<s
%A^P@JkP_-bEgFq_'ktu.ZF5pr``Jcp;o1sMo,J7k#pWi.>:L%5^,5K3<WPU%G\/!unMQ\7%ug-MZ+L/ZH%$2ir+9YkG=Q&_ds,;2
%^Qm<Uo*R5h7$M0Gq"QP+fhV-Ins")l>AKZ%`KU8^KRQ<X;-s"B5S^+YD2m;b;CRaCCL'iYTk55B<"d\8?&>&CNc'&OpiNhM0P0,N
%UMG+>PcKn"W`UR.6a`^qneF?BjZFu&(Un0&0_8)=SH6C:$i'@_1/SUN<(".DmKOl$Rh2QrR2Vs]CAsmE;59;[RU`c4>6e-OC.Mh?
%Vh?=E%4;K0bb@T%,1U)kiEif.4^)W=S+I2iL6)i"n%";tp!0uHlZ*O8grJ6aBd,e/gE!hQmcjq]9CGnWD(8>$LDu;]hN@7SKJ=_Y
%PFI+WR,EPO?dMa[s*iSf.Sl+mGg9AhBo)UneXf6tg^F>Nji3?`#S6&FRkO*,q^Y]'8Nf8cNOrTDc'P1YURFiURFkkYT9IR)Hc3l\
%,*2+mU*)(kgR3UZO5\S>A5tU^iGFUe/7J=&f2F3JK3D"&%!ojn`[b6!qiIW,9'D4R6cSD;/;E3#Xf<-q7#V9-'A`%OBh5Gbm$\7j
%r)n^XdWZ%dj0=pJ.:jd)D%9?C%A`^%E+XSD/0Q5bY;!PKNV5B"o2jM3#j$:]ISm3fK>Vui*h#=Q`N/$"AtPq>:sHiI_)"&$Hq84%
%/H,2%mEBXT\@0.@jb)m`X.)J'DMp'VHjl@>0H<QmnXpd52jd>Lbf]7Si/O$GTK,aQX5FYGmjEioimqBf'5&7W7jL^rZF!BD#H1*I
%N[QV&fr/qjj1RCs>ts<]NF0%"QgmBqgJ"g62FH?!H=gMjDVHnd7G%pmbSme]`OGVF16ErUNTG:?4adE@.XG`6?<nV.\5g8ULl2d6
%(TF1Tg<2GWEW5G^)aD&#7j$H"gZ<J9TR3PZ/>"UD,[`*OL^lb0kkh'mqf)dZ3UG)oWJTWrUO&H1Sp(R3>5fR"1]<UrST0ru\:6_H
%RM[M?2=>/";,h)O%)d)DB:798olF#X'fNP$c/fkR^2#QIbO19:?;q>L?,U`P/.]4_5<>T:Te1$:/+=,$#)Rug<%Sa>1M\s_G@/.:
%4'PG1f5HkBg?q_[P*`YY4J>@LZp1"!U1H/>DE6bgM$TbTFqM%h3E,Z(*Hec#;TuDOCT>!&%e>B9"s-Nai/J1N9pH[_E=uBRXCkk2
%GNI>jX]U:U4j?gI!I$:mpH0:A(lD`Q9hX4U^RV4%Qg4m@>0<Y.E$]?272!no)kj'D)R64-Q,]Wi-"`_if+p1,<r[kVQCF&>!o"Ye
%S+i(Jc5e4VoD?>JD=c7L"S?W!j6*=oX%Y!JYobqdDlccEUL2/B\`6TBM55oj'?j_aAWs2["Cpc0#LC`)IQ^.dN7$ZRj('/Ms*W?7
%]J7XQ4=(oi:=+8?8/P1.8lMWQ<U!HKn2i!NJjJ@_gAgE;ag>[1D@b`MoR))U8pRaY.#Rn+a0uEf@b-0<ib.eu60/hlZdW@V07u$B
%!tiCFW6_E@GZF;7D;&=0gF&/Mcb[Od2,=S+.!F(cD7[*hFh&E5-.Ni=?eDCPo<7]DV/cr$`,mL#Yg5XW%O2'[4e1fQI%$W]Wg!(0
%*hX;9@I0lREu;6T,inhIR::jE8ufh/Kb&sDX!K`aCT,UJE*hGEV"d#`IJ<GTD3UiWCk.F]c8COo\`Z$<;O#G/E7@ZP0.N+_f]d0]
%0P;,SKhO"2AJ7?5,OIEW95WO%mFtpXWc$D<V\e^JY1:+9e;e*8YBP5]q3aYBC_s!,O#qC)--lAR*H_$E2ncpP<*`FiUOB(;_U@G5
%Zlco/e$c93V:pCb-K?Fag2AdcQV3^$``[\9j&S,b`*MuFKh@%ASF;_/L3HiN[=+>c5)-;/it`6HUlL?\$VpZ[Q(BMCbdY'GI\p;0
%WG4/A$0(T3ERKp>qsjQ*3Nn3n]I5;"=^,coFd3c]mcNb6]U7HonL-msS%futmmQ5c4FaX3(t5(P.S0Ma%;"SjHHc2!B+sna[g$`n
%_e%tUX1gT!/$o-("A.3sqepgmeTl]9lGo`!],%4RY;RpKL`-/uimM$V'/JY<cni7tb;'Qe_3Bk;5)gi[-<15GC"s$,Z*W3`XgUoa
%12#PXf`8$#SJu>XYm<t';CT;=U>/18P^Ks/8ZG*%?;)ei6C/H6MV37'p1%au3Y@h8fSo#,=l%^ZhqZ--8Y*dQMYh=e$F8;YC-*g!
%rE*Z7&b^mIKB-b;C2`#g$MJilDJSA2<471::N4oZDaaFtMa<_(W:N^HBJ1_T5%Ju*K5:iL$L2dcC`P1JX/Xh4,:CLbd3L\Cg6tCO
%F9dq3<AdVIm^L),bKm-JgZd/K?/+\2Rr+@H.nbT?oAW@C3*^r(5J?d5,],QqV$F\U.BsY?C18RVm!ZNK>R>^UAhQ6=S$S8]Q>YbW
%PAG_sR%Pa\Mj\,R&U_Xt/7o,CWJr)d82H_%PoK780eUTb248e_1kEmS2%^#T"U/D8E29m=*4TiI/;-lINW&8#2D,XhoG4hiL5).1
%XS.Yeh!Mu?iQ_P7lAJ`es79%n73>&XNU/*I-Y^I]!/5h'kJnf@O93<^]*K"eSa=^Zd8KHj'>D`cilANM`Du6LnS':LC!%Bd'b=t^
%#`SacUZPZgdj,kcFl"ud#AYEYq-?3B?;jl"85GN%Zt28ldb2pap!s2dTaiL\WW4XW`_M_e&#nULm7l&bA'PIE9U`,=19pVnJh>O=
%&535G9joC_hb=C"D*F4bo]6Z`V!#YB4-(1k=JMkUlp;=ZVfsD'DtNY1R=2+0%"`D_1;U@-)WKOF/0m#*K%LkVO*d%J0"Vl+RfTHi
%'VFaRYPmRV,s84M[PFOm1G79$:)>^cr(/'<gucDt>cY8\2K?btK@9=Ni032FObLT\=BJ8:iV.;@3t`!`Y6M74%PZ$&!*ErYFKd>T
%i`mmOR1=@4O(_JUiVoR_)g=[U0S1OYPH-.n&kof=*(toj4fVmtI2k32B5?q^lFe?6[!rW$^,l<!H2DroJq3E$;G,p+iF)K>;$*S.
%oNfPO>ilVt@"4%.-Y03?ps?nW8Lf$ehf^I;Y-;>Ff"r@-GXpOE6lPq`=gQm]jmn\EN[GfP\p8G].e]7Rf#E:TkDsAHHR`r8WgV6(
%JaA[Z;;(Pr7=:cK$`/$s$n*!%TpB@E8?XWNCB(O:2Ai%2HpapEB"&Lplhi:U0D$ocd0YQrUp<^s$hIJp#u/p'bfe,64P;5EMeur:
%13ld>/WQ1.m:]%rYushgN5N^AGf>s6a0bE#>t?g(='Th?5grt%akl7kLg+rf!uRcp)Ls'FiWN2.#!j<5]n&8:4WR5E`0e8^<c9`D
%rO/0Qq?[F]+<Yl^mKB@(P/*SWdsC$H28>d+<mH&kUJN@kl`"$.jXI>_:#[n(HRmdB?1ed^YE&-gF5rcpbJW]u<`&ZOiob+'0P?]@
%[+dP^om9[3ra:(d=P2DZgJTZD:7k/Wbf^[K6qq.rC\)afL"]B;Y1WeF]\*tA<9#%^MORGB]$an!HH3^ibd/AHoN%_MD:Cfph)-q\
%ZsLN_V=e9MYi-?*:'.?3\^a\IVQZ%>j3g6&L\hXudE=!uqq^bd6L+@0nL^ST5:ni]1F%Jf%]8W.)_B+KV@Y8KXnXK.AS$\3%M(AA
%]uNZUIoS(H=7cVN?7]Sr`sm<]XnO&_#qF^i34P00&*ZtHI\!M//)$(2)]1<aILRWAdpuTj8J?+%mK[">9\/[Ah_Oa"IQM`$m2Onu
%U*.+rnjTRK<#V_nD6kd2ZY;:F=3[TI.8>ClJ?`J&i*<+sV+>\/ZR,pqJsi0q^CuMYLRX]25>IM'cbU&nNMJ>3p^,0C`GhQV[2lO-
%Q6DDK0Qr/!Z/TR(0eK.hoR%guLGQHd-=)J)C+dtL+VY`pT!l6!14EZm?A..DE5N\u@lGc9[r^ena$^K]1/0-m9DT$.is-#TD>.o7
%-rmiU04<H"*Zj*#[pOs-*"8SK]g!'iQ!)lCEurFS$D$e+4`H5N^gJ8!,tOL0.95Lme3g@l(,#3D9c11&)jt7u"OZo<`CB,@=Jae8
%R)j,J\9b3qaUF;7cAAeLiWE`@[*6ZuXd,n)O6\(=1cFl@=oO)-=lnX/5MCRD+5_bu7g3j)_.pR:?[.aZ%b[T#DB*M)Si<f]_qYY+
%(":1L<:2()P-!1iX13m:GoAggck[,N``mX#[u?iR*js`kcdK:4$=ZNJeVV`YSm_F8I,gF7lG7N'YW7N/+G.12MPcEb(O:5TH>b6<
%/o=S/[Y/F.cN6$A<`&Y=kf@UfEo`;@rmk#D+"nt[B8B53&;Y6oPdh<,1J[70.VpNI[D2BZR1NTU,+X%]4YiB@.-UPt2Dm0/q$INu
%D&[`nGcBrOb!E2tCitU>=6(kt37;P.0lhW]Uk=fJB"_2AQK6bB#9%rFQRsNIU_^UM`Gr5u<dm\=99C!Xo(c[6NJ<Og\H'I]Aa'3D
%XiiQuJ%Nu161:,P'Y2?2f/CRoI9+tsA7N7!$2iib\<2c0\7ICeaugJ%>4Vl@^\Yaj.lB3Mfebq)S^tfgDl<2dRrIi/IBOA%C<bSm
%ELV&ee>0LK45P7,PJ*k7(Tr2UTjh<pWWArk#'tDL?lbaGFR<T:J(3"LTPIlZTX4bKV_BQ498i.F<P%tPg#?^Q/Jf_beFZ9H?*g&V
%n.299B^8LEBEcnCL/1>r9VOC5CB_)2=YAW1Oc9??4<VuPQ3'2O$'j%k7S]a0!F7G'rP4?YPdYiX"^Yck`>@bfGZ-teS;hZIR5J4A
%5nE[_eOJ)'OOam5>7Gs/>]bR8iZQ$S#0Q%ff)B(/\Lj&)dd:>@V(5:=_hZ1T)\ocs+nGAH#PSJuBEbpK.cEAm1(KX*LD9BZqVI??
%^uS$^=F8):.qd-f/i%u1BgJGjJEc?Hcier8?>,,gTXB*sVJEOYGlq%*LO84[`3)*T>"6'Z0q)haKQ"U$ATU<8\2+Sd]7+S%=gAMM
%\Agef*%jgZD;HnD%1ZHu5;qI4o/gd$f8O_JE3'MOYaTP/itIad^/Obl8,89hcEC>/be85e@5%u.$0VdS)iWi"7]54M_p%%&OGUYN
%"H=:?aj<+i*e/7(hbr;]p>/_b9:a2$1Y=3!SUTHa9c+UgY:pWsH(5A,X'aj4@rVA0F5h/9:d7;i?LAXVV3b,0W1Dm_K&5*^QhIqR
%p3f\5leZ(BrL"Nako\@+M\#7hn;9);Zmt.TI's+9eZ.?82^\=7<UkLdipEh0dJ`#`)_[j[S3@ufW.UQfc*JbbHY)u/2Tj??W?2Ip
%XC:2Hm5EJ@GB@ZL.F_f#pA3eW-RL6u%mpF/%Ep`+;a+W">bt[LGe]41!n\Tt!hUD^4rjo%j7';HLuj"C687lD^`G.h^91tE`4K*h
%^,I*fAil>3]fS_n77p?-f)*]i9@7iG+ceK_MPG+$Gg?Hp^Rk'cd=%P_rOEVf)Oa:_GMTDg^P&==>.k<n+eMNHGh;#/&8M!_:'bOl
%O_HtAK7J%8n/]cgHVEnaF(W6r0\r)e7u?EemHuTrg,qH][kc*HB.$QTSh0$VXj^[^F%lg>\AO7'f\(^LehST`In=:^rAk8Qs8)&b
%?nhMA$3o*_(P9KMd/kppo==MH?d=-t9p"&sS7cR2YggLm`OP\Fe)A483W*$A%MJ[(J_?c_3[4(j=-%9.poq>%^8>8[fd$F+7D:*N
%Bkn6oSsd[=]5e=pQH@agFO%>R6YHLWDo\^PCDB$eGOR-F(CsQAnI>9!L0+g"#Kr**(-ZT*@e"P<lP;GL.qpK*MI&]^n0(,^VjX@7
%H,HhPpbe4`fmO7e#6k+JI"J>a3om?`N=9Y;pni\*8QHpWrY"XPG!0+\;@Ao[<'MF8F*h\=@Pa1.(Z2gIR<2ntJc6-BVFsReHa5&f
%3ps=MUt8.eZ6VjC&m12J#4"r4bFUDeV>D,&E^a@5p")f_WO"gPC2*+=gG4?>p^[rnMX[odM/]S:B*)@7QTEJTM[S1hld#]i`;tDj
%XKEU/!PG,Za9s^:dFg<<a^-q9(5^Hbc3nt3qf!IM%hc?q(\*F+hF]!*\]BmKKqbuaVtJPW@jes!goMMA*e]kJ,?ELMJ%O5D/ranm
%StWkAAQK[I<Z8I_U"7P+B<l0%E*UDhKnlr+oLY(_/Jd>l3gViAfVO&mYJ2t78&rI=h-NUY'2h=TlNBb\JoAjKRh*,.>W<DGGL]B=
%XA!FO=4]I;Gu%cW[HD'NgH@YlQ`,mmr:kH?$M&RM:IO:8HTY9;8f")oFZ,rbb9bJ[55>cqb/3rde=ADTKmp8?Sk(ZfK/h\Di7Yu1
%S\KV];i-^%h-n-'')d_:o3]>Q0HCHPDO-d.L!&@i0UTH65^>H5?uYS5LFlf9";Y<j>R6'[Dr-(]0mSa,].%#NYsrZq&\fo06A@o,
%-!Wt4p&/d<-K1^*.X>tZ\?PN@$SH=m:4l3`H7??T_C/aD3Q#,j_:9BF&.IsjpVCg[?j,)A\"^_3o7]SOj6GkY(jSZe#,A"c34N,?
%G(N[LIibDtU)IPYHV6Z5IjkNrQ0k?>Yd*s;'^=dU:te-BK5u].%)soP:Vj/R)9!<F=h,<#]=URG_7cn?>&_5FY6P`G[8\i*^\AdB
%YB6(^RJbfgn8Pr:&Bp`R(PBbjIQWurQCif-HgBWuIRV<^cV&70=NI(Q_+X(U13h?!>mT:()sQ;:o+%q2"WqV7`Sf4UrXaH+nf,En
%eO:W`\S3]#X-MLGY\kl&?t4mO$oVV)DaED7H4YHS?bZbk)pI8-0WXg^(>F\0KpBU9b!N%UF1JNHgnPW/h;st,l9s</@-Nk%<3sBT
%`f:h1e()g^<iktuYe-oO0C3n#h\MCJMo%gCl'P\r5%aJAgr&+(_HGuR>I`&+>76e2X5^uJ"b[rVqSL*j+o&]HC-pJ$XXpfO>loT>
%@f(/=SX4<cGbMTm.4d(c3_PA]gg5C`XHfq),6d%FO_/O.7=Kqr?^.!OGB*LkX1GfjnTq[33^#N.4=j<s`S>TGB/0F*c7Kf=G9VsS
%MrE4*8%H=;W8s5hU09'((LNTj=/]`9FciaYG$!\2V1l7hlI+reZF7.>FAQ>=[Z4^]pu#_)8Ubo5>M;5X#FCT&H?JJ6NCT:0f!"nG
%MiI/MdWIBiYk5/FQ![EuMt]lpPN2L;j/(L;CA/44bJC=[%OUdKDGG8rli#@hAboA?/IT8eqXX@Eb3j;%WYUm2lK@j%PN/5'E^>ZP
%0AeDSDO-pe`nPOq<>1[*T3q04m:s2B'!*M:b%d\l^(O^c[T>G.@;@0TVsd^\[5]dmY8dgLa"&MrNRg^AARfB7mei`bU/2c;;H*Dg
%Pud02]$cXmY?+f:f9+U>\p:X)>s1YY\'DH(<YNLX\!fH1<*&T$]6gU1>,].2e?>LG<e]<$eRgH2]\7/fn"DUDh;&BlU/h"9,fi;'
%[.>d?6Ku_F:$;^rA>n-1XFqW9P]E^CeBWd?"=8_IM;s<ZC-jM-2j<S'YaEW$LA.:NdI=tVWZ05R)jTp;;=ZdG@K_b0g27M'$,>^;
%^UBYY>@3;kgb5f:O/]Ur]gJs-G/u;8CZd4&Z?C#^:MV7^H!"iqO8!EQj8"-e*3MH-1Qq:@^3-q^>#2h.eb.CNPeMTpEmn/m(:q]T
%Y:!4i]shr(68]^UkJb@DPKBD6Ce'H]NH@+SD4Hm'M]9-dH$5t\_PT8\V8dXgTiGns,0RUa&MY&X8)gFbf9'RVC.,6"#<)/DE.&@5
%6ndhfIdN/QXs`X5U;BMoO7(WS=AAG_.Wc]Eb&&e#Q/g'*W.*7E2]%M,mEN_k7;5]#/Fo:Pro)>g=ffY]hH_0cD1Xh>RrA,#&etbm
%[jh#kYsIdI8qoCljVOns>3_P+S[1H/Jr8gSC^?A3C&0[!8adA1FZQR"-hO5Y13A@J)Kb:!J&NtRBlSm\=^>Z`NO6tN-_G:ES$hG\
%;c*oHo9NTcA](K6M\Wbk$_-3a0%mn)3+<ukV1&%p=-L.JlSI>]bAHs9leKdo\AB9BXtO`QCJ-fc]j9oD?$<3jY;b$Y]R2:`n-@(r
%14Qi[(?Wf&)TBI.XGOgJ>%19hka+X[PLqDl`J_U>:sq_Bn0[%qLhdNk+NiXM*r?N[SrRa-X'MSG<]\6hfWF(BF)lFUD''h-V;l*<
%PO<V':*o:Ps&EAfgLk%d4jM6-Q)h?@T!!"T0Bs1/HtdpP[\hlPa'tHj+IK@GK@m;0Do]6E:("#S=ut5o/M;=1fh/)A]3E8(@rA>f
%IC-T9;lK#!.^[98mjDJMm<lU;h,^>,nFg)ZmU[cOGFRC@?)rX&:6g-NkP8lWGc,u.Zb%.]a.;%W<9\DsoQVt"qg<U>.^7[Yg+.N4
%8@#M0HeNc#4)=$MHV.lp[F]+Co)@e)_<-2OA68L5U#k3]V:fP&K27Pf331hMnT<m$(;I"X=6$Kb8j0Gjh0;Z8kP]#P\4q)Y:Pj_C
%7(ZB(a!JF_ko-%M1V)=PU";@u<_E[!WMQ)5,pf.RG#LnDd:hh8\fOYT?VUsmc';QdSWMF>l-"ii4KY_CD_nHGYMIFRAmN]PWf>1q
%l)`K"#fa_C#CJpc3lm%OZ'p<cjmpO0gNpAN8BJoo_c4A!34u5gG7U0YH7ca+4Pn?&_r956jaB.WI?b=(8)ZXQHF0_*XreC9ouEj(
%Q+D;^3kOi%n(^'3*CCr"KCRH;\WG=Oc0[VLGfDF==H0NGl<!_`-Xf&\FgA%oOse4ANB)8YC^!Vd`EN3s/u7r3YPH/de)p?kl7@7E
%ffDbh;9[_l6@\%^/_sOR1Nd7`TA=kXkF[)s^%:/l[=9f?N.pjZ3OB4FS6+<rn3q"H:L3=lYN!Nd[(1D.4M<j,CoT"PKnIX.;W6jk
%gb&dI*nH6IEGrIVO+kl:[9g7_\Q6FJ]M.*&a"Hffqra<:i`>)sJ(gU":?oG==4NT.lZG0ai1QP)Gcc:;I4$U">^*3[ko8UNnb)$\
%4g]?1CRgW-f3ai^gXP7pl1XY=Om[gY<kXFAF*i,MNL4_;9S[]`FLA`(J'?K8mOM)0h1tJp3V\\@f'XS#9'tHTi+!I^A3Fh$`_);Y
%kCq]d;:NQ4:(\86c@U8j-V[jXI#_N>VOt1<>'qs[eCS'E>djZqCse6/Vu'e'=j!$OPeI$rCZTFu?VpUPr-<#B,+gMo<Nbnhc<BJ,
%/=lM(bX]4jV=2UIEE9%E)n";?H(!qsRTK5lPrk^b28=4!;"`o#7?p#`.p('"Du/!RFe>e@%%FAi'ipoANNNkpZfeHmH@E2G<S&1\
%NlF58\$YbMfY,isc(SYD.cee+f>>FOo<hlImPNu>^!aD_`Pk=@[B8ZIl#TG2mF,fkiMO0?gts_@Rnl`?W3mP,='OohqOppGUiq\+
%1"nFD%bYWm?J=4Q1Xt)e4(!5]BcHBS,H0a!HJ.E;Y-Z8;-ced-c@5EUWq3kM*d#<C<S>!Q4*">\CIsllhu]@WXqt%GRn#(p)nqUa
%:-Rf_A`US)GW%g.k,$RP4\sB@]Rso0V2qc*DrD%K<dmfQ.YG4R5dSj&!>)f/L1'Ms$+6Y<807T9s3Ul=LOpU/+9WOQ-blAa!$7iE
%dVo-nD%lQtE$3aViB=D,mNnfufbB,;U$"Ynj>/4cT@2'EJD%3W1DIG@gc/&i^#PUsoA4Tg*o`I9`N/$SY"$Gr^\s3#`:;0u+38',
%NM"Pd%qTa=5;rp9BFB"T"2>kmVcSEI&YQ,=8`9T1$<2J,LDR`(O-+!#b2H"2mFQ-+f5/2Dh$2s\&BEH8VrTh)X(ZWb#7go'MAD,$
%'(hDh%I`^(U_aW'=6g[f8m@:o%[C'`=$,lact&4Wp5k6PP")@GFtT#:f'gUfN2*:7YjL%2G[K,e<5`i.Ijj(J?.$(&&1]C*$bUs,
%*af1-(8H>a*94Z$acX%j;0MBP*Ca*b7=%%s\&2=Z;/Z<*%IWca>Vk$)A=EK_G]?Z=I\K7Q;>.$/caKGdb%M8.B3Q9\H[=OMn7MBV
%4X'8PahJn-fs\:Zi]-d?ICQO`6TBp\auJ1s@pcjNeD(r[`=UfSc0g8*?GkABs&2d_VF;D>>?$gi8RUJ/5g)9J+(Pse,MH`?N1eBc
%;3>=t!6r\aQD,5'C^s:9Ta9kqmK#(?7M5b.!2CkP!7+LtJ^>r@4-24`USG3?]$L^;.Op91j":_aA2r./IK6Sj;)ZUc5dS#&:!<Z2
%;-DnTJ48=JLb']F=s5qgZH89_?5mSJBsQib*V@a0rc#'+^WM-uGld^<PSs4&`#do9PS0fag?uB1nIetk*9QNrA,b/5")E@C0<<Jb
%C!:kL&."*L+2PFH3Upb05LU>?B,S14_F6n^iV])9cSUQ'CWRje'28:93Vb\imU(CATBUlWI2?Q\.L>CZ54BD7L5eqJ+TIg[7jCJp
%/=8:,N&q-qMoJqp^g>E_"3c%@i*]Fq6\%r%Ys>5^[rY"BYhP?E3K(U":CAkgZ]eXOT/9pTW^FouBl9Y84nhQueglG7/Lh+OUqk/h
%[Es9Z-Ou)bb\g^<R0eP`JX^H7Tan^_L6A<`-jq)gP@5>B'^]m#&LIcGkP1PQ!ABLVI*Mc2m;ibfDP,BXeoDa9oN`#EL"kc11fkb#
%Z3&>T*:a*'BgUZoKai&!S-,G=kB)u3ooV[m\C]k,kA9saS06iK,gLh`pO#_c=u,h4s)"Bl6#/rpN5t*$!-92(N*Qak=jBrn/C5jF
%4akUI8i)B#-RT0sNoKtJ60D#+h!(>(Vc07_'JFf]:5Qed+6Rc-,rSA8SE+]O!Q)p`k]/_$Lr\beJKC`<.;O9j%fHFHC50dp[+ahc
%3h['QNY>Ym-U9YJOLJG&6Te,A%J2WN:0F'/L]1,Rc$dkTo/ULj(+=W@2p?]q\^*:T5,Ur(ARYeGcY3JE5,S\+9G"noj]ImKGj]QH
%]uN\P;2X>#\]6`)3+pOs`5"9'99e@;>B`A=MsG8Z\bo/E*6[s!&ifuLS1K$<f)^ct>aN,3lnl\4_a\XQ]/YRY.qMcs!s!$ADj%GX
%Xqc*rcrpHodC5Ia>n(eUZ+CqA>%Dhsk:/[ZY!F?Y4ntlQVn_??^[$CG>Gmo%s791Tm(R[=I5h2t5J>>p11HKAASHJg:L_F6)4L2=
%$gmBQj.Z(@p6kG:5IK!)hu!6,E'HdKNm\@/r_f?>rVYbXCSL^j?=nCISTT*/O=Z&H%bb<uh!sI\9C7bkk?_qJgd>._bD12iiI\;H
%m4[0Yf4qo&863W6("c1AG"Y6LHFp6.Xp'"cH`lA2rj"!kl,("23EuLGVq0Z'Zi9-;3r_4bro_TZ]"?.HLX)7BB?(&Oe?\u,!M)<F
%e)u6B9C=F*CX(ZE[2-_e*h'c_mW.DobO-tfe@"`4ndh;N[M.oT0n>@oY[.Ra=a5-up;4=t^:ej\nipDQn#f-lf%s]f\Vf-ii)DJe
%K6-d.`n\nd/AKNecaip5Aa\a-XM;B*Ns3g1i+L.,r6,NGh"dI%T@;_GY4]mg+Dnak,R&.Q"#Im<!>^ofP9c9X1X&M/eEd0HQB(Oo
%M@g+?i?91oJ:Rn1(Ze*\O>NrQ+K#;u-U_*Q'o:tfUVoT;Nf-eebQe[\%MR+7;4/&Z\-N`T_4[Mfc9-Rd:B_f+``XJ-85__80O#hg
%3<k?s/E_U]:k_T49c,EBfg*"qAt^cpMAuYS/3((i"-Wlp#_P*AC_-9#l"!\flQGm8E@"qA8P8'gFg(lT>Zd,>DLrDG7.YdgNujf"
%+"2\P*=-]/K-QDFi1P(WB]XIT.0j<^M!Wh\FON7-2.ms8#agj,Q!3et):KNQ5J%d8#WBS<Xb14?jA6`pXSS)iHGZ2deh0[>UF?Cn
%O-UZEOo\O8mY8i$!!NojSE4ucbm9,fH.es*!9Ksg.Yjd3-B,j##Acg2&Ek?oQPeAd"s>hH1(<2?2OX\SP[R[CTPX\&TE[]$eBJ0n
%3IQN4UcFQ\.3.ucbk%D9)"&hOiQSPVF'r1EHT`;1!,Xl]6*djC3k>HW"M$:pjO#u<MG`.UjMI[#:t(S#l.dCOlPuj-mG(N2>6]3Y
%'Zt-J8+Gq(4,R\Bj_14fEN.ecT/aDPe'Nq6.!d#QnK;X%?psNi?j>?%K!D1eQ:1sb!YJHK+e4e00HRTQilDlS2]*6\VBjrh,D5FS
%66O.$(t$bW#R71:XdT?5X,@'KeY$p1!7ga-,m!W@>XB6+Jh]WoU/SN/jD(M!C@`[dY^k#0?#7,<FpDGY#:dWqi5!5B72XtlFr=*I
%:^P)$U*rK6OTeJ_g^)636rssMYl^.).?)bb4<QWq3eBb(nSn]YZjYmXRK:o[NhL5Wll-HPKd]M6)Dk0O(YE/KapF$)+Bn:l'>U8"
%4RtI>aK67:hr@\W2$JqFSE2H@;]m2V0B42:BkT'M/dG!D&$Rb9,91eC6i`r#`'J>bnVhl[_1I9$P#6$*3EF-'GQpEcH3YR6Lr5G]
%<o!p;'.4d_-Kp2pWcj$^7_2,O]SnU_FjfI@gDT+((cW*qaiYY?BFm!fUP=BNASHnOHF+$XGoSEPoZ+8'V6Z%<LfC0Qg7BD&E=b8e
%(5s@d0P5;/Ph*dk3D-M*@RQW=$':.p+t%ilq,R<P[4r=bF3k3<4)rn<=3JUh0SX2bd`Z'aUaZmg:70f\!mGPTd9+(-_9>KEJZs\c
%2in8s/Aj#HehnR(!UM$#mD;nC:2+u_$=X5"<j;LplEp$kmlR&[XYV!,$CH-+)s/McV'RgX0^+"/i;1"["/[TQf!:)a$&qR`Pj'?d
%[j1E\W,=r<X'f1/"S"7jRNT8"EX5(>U31!c!6(W7Za3BRJT@+pG#^lfUdFYR=)2VKg"UTfCbCE4i24S5!X-NacsEWA+W+ojfd^lj
%mH3^Z@)AkS-G)L^p#jpYZ7tjf9`(VS(>hQNHp5eHPI,WO(KnQ)e)7Y)mq:"FH]c:6XoGs)(#KAhDm-A>DV3i/hY8OpO(TVIiKmp%
%8QciCO+^Ql)`'TD#6Y7j8QN-fBEk4"J,k!%p2,nG&4D6j"gUn^g_bX?q^Or9"F`HL?oSQWH*\OuLCnFWN)C9u7AaH,Gt&^'E>Vm3
%Kl^`0g@[^e%T,kA,%DsbkKJf;(CHHGRLA93DEI!^BPA1'hu`\HHu9p$].sYY3Ea/U+/Wr/%':(38Minb\:cJ=FQ&/!NrcO;kEO;P
%,O/5tF#^pj(m))2>o=q]^]]<"'$E$4\tXj6j9Uu[Sas=27.&.l-n!rk"X.9<L01Ql!?k]8+<-SC8g[gDo/nf=9XD#l+ubOb>otnf
%_[2jQe0M3s1bC,p6*ES)('T:*@0)_^KeZCt=?%"8A*H#h17X<OkBY:/b'&II77d"m"a#oDg4G.Z3=<d_F_KjU;RWW:@AqB%((gU3
%_:D>2i`X)'%0<ZRo<tkkBJ'M-,@F\AN>^*aNMYu@$"5]gb@&Ho%V31D)KRe:AKa6M#G_Bc)ZqD?4J7cT9@p>.JY'^gA/H:WU/`@%
%=j.7.R%k:2"d(J\,`R?fR1C_,`mSuZ"C$S^`_N0dcE<6EA8F+O*",q/TInUI(arKEd7#6<QEXX>E"$"R&&?,7s(j$W&B`q0AHXX.
%M=r,M/V=.]dJPD[`pDN37W'bgVb5`)*s'P!PpqR!CLemD1JHU3Z6TiLK<*.T"/Dk+8E@e<[HiIKR'g?V9dGVIX?baYHE9mH>(YrL
%#$c<kR%[e2EoZ@Ep$jg22%/PJVKfq[OQTGr/=@c/X7,P.+3TXp_Yc$t8E@c'G%u]XKb#",ClCM2.*RQY@ZSK[N'eQZP/i,VZn2@u
%\ZqC$.TtsI>!h3gc>B)Z.O]p85oOF97*Z\RG^BFE1Y**Sq[\J<J4+9+@AcQq"CWX^,u!]/2=^goE%DNW:YWktWatX*]q\tkO;Jdn
%gfV]oPq8dD=TL_EQ85L17`:^\"kO$`koZ"AHIsr[d]#-Ygc2T7FVIK[:SKT?1<%=tA1EH:F4ZSmM1eXB.$WaP(PUXH\n6XA+\JMP
%!qUsJKK3huNPYS<,Zb<?$_He-RI(RU;XdO3M\^G#+ubgl=eg8_3_h/tmhdj4/&UiY.jrJMYlLJ^q-F<M@tPr1f?Pqr_Md?9$J,#<
%d;0)[H5:0--?,ic"k.\F%#Ank`1C:i.lWr@Bf_J;Q/DQg\@,g@Gl*3=6_=^KCltE&P6Yb<c\_3(&%GNWa?qLD>g<`>(3>3he"oT7
%`Z'"2aASm>MTKCs-d,s]Qs#HY0o)e/.5&D3Or3'DF3n+-KucOHS/[p'E!=t@-;uNTm(H#U%7E,$',E<2DPaI(R&'3W&7G\>fA,$T
%Iu4\lXBu9$Ce-[E@'Jui=f._+9`p$fM3]MUTaO+?":@1?fW27k@httRZem'&S]L@uf8S;\1Mi/]8XQUL.[;PQAX9Y@!m\02&'!08
%=`j071S^pMPhG`8A@f.$J3XW!=a#&"NGHDWZ%@mCJh2/e3*@,n"FE^,Zro\M$J1?\d$6.hNPad9I.74IEX5#a-jD8nX[\QB]1SrR
%LR8rr`+3K84(*fP@_:KLo;QhA7)\a/):tJ,B(?q0ZQc,/j-;pW=Ye4:PX&,a"Nj?p7Ndr5`rlOJ5"e-B*q:Ht$Bp)JP/4QCHs9#"
%M6I%8GG/SY9nI%*0tp#RaM?.K+K1\O+B]n^&qFNZI0S^j`a&FpL/Te[@Er7OHidfF:_`HR&DXZ&:`t<D)&Na4_VH9s^egg>Z4nl_
%KVD$-<YN:LJ@WIu!8eCO8!BZtMtmWI2dN^)CH2]fb[knla?oDf2nkVh$q2RL\:n>0Q0UsdioP3qH"$=Zf=RH#nYU5>o#\F6S%eh:
%Yqo?i9.T\K/mXZ[6O<W$hp25)-6sJaj#6.FS\L_\"REn/e%"`@'+OhC=\1nk?uj'-8%u9lI$A&hrV]/mR`T^h1gCkM9!W0t0d_M:
%(nffJ#X"O2!%OC,Af-p535OAj"Vbok)=G#00G#t0P;.0#1LU01oeu>3H`C^t\K*4BkQn&PBD8,Yrt]Oek5H5cL[1uX;>N?1,"<l(
%U(I;q6\e;ajOCPe>:WE0LKb-4#&bg.`;r95Hr+c(.FA:(R)fqd*kXl42Z^iNA:#AL-jXW#`*ogdoP&;.=or&rKCFa6/;Fh1'F&4V
%ARs$&+Gdka'a4%D.MEB>U\fokfj*itG,&[V/RpaXAh)N/#Y(.,QWrHm9TkE*Mi675KRgNbRh1mefgrW.PTMm,:l/SO';s(/5R8(H
%+B6;XQXmQLfni;sMnu468.X#E=dM?G9mkXOD#1J#Y*/U.rT2h,rGVP=1>",.h]"<M4b&cXb.(Z4@9J!:/n=^`@&#a+0S+(OH-:12
%$l52a(`!o?c%U0\J."(Gg/0?Bb3$/!0kBJ8lo/uud1p'BpMZCh]<hN+GF$-`.[%R&7&E'CbBK&"6"9AcMaVHC&7jY'F$(?o)R#OD
%XL)Y$G<ET,6=<J8KkoWQ@S*R65ba2fncZmmgF]LS2fTWo49HtjX"hCEP3fP/6G^to:eW8NLl@a$7Nr(+Ymt__C%SA2#W&\rbJ)Dl
%cmP0%cjW(Y,?#:dhYb4\S<ZU1Lsa533]L@\,utk`6])LhkE3SJ#1jS.,N--ZD^CPI$8u06pLji,7/UIG.Umu2qb4k<PVLuRGA=m4
%P*VdaQD/$fbo$J4;`jO-s*qnb`M;;V#?S\>lV9&,-3?Zl&;T9X@*ph)%'HMW@*SlZQ`Mb<'osFE'&F^`4%(XoQ04o)/ekY]bZqt(
%6ZhbEIP[=V@EaGS\P##.BnoqsI)jk"gV(V:[$1(Ys7$#4E[(R;jqM-'+9YfP7p4iQ.%ZIYMpDSm'#HH7#(br'7)9#Q\6d-PG^CAh
%T1NMW\>Y(MR0;:^Ci3<$5S:K-e*'e@IZk"t8&Q>Ycoo;dgs%B%O1-Th:X%1uQ/q$PF%[q^U9l2>B1`r`E6B&Q]7Y'\M?AH=.*Ju2
%2?b`P(24RAkD$8VprogI=_P+#!H2#CTjZ\j>YX6AI5'GXV@+@%7<GcUH$?oHcJHY$!`M)1iI2+TjoSj5a6H+K/h;3UXL5ABR<QI1
%qho\?+X5j9'uo$aal)<-4=l5dDR.*%!5mdtXr=RT/_*--E$&Lb:`MkJ[j3=Q7Eljk2AA5A@W5tni.=E@,!^F8%Btf!Hea0t>42M'
%(^1!DXX?W7#9DfUfmQAJ4(*k0=:Y(pa`qLR\lM)7>tmGun6DATFsKqps52&6j*_1g$8_g36/sEAX@].#CK$-;AH@#2PDI86H$%(-
%@ul/O7qG$1"6N$K0[eD[@@i(\9b9Dr5T#DhaP0aeihHQN=<4X-;OmjcA$kUYRfmO[n8sBn*XH=13C?#eU*."^A604uVC-s3U<8YC
%H!n,s=;pQ)Z,*qsPK'0</s7c--ng[)QU1!@(f<rm/@%'SJ15F_4ik2`3\X@k0(>O)",\^S7QF9D`-h\>4lFCsI72dEO.s1qaoRuO
%2*!V3nX00;]eI;+B1;Y,(^p_iRR^7lOt7#28RcB-BH=n4JITahP:bJj<.XDkP2-fmOLoB83bY?Wcc+-Wj-HeddjXPq!UKit1<83!
%]^pblN+XFKc^=h?4CB!6-lC+\`g.lB6#Hi+4&868BR@M3^oi$W\E=[3nKB/[ah57k<01@!@9!Mk^bO*lTbTE?+*D>Kfu>s+N3(#j
%c:$+Q1sRnj$oQ_ncJ_S:%s:ab/f)Ms'^"X`1)ZNRVuhbK#asFU/[-HpE'C$N;;1&j,Q2Pu#"jY(,^#m!a8tTS\LECk?AQO?/f:k6
%GYWu=[(qjb5pVY$I(^\@#PA-ggTUY$kS*HO&fNFBiP@/9N;8V?Z6CeTBI!dih:`)9".aRcXd*(I0k%.W<a.^@#*VtsX1/VY1`"7D
%W&e=X[T@hCRSX+.89`cuK$"Q*U'&ptW5*J5X#P]UL1T2KG[[C62GG,aRa2J"3ae.MG=?\9N9SgeM<pYQX\"nijnP7Xp@^^s,5Y_=
%X+;Q45XhR:7/!R#b+^&rRiZ.Rn;FRF^8#<ki1)4%;3<20g0'f)@)aNtg*%G&CWh:t?u?_bX2eG9jo8u^h-)@6QLiIIJc8#$aq%M5
%rUP3Gd)1D@1)M$I5Dka9Jm-1HP/.+s`#"gZ&NRk0hGq7h];o[@&DFh3ar-Tb,;0XkEM<8>6sk2i9i;i>,7ul8mniLO)p]o$Q4-;@
%e^q\C6Ao'!B-kEE&.DQ!-5+:3.\,j.c"tk<Lu`djDu;ZR[QDN/O;Qk7b?2\-N(<CXAESTXJ"H!G4ar4C&o%@i^RBM\Hc)*?""pV4
%C;d)9=G?.Q$ob7e=Nj9]9n\0E16lq%I@YtK#IAt^K^1<^*'O\cp.6*P506*UE5EeO<.)0k9a<0tT)361NR`CPLb6ItMSFSuml[2L
%OQepYU%Hm^i5gs$p(=W'&9U3p-UAp:ORCS&hjg)[b[e06-@FPsoFoC+$@(]JR?^,X>ilS)4QOK,AqN9j'He$GM_(%RgSc\G#O<RE
%;\G6[JQeD`p_'C0-FOT.V/?k^"'-F?/`\f+(o`#7Y*&p<\0V(%bS&>9Mm(S1%H54GWYJW'imj*?;GIp33Ylf9E\Z=XA`p9UnY4)q
%(L$]GT:sF:(.V%B;:ta[6n\2SpNcmF#kITA(!S0m@p(-Led*1qo41G:^+Tc8D.2`$(&NU$dj#\Q_Ts=]/dP'6@3gnI80QTOH9Ei_
%Ygad/kTEK5[aRd.+N_>dIX\o'C&7)uLC*A'#Yf)V(?&GQaR+TG4%lp$1[O[cem=WYm?4Vo(a4%=4@PlPSL=fb13R(qfNG.>RJ((!
%5V(]h(PUTY=m7QTc2f`G@joN9'HhE&5.#o1=si2b:7X2pTn+g'[k"b]]3[IN!`EK\<5gcTfI>;HLt/uK'JfWaFp6K[Ch"*g?.5*G
%iT(Luh'4FTF4tEg$d0cb(Lcil49>BfDV4VKjE=7%H:;j;Ht!q#>o?d=#7Qk.\QW34C\a0;aHkBj>kf3O)RjM1VGduZHU%X,:91uf
%/X8+]1n&NVT*aRaM=grDcI04.PEnsPJ&?KID&a.(rqh<C47R/OKCL%F]I*5o3l-MERmQ1Z:##;D=H2IdEb:UT0U<c_h_[YGRCMS]
%!qg@S'FM<b_U9`93%86oBio)!?RVpg&kYYe*Pn76*T;R>YMfaga8'9oNS>ajdq(#!@^b4ABi4`N*"J#+K>+E"Vd$f>_45UILto.I
%RpP?bjV5.n4[=@2SUUWb[nPu$6FYZbI=auT7HAVd>C&^>'kTQ28%25<64mtY.33a.69J8<4!uumrhParm?4^<0paZDnocCm"Y\%Y
%/a4m<30Ap'k>\3h\0CI'&@l)02LW$Z.2F'&[H+155,cs'dHeAp$W9+V=ACP,CaF,6VS.<#DFc)O?GK]%Q:"Y;5+RH7&^e3CjAU9q
%!m]2;6f`Dbg[prf-5A=7<irn6k,42p"R"0+.QFkASm]!d$'Et"D:<8h4MX=[FWL??mk\0Qfa&)M\FogQ#2HB>JPI,mCXUCR=C;g'
%U^JGUYdF0%K_ZpWi'aWG0041t+TqQE>WGm(,'(;mIC%MR<uUiHK"1b#rX=u;M3hoeIg-h_$u@!DcYWK3I&Q#M%-8?P/`G$0XsVS4
%nfIhT.&Na/c\8-l&U#PlcNV2"4+oiY`N=+iq[rfi$,SF#_TQ*!T)ir[6k+WX.kWTfbjafk=9l\5)#XlIUhG@Pnb`tSinGdSq8C0h
%9(*$5.<M?A^$7eSjmR>ccgTBS#OV&lO)baGq4m)eMFp_5q'ntN`iBT1%^BuI$5<9[mpD0<[a8["7QSlh1_]^j1B%A)/8XPARI9J@
%++AFK\fVX^r([ob^\GUVqpiCBS0P-[\lXTCr,BD3P/[:E8o3R0.=?5k4n9J(,r+;14p-E88gBr9Pi9[fHkZ<\8f;1n\&`2O;.*$A
%T)g6eLlf\j5e]O)[?8dhM`[307m>tWN<NIg,k@@1RCPMBKKeuF>VQg0qcr'h=&@Ar`]aJN+hF/qB0_/D[;tam].tA:GaE)DUAZkQ
%5Mmd@5Gpmg@JYA>#PHE,BG%>$f/jrL>T2$n+t1f-5F9A"PC)dT//9G2eNN^'9_L*cIP-3F26kJOJbID8cuKc`=/GK`#m)\aceX@D
%lnaU9NU'K'f]Opl:d!@](&H/:e4-0@c6i1Oc2#(Hkju0Z<fT*3Hg!9#$0''(6D)Yc3pn?eH+`+$ZA1U[3+'I6BSJ\UYp!2]ZH^a/
%:ddq=%]NStT>qg3K;fg3cQXRrF:<R%RU!.lcX7UsjiN0>T=O`B-/)uX\Nc(5p,.uYGDZ#h.FB=e1EM,)PsgOTXU+AZ)u5F8ZGL>1
%Cuf[%G^E,$MgU8aJh%s^Z-R'gGDZ$78[PZ-ID/@]Ik$:5U"mK-ZBkI=ct>DjORkXVU7P#Qh3kqcH\Us[@kSJgbWr#BD$t^1g"0)K
%@>fJE'TVK8m("7k[%]1IKKZYu[ei5Q),='Lpo@9<)Cm.3cfaf&=%>CuZT\i@6p6lCi2GKk(*%Vm=/8o\Y'p35-i!T`c\L?8CP8;Q
%!!/_n^@rNg:q2s@8L?\&]EuXR!'#d\4=Frl!47N;^MA2sCE9@qZip`>qdW)^,7+ohn(ggHM%IJWjflSU#Q\%]C?9!O1I@bA8fp%F
%#_DS`haU+tl^d/X4cK1p5QJ(21p(R<">I9Adbl#e:e4kA"cijG6@`rug>;<cQO!U%pk2#@7L64WFj"cc&A\%VZ^q@,'N2A#r;L;Y
%!;J:558t^F_8F0#:BL_R1&=Mu":1O\qUW<\*%o![#6:PK72$_=3`74['-.'mMABOOUB@_c3m+jEF9'n!8#:*_%KOEZjYf."T-ejE
%hNI(&I)+)_4GaQ`B27rkh807$T&'457D].!D[??D-9U3Cff/$S^X"YY1INA7@>Hr):?s:'/q1/;V+([Uf'*p[#W6I>PYZC=qVjr^
%*2=QMkL-dh/2s?:i':eSg:$aGa'"6[jL=GPgqKQ'$&@6a`3/Z)a010bW,t!#0JT'Yp5]1`GY*p:>=OG?$/mq$g!+Ao0YjuU#?q$d
%j(TGj/fOk@ppMT@7e(o5+[)X1]"$a$/cdT'dcuFNP<W7B\]V6]IZbNk,csnQXN-bi4S4&3Pg7];)\5HK359?7T(V8DI,Ac(.]^).
%%^Y-3h9Q7UF(o;LfZ(/\(\[0a<dbsYWJns/T(GXW*LTVe+o:G%9ufAeJ*"bJo-h=g2RoHOF7lccE""X8E>c+)F#MOX5Qr$`B/16X
%L**<A(0]!=a-]HN@1$S&2%>mVYD3j?0oGFh%FSK,33dD"!%s(rQFMQ<T\DO-U//G,]6Kb(14`^;IR,U+2+NG/h/+2MI<hW`QshCu
%e)b$Qcd0TH"T#8^5fajoODT5/d;E.Uk(nlPTYZT@fpqpO<lj'!8k>6=)'hu$_c(-1kL]N.\.,*9'A%7nU_L]<*"#;YA0d_;"i23u
%Zg'7,I[qi1aY/Y$4Mp1l*f+).Gpm_O.h5.om'qai=KtDi>!_.SaAO1?>Wj?*JGjG&X_IESSEb$2*5!($>SKYe/+s/GI86k_(3cQp
%j&HErd.Q@#8oQ5t0j\$d,FjmVU,=[p\d+NT+rASD>\S0\Ia`)#,O=i_MPQgHE<Q<nH%9tW,_;O;Z>kD&J9dOelGJ4"l((>]YukAr
%aW9&L9Rj5:>EE6V_sj[^IWTq,mT]:HT/&DT1#TB1I]1=Z6jY,bI7A=qnIU:=_72uh0:_?J6rk^1?fqUVE5.,o>8@fY4B7_^L*Woa
%VSL$FX:TD?UI0%^\ZR)j#0`CoPDTmdf1/A1/1Ml,R%Oj:]Kj9#nZ2`tLB>Xt1VXU9[1R23m&)(4aC1rabXi)R%0H.0b98[.g6:4O
%#b7Y!T$8kmPS4kM1><d^K4BpZFNE4-X`1SrfqYkCEF?49`6!N2C:_r8QrYI:dB*n7f\H2&%b)ebZsHrW8$55E,2MPIq0nO$Y8>(g
%d`5h'h<C;nA$733l!OMi3LZKKW2#U?[aQr;>/#0X1BUl;)]][oer-trNXN3:cqnpIKRN;4m)r/E*Ean[DKe-WfTF?bXIYA52F<AQ
%SUR0u>I0Ns^MTTQ<X<?cD3!<D4S=91c$?C.$?3;qJX454ijI%/kg@U4LI0UsP.#3;M9G^2[s:8I7%^a3A"*Sk*!U9R3I][E$YsgY
%6\q_OMe/Y*BDSKQ4;J/iM&'9%-uk96_(qa</KA@@,2,_0'S2O+G5>^a^C1ki#)'VL.t4WT5;"iP@6cg91P1KC\jqJNc38M1`4q&d
%PIN0HBo.4SBSfep`)-8i,*6'T;DA$[d4WP_U:rp!jJ^qV&dk2t(./-Q:\r4PpiT!O?0-#cO7;=0jfr93F=rZg_$F0(pelZ7Y(CuW
%7V#XjWXAo3-4-^=jFHiX*N!X3f_Rr4CPD$>j(D!<bQu,I1d;6lni-\Z_M^5)&^n/=_.18<`2.l,e!A%N(+PYgbTn"o\_8$>'Y,,u
%B9U-h7mkc@#B=U"cOTiZ)jmc2#6S?i"!A#,JCO=u&e(8]4tX*+Abm3Yq:iHd4A+HGW2^Ar::uO6qtgl@r<[2SGn-6`,phUX_[qpX
%/$Q$9+^Vf/oEcqfoGQ)Irk-'ZLM/@/K[UA-"Y?HL9:%p``LkhsQ8o>Jd0OYY\1AWFBEPL2"q5-)<42`k?Okc5HlUhj;WMpG3[:G&
%E1F+BT6qKYXB.N0qMt2M1h%H6EKp-<GsnmcmY&hE6q*^b7<r3Pg+lX;r!#G!VsOs/GUJ!3^E"^Bf_e9_^S<OSNgEL[1W$30N+P@_
%[ui>..DkW^<Q=s,Q<rMabB+oZm)fMUIP-=GEM8ta6\JH(m3jHYa"O;#jhlq7^Fg[1DZ8<jiTGS@?MY>qF-4oZT--@UcNWZ,or[*o
%5=\0oO*A!u3V*)aGDd7JljpX2OAGroKP,@1TA2"<JqALA4!^@X*eV>q$0!=%ap>SaTW,^WGbMSe7>OC)W)C,pQ,9^bc$l`1KmQrt
%^CT<lnO!ejTBembpRc\7rs9;Ol%k"Hk!f7_S-eM:=$nak''JROi?34pF;HtSC8=<iqgOl!OVK+,K?VG/Y=gmsS.unRC:>rGE\[51
%L9A?DBU:^q]$$W?EtK>\/;dgD$fR@s]Y,3tV+?e@Z%>;f5h:;L7/:e2j'CmHBL6>s:9OBZ#h6K5Go&O!UX5DJ8X(qNK[,;>679o"
%f3SsHjY^d$HqpC,3WJRZ.<UXam#?X9mo&=SlMNA7-OFF1nBC\NF:,ScSV!lokUWr=k'DR+''KI/Mg*FXd#"Z%:<,Bl)"&[^aW/o7
%P!YY^.Hi+"R\)7,&Nsbd3*N8@=KG6ZoG+WIV"?n=BL/`,PrT9mN_KAI,3Q:`Nd$WWf`O>-K3YpES0(MeHs'S4B,3Kj:<8lIM0"6;
%^^6oecGI)JQHu3ri%Ar^GBn6N?QV=uf3R82;okG!NQmJmZ,)t]9Sq4mT0\2,2"HIgJMRNdagNtN1UnBH<4(H-1Zd@BicfF70GI(K
%FR+KbH^j6"a)IdM)3<)Phk*\eI+ErZ^Y_e>oY-4lhiH)B5<]Ye"@'/X*1s0MKIEc@*G#%>5:6)"7Rh2nY%sfT+/9nFff^S32Z%Qh
%3Y4UZ&Z".U)$L1K'&7`jLg6k@?DELC*#q*"GjGh9ISb4gKb$L?"C)!gUnY[EP!JqLpk6MJg,.l7WPfsqdq:<['Z2U9rtL_ti!a39
%/h]D>raL<Qp(Ntf7)HU@d&.>4*UZ[Obf'fbp>Ob_BE4X.a(lOWe&LX[Kk`7McC(V%mlEqUY3,5])gQeiJ1=IBF%C=YL(L*2i06/e
%>@%#5+Ek=ilj0Ls6D-hV>KcPHrnlZX=;uUUL>?(9Eb][*.p?jKTIhO0]X0/YI=3Tb>A]#2>>7u\XgXq@>>70kG;C8!oi@P,pUdn<
%XaOlQk3&#)47i#DWuK"6C2m&ae9\/5FF("45+:TNM2h7b_[g@uH'P_VMsp2.C;l$j5!:EN^Ps]*AJUJ*qKeMY&d5`=A]g^Y*.o^G
%QSi"[:hY$=2+<LGR\=\[hHe\rN&L6::9gFkNP,0'];m3\3P8P7le'AjYFfCR;7XgFXf9*KrROq''Rq^"+2r/8K9kD`K%=jW6\jQf
%p*#H/3Z.1lVUDC8>>scbIkK`UpoPEirRT[gqQt]e#$l[n.Xiih:2IS$T-$f*I#[%;?2V?nTC5PQgmltad+k/C"LW,^9&U]%40O&X
%q=?JhCNoUG/q:SCq:"dbCa/Fe/o2^NWpc6EOQs]k6-FsV60lC"d,i,&q_13IF"DHX@FK4#(H)jic-MaS3*k1R#-eQj62]MCfF5>r
%fX)<'_hj:q+1;\,I_Ns[m4Nk%2t?KP33p59nT/b^>B8lga<mR&=ju88UN]5:O!B"cb)u'DHer>[?S$OJKl?0pGH_(iM7gdCU-^n/
%%Og@Fi>cRSYoXl9Yl9dQgc/CY-OqCpj#>pXrM9:BK*<:JRF<'h_gq/GWj@^!&T.a5i*h1,F<ko(:(I`^dQjhJh8;QUorrD#'*oKe
%$O>Y#llHp5hAq_+83JLD'$PoHl<usum-X"EiPK!,ENg"q3`lY9%Mn5gq1#=B+Aso@Kn>9;-%1&0Om1rsYm$-sH/&0PqAM>R&l"mQ
%.jGWB+O@TkC*P07RP?_[AK#SJGloii3EHj!#:]mb9q%*&/2kQ@FoHd(14uJ,9R#Xo.af!p5E>h>c(G1YHH_h0^k2Z/Z:_oQE-69=
%eR,.tpr@"XQclH+V<p_L`2ZSYRYO,%c@P%f,[?%aS0*Os5'Y!D0V.68Mr\M$*%r8]*t4WI&'ANJL%d):"Z`/-EqXZXp2g'%>0E[%
%"!'cLES0DZmSQ*N)>Ip_>_#UY_ONIEFKb\"EP#XQ>&YJG_3]F>iA0tRS"@R#h$co[YM0`o*p5U)oD1oWQo5sJ=fbf,72Q]'"$8VW
%X$%n50)5:d%f"Wrn#ne-\c2:1h,$;dg&Au+<Bj&KjEj#=J(g%a6Do(,5Ipg`!dh+nMFS0G<qqbsn,T*SVXTtj&9nHVZkSX[7&LE(
%8/jT""?.1f-^?#^bWmCn1"Rm#'odbX2+]aJL5M:/4:D"sNI@Krb9<GJl0?UbQn]Lo0,pc6(V7Wc[%fZTksh(\ioR(#gE!?dpS7\9
%[,6r<jWo@Eq9Qb&]l?n8@jK-PmhC7*]d/h35QK]j!KN3h"_N]*KEO-=ArDB1Q5>*rbDT7PG*CI;L$"27_i'KRkl@K79$PrVJo'0R
%:!K%.gC5e;Dh]&S@/78m]&;i/nFCQonDI.kVS$oes5!0b2n]&L_[@KOVuR_HL)5Db_i)=MCm%Z5[IeLX\D;%I8\Lj=Kg-D\&lL``
%\;E06i.Zp/bo1BE_KNhT^q8Po.2]CJoOP4AW>8o9<"A9aR'$(X>e/eYV\IG2:es:2fj6nK;>i,<h[M6b)d]=Tb\h\<GW3;AChtK7
%Hld4bK#Kq-mDbKOQXfL=_>9>brgltfc1FC@2mn9AfPZ0NGW3DT$=Z:U4W2IJWWK@Qlo#\:>O>"mEou\c4Qp4-EM$'`^E<+BKDm*_
%@4l-cp/h];WR5k[R+lYqD^\;h_)I,?@re?aFFC6Y,9[4@m.s4Hs'ohJ*6JfDBuClgM[tl_Ufhh6`ZQrre#HnM_.'8tKlpW:1]*(Z
%aMuXc?$Wq&$I%X@H39irFD!lZF[]/$m:jG2F$49R,u7g@EX>WOhN^.,)#3:DX7PYf(aVHCk?NA]]GC+D?Vp-9r]Gn%"r&7Ch,)]U
%[#*2t4EZSSfK?33R;NnlWdgJD9#46SooOnL0rdnKbLt-1h;3CH\^K#mX(j2WIpO$f3%*6Y-J1?909FQZia/#;b(68D]#FZ/mb'r)
%%;'rm=-*9aQ7LSQbMi`VGXXiB?*"+uo&Sslq8^/CBI1(55-jj=fACXak8RO,?G*Lk[K5^5bP10L4T>/\L,[=_krW/i-#gh-LRR;=
%DeMW5="^*)l1g3.T9bW"*9We]U&YlrT?,V%cql6?H_m-'O"#,F)PJJ(l?)r'd/4`NS"@KL)BH1FEFs7UF[<oDG`C!*PaMigdpugh
%<rDpFe%bmcs7;#2$Jk`Gi-G(kN#LK=W`]JYHB2l.DQqr2;-M\m;Xl$h_g_;#BUW=^M`0lRZ3Pt?qb8!C^p@A$rg/-5msk@%s(*GN
%N<sG<`3TUHlbEDis8FrMndfW&i)-j#8aSLaDNna6Pa5A@SFGF"T[6N4)J]ubn,t$Mj5:fiTWr+n`$LPj2K\&ci8)Y>'57&#p55O9
%YuE=W+QQA0S1?0a[hBXmY2Mr.SXIhc:%k,rPWU;hQ5c[Ma-=?Lq<f3`RiB>UqWMr-qaR9/4n]`:4s>KKe.I.%=:80&D4d2MC\]J<
%7:raX2F/H+;K8.Bih6N!35TdLTP^HkL,'&]GFIokDPnVoXf"<cq7]d6Z;WNk+Bh"N?@o2i7"6j<6`r`jaY`B-H'+9C,Kjo(&b8O;
%<m"5OBTp(C'i@Q$WB`?<guL(*R5WMs$*hrIJ'B<[0AIi"jmH$uqq*(r!RTdJFU>'W;MN^*C4Q^j,pKlf4@i`]6I%3+<EbXgq4j4F
%5b$9"W(9NI:;eUGek04'4DCZK'3_<U^@Q3)`^K8nf/q\7]@<\@P*=H`1r@aGYe/Dm(:IqeQG6<r`(F<eWgG']<1&hd2lTHiV[[2M
%9("Oj5M])F93pGc;u1`^SZaPdKhE7B_!rN#5YNH3i'!h<UqY1%,NrLR_p0nPQ>J!\Tcm=e2C7o?7W0_*[/(iY(7=0((CL1g;9U$k
%2_E\-"ll5u3)*>BNflNNHu'c!QPpnYStliY6%oK\7i7i)69DTNN@,)qn3ic29SK3-X7$-d8g9;HBR*KHU.hD%I8=P>Lc3bn.)#5Z
%(IR,0L;F6-\KTosSVomE3h?["N]N%7A:E*NO0'P>5pp-(jB[E.TF)mpA(d;;156m(+fNcQRX_Fn*QYtapk<0H*`iTg76;<EJ%gYO
%>3]X_id'B.Ng,2Z1bBe/;Ws4#Y#WZ.Juf]s3XeXsG$p.bQ&-E:MQP0JSeNGi+@X6>Ur7dCd(8naY`1$-V+sN0SnJ&QVGTTV#[]ps
%K%t*3YIc8;Go3>-(0aF0[Ni8KcX<WX\pf+?U3R\b!N(b@6iVc9'.kbNI<nTZM_?ntk6W,=8Z.L:!d+&VlfY`-RaN!E9D&-.5?:j_
%j@pICMXVp4q3!.*>GMqp"M-/!^0OPl*Q;-;_7Z1AQEHr,%J1gj=%;&A5o0,sB_e7H#k:50gb.h`LB36nH&k)!ot^^$a0A!n%F9;C
%9U^%55X#!GnaCB41eh$P_eg9F@A<B/18pB2;I!B5+d;7c>MtHLnLXgO/#q$ea!3Q<_G^h';Pk:%E,COHT?8?EPWLA#SDf4N3D/=T
%:"j\-YuVr/XYjI5P"m6F^]Taro]YI..C>R@,3K$Q+W2K5CYI2edeb?gV82Jkc)=.J5,)-"QcN:Ba>`;J"^J*$L</bN[coXo!R(Y/
%E(.6n^%n)\Rp]opP@Z$3Z2s$>H;s-+'";Z!VGCP[r?]fj?<er-Vl)ro\DgYl#l0G-]b`C#/VM.2Re5mpFo'l*]._N<HC79__\qF<
%rCCd"V<FF?+h33antAHhf<e8UWKPX.&5jEQ-*,W#q\?qd$dWT-[`<n[irY6s(D7q$CYGXe?Q@'A%d5CUHJW36a%MFqaCeCLY2GhU
%+`b2l/\U.q8Jid[^S.a8!AL'J38d>eMK0+^j?8B%E9c6j\R!ZB]op*_L!]F$nEUF$1D/dPOuIN2iS1^gdY;I;0K\q5OkVa1djp8b
%8FJhAkXcb*iD\bJk)0nqLFV@`8FZbA*K*UIgob@\?<tNZN?Q-K5rs,p66FI&==pSNPD5OC'q@Th)RiA^dUf94H4Z.YlEp2&^lHk[
%75ckh+l8>soaEd8#tj9%:##;DnF9u-j+]58Br:P.fT4LBae0n]9`>BB3,+)fm?4j@1Z</.W">@pQ9Jf43$&I*lmb>lXsni(1\!oo
%G"Ht%M5n<8m0<bB8;:"cfJSClQY8GNJ.q;YHhb]3OkVb\eSC0j(m(C&B>1P=S4/SLG5D?/7L0iL(Q]46Ba#[C>\]g[J;RmY8<'L]
%naA4GR$">(_OGET6`MkO$k$aj`%nW#G9Cjg(qIup;Y:NMBq`<F<18Xu.Jh>T1Z>JYB$tiP9J8`%&?\p?L+m;'kQ0;M2;$XdX35*I
%,c/tI[Bi&;m'd'EB`Z]!=mO@*5rW*WWm#j@G#q9pm%i`7Z4j4i)a>F#)'u?f^)6]3lq!?"jQH\?T0uDs;h6j0$G,cXr-WM8FL#"!
%UY0lB,N"l(VRY8o(ieQqM8=/b>[(,$42IK$'/\K5Y!#1+)=EZ*RZQockH9#_0%t@(0$lLJ0(sT2$TVA`/nend6?i.gc\9'0(ZFg$
%cd(E*p78rZ8`?jlilK(PGC@=9Rqi9.$G:F^@)HK8!&bOC0hh:t=;Z?DEZ'p^IGMQYB$M=Yd`,ls;S;&"%-@)t%ZF``J^[4W=fjh9
%X4O"f?HX%+At.H\[gcEaHp)HhE<Qh\KKI3XhDm3miAe'i@^R0d3"SpqF6>MtMg;f<ll6786JTiq@(k]33A/t0EIi=o)[aH%e!"`U
%#.8MWVQb-sbZ6]@\8p`tRH%,bassWq*+/2disW:8-`lL:XmlBK"RJ*e*+f].Y*J#M[pHqkEA$;*_T),"*B:dk"36[YEa3rhNit_h
%3528/i4.'53NcUIoC[J[3]EQL&%CPM&(ffmmCe;mXO9"e",ftqG)f(JYcEiq*!b87fJjr:=J_"j?&jO(*#Ek_\=k#b2a%JfAPe.$
%E_YM37I"^^N`<0Oq0M1Jk]f7J7uf7t_!qS4NY<1,h+e\mV4?+]Uaqu<j:3.W399%R-QFKbL$]^ad"1'f4g8.>Y2%T7PhTt=#B$a(
%+1SF/<Gj<Wc9+72)fb]DFJ9%gi:_aS[kfA^j"C+h\=S::E]_`(H9@cIJ7BRNSoC1'm)jL+$[1J&Je&8k$HdAU8NFKhFd)mh'Fl,7
%fdb%-.qcR+NrM3@+'[#%UA7Vj_"A_eBJb@'0W:f]q(g-=+PF#,B&O*o>p"!d74^pLQ5o)2CMJaDP)eG3?IX/-O'lX#s#:(`romeh
%p2A*?^\^f6roq2fLu"DI\;nYIP&P-_M03Z:rtnj0*q7TZ8KT=rAE@ZGAh(0fi)l,[aG60WD[Reu($'!K;t7hrA\!l\qrYb"DQuF'
%\JHGARN;p\I?JPVTW!m=/<_t-3&4qZ"=30-hlhgofC%sf'hPb$-mT-$_6(Ci)T)6nKLE5*b(#2GV!sb"h8bI?_47imY42<p4j8R)
%72HP!KpC_r<l@mIbXVl.L[]^jafso_j8,M+*F)e7Qe_tc>)\5*6W8fKQ$n).[]f$$JZ1&T!^-"_C/74l^6tY>Wc+e0:WH5hE,FI'
%4di8X5=)W>0bl;E^[6>p\HZK5%u=eD,eY>oG!&IDK6Vi#K_>$,0rnAFi/_O_'P'QS%B2/=&Q9_bA[>0&$!L;GK?;L`_^R<3r5qDP
%h&.c9#dm!gO,l<gG!X#U35M@@D%0oH/CBVZaS%-_N)-D:,Yk[OQgF3Lp?]Urr2OsrjujMLq>:bc4kPi(VJQS[7^C#\9U)\)+'7A0
%;hKqAQLr.<]:]ms'Ci59)q+]3;8LbD'56]5:`8/bAgVMfm?%i!alJ(:Pg"[dWmeji9C%%^i)8)'c3N7j$k9$N5'TJr[U.4/"PWWY
%)p[\NEWU+V$E=25jNKH@o3I<j)kKF5L2C/1p52H`AjsPS>$Eo.:69=<.OsadW9J&`DRXJ6=.iaNer[=>g5&I2lZ6GpZ:2eBs#<e_
%!'?O4_hKR9,Z:j^$"mbPlV.Ak/-V:"/#79L9:ssV./6A0>=86gj5:q(-]m^rd5<tYVDC2+ouMc62lqS"AMe%4es[_)9aW:a=(ph*
%QVP#lY_I!6cFI(u!nhH+Q/N$0S\o0I^TC/,S"#U`Io:q2"oaTT;G:Z3Yo&irEfqpnl6,gbhLQ^\HqFJ$7t]349R.=Y2DEue@O2I/
%<:#Yck<"kH"dftS1>Z4[M579`G9qhKUaCgV`>.Z!6b;gc`'d<=>jD]K(5Fj.LjCcEfbcrWO-q*3@taFkp-XP^_3I#qK0Y@#c6NP1
%4$t.g[\0k].'0Zl(>;D%AHVbuOSE(C-m6;K`]JXO=Y8TMQ:`turXWb"LjfkmX(fX.[@I+q7[P^*#9s\jSIGF[]Ou(Qk)K.]Xs%<M
%P@8A9+WOUP;5_"VDRlA'7ifSio5tc%5,<bkS**0A7J)17)iD`mih%`+Tp-^*+sD:Z.s.1[EiUHK)6Aq28*Vl0>1)UJm&8i?Jo4-%
%h*]GnBMF$S=@FN,`I>]0P4'ae%BBR\6\de4_f4$mNBoqAd1Jf`bB<lCfqBmqP;6?8-@`;V^+M![jIMt6+k]&D:G%kJ9#hk@remau
%AjB91c2@PZ]ba?=S'P4gmDW3BIVQ-p(SqYRf1C=7h?<9kT()=B'i]ZOTen\=0A%TZ$T8`DfJpQfZo["?J6:=elqd]`!A?\,!p!BF
%ZZ.p'f3l81D_jt:YYS8S12)@^^e*R`S*p=:L(L1XMeo)r%;gdpnX=>Dm-*_lms/SP3[U!t$:M,5XSMADJ\k<!V?j+DCVpA,1`cl.
%AMnZ'%,7[G:n=\.`ZbS#1A(P)QODCDj[u82>9q!VPGb?!o=ROTGh<bEm:\k\\ogdUKkjX:gb4ibIZYlmTcf!E09Z3$@P3i5f\h>P
%*\S0#Qm,-[U2D:L^>D_"ji\d^5Wb'^f=QS:=A$r=YA9rlhe3fs&FR&[8@WDNUkZ0Y'&Ol:7G2bMMV^8@_c:o*/h;Jn>TJqJebuu`
%epr-7f'Y:HOZ@B2CcBeq!J4,B%e\o3]L*7$'8PD@ES;([ki-9O`m.dV:qG&3pKoNiqsA00WXZ0njZ;`tWd"f\W?\W_Z"NU(GW^Ts
%$D6o.q+S7'*$=LQAJX^CaIi)?H2m.8*B8:74/aB_>%NBd"W%`NN,Y8Xg9-A;:']4L1'0ZgLFeIT1*YqZN5.P?*R,%E%9spiRDFrb
%@#YHK[CI;W&Ot6H-ns.;5<u$sKM<3?NdEI[#\#S0rP)&A@?7S.QJ`E\cZdHOeK@1)jiS`9lQILnW690aSFLnG3G95N>&cLN>Y)P;
%(ZgA@J0N"Vrlj*GFgrEX@;K_=+&>GHMT$Nj/\EMs`npETFKcKB0@?-u0g)Op0U0+Y0K*WcW?.FT[:r)>joC#iI?qq#)dfTgj$LsP
%VN_Y[%os'm8eB*=FjIjBI`^WNd'mcJ8-6P?Y(J3Hekm?U?k8Rn-/.>)@kgeK?JO6HnXrSgO6n,]6*+7`Cs>GG,0-B)$QeW<@ni[;
%#!_3ZNPIW.!sTOZhZP7:Ta@3C"VM[SZ:Ncf9>t/@o)4b"]strl_I*ZnXF43r%8;/O#SJA^*Y72u*iJIZQ3MrE<Lf*M!ofUPWHGCF
%hH77jHXsnN'h^u.cE^OT_6h#Z#GD8nTPR"U_qAEfY<Ki'\D0Q._CWe-qpq1dDL^IJN`86<>XesKJ$sOG7hj0,QS`H>]gOPqGJWWA
%,+.>3'b=\*&^4.hQ2]R9pdGod=Rl(jR0jrX'>msrTSUf^>\0t_b6uP8)%WF3"(<=5EChL1CZ-ACcNddfBiCm8n6>)/mg*LuE%cmi
%_0DJVQS)q99b@:Q/pFm!CqIOk\GlWnlhMHUGO@q@RR$f*_I@&b%G1KQ5_$&BQMV9N:t;?G7@uIPW<uo$@kO?Y&/%R53A>61q#GCE
%)$pW?A-:WoE)uQjj%UHP+birUk]2%Y$[b4$(uO@smiu<Zdq]D:0gZ+t$XX;F%uua+oH@VZRl\/kSj)?;?*Bk$hJo^-ZG1aLjAY!e
%]=iOuBO<alpXeX-h=Ca)B<QUTI%U.9KV%k,SpS6%^Ah*kV9tpqm$5!;-WNrN-*BRJh]>"+PTN*j27NeTj!R2/5(*(oZZ,+e!eo_*
%ZZsEEkJQ=m@3]fQqr=TKp6ei.CoDG%O.SH[qtR.CQcDmmU-*mBO?@u(<'PqPOhQ8_a?4r%.ds!BmXE>uNUe_;odBJ-cN*\YQO`JV
%MOKl,6fArs^OL^&$ftCWTD&`TcZPqs$i<p?b0MhMdli3i055n=h,/V("[oASI0Be=@19KGTEXJj=Ni"'JbM@2M#A&&5+qC6h-WGO
%[1Aj$@7+*lnd;B!ZEKo^Ed7l>q8kGV#0AYLDM3i<F8?<FOF7<jk^!FrZhE._aj_O.B@*K1m*D>Vg':EME/i_H5sN_-nsX4<qdo?]
%\kLtqG-\f8m\nZ1oIX&7JF+pf'F&sn(!U37$Pb7(HOEj'4F8OY$VEq[(9/UbDkT46Gmi0ea]ms5a]k\l*;UMPOF7Qqk^!_%F8!0-
%:qf7h6[J[TSd@6)K5/a)%0C=Rp.W'ZEqJa,c_TkR<nr+<cO<@->-42*a['Es#C@e'IADsJgG%aZ/ZkErN)6h9Ss_UZC&;4`-Ls02
%2"@ka$EEenUaf(m?E-.EE5'T,gG<P"FUj.(HY21EDUB@Z$$$>,B:D1#0C&qMJ/U6JZ3F#(eY%3aT#75Cp=57d3WUn&I`5<<"Go=m
%^eYX+*/4gl=BAGd0"?)Cr!Kbb0N&B)na"X1Fs51gc(8/\:$nShp3!"EJtFA`-X>OW+MZlO.QqX9TdoQ#_UAg_ZdkY3.qcT151TVd
%LeL%G'_ZT4q2bbG4jm!Q2g.I#(W-0eKs4q[5l$Tn@@IoWdk2mTXW1)RJbP@4?ut`;o6K-,K#Kq-m3d*Ip*OJ@:C#N8-KM224V>\.
%m@Y6'TA0M:-b#clkH='k@,=crGYMU2\]nru-frL=YFkOLG0_c)%s`7A.:.\*gAUBPTAAu3ls=#58.:K@1L*<n_h$e@kmcksikYd>
%l6QM:3?GktjI$V7VH@8\5)8AuWA)T2_\lOTU54a]Bh!<f(^.Qmg]R-Ak@Q/Fb]K_dNpC.d6e,H#)@k0baE*@U!NCaOFa/'M`lorI
%7j.:XiL%N7$Q"pP%D5-jB*[Q>V^WdjEa!MW1NVkG5jgI(Z[`Gh&ZIIU(*(thQh9F/lQEtH3>`)Xj^ECW%I'gBq*).f%]QF4_'Km3
%%-^G!o1HDbfWj8@ZJD+Y%25$`1^:s_j*%5'jH2BSiC[i'qEfr0S0q<I95.hMh6C`O@57Go6&nT$1\FrgfACT(GZ'+:Nr%*%q>^9e
%p"t7+-)R9GQeq:jH[-?Mg!_UX82$k_nh!)8XZtrRLK^$hhu1?7*S0+hMUilan6Wi5Ie'W8o&]a)Y<J,04]8*Rn>l$E+WfBJMFeG]
%q<9':crC48+='g;j?G0V'&jroVtJMj\nm7>n0?FpE:k<];P>Cu.;`kJ=Td8P>Es5'YGS+u)4bIi1D=f,aaTe83%,_/D?WrR>Qmme
%pQa&&B'Q3*'H[Fbf]o<]\</R$=5+9E_@4I+,q"d'?#%bij4'0[KhtLQ=teD7:R]D<K[b"=Y?.oV?KH%X7I[kpr`_71n)[Gs;@uH&
%418=m!CqE6?%l/Y<EH4QQE%">1gFg'W@=Q19+AJ4Ri6%B#--q='MC=DdtVWJ9'nUg5MnB0f1Q"uD,P)!%C[3rUFo@r_<-KuUY_6V
%eQ;GOo`RSb9[P]_>`g@8=orOWWhOM9$8oLEV:Y*$Q-j;5R?p`3cLf`TP*ZmtVHlO2.aR`nV#EOD'%Hbokob$RW_u_@Trl:IAZ<\G
%8+T%1C?;_??0LP`;'*]>'5/&j'GX22aGD`"h--LFL*t5fAjYf?fd1mG5O<ToU?`_&]pQEPNFoq)f;ME]2)hA/LqQakeSA![l!5ao
%DO7A^:E.G%Ph]u]P7;We4B<.]I)*uJqC!\(@CjV;aHM3:KW]@kgAVp=)de[KZb^`0(gD))&el$>2,-([I;9cn`E)Hfk5p"C@?8cb
%+UPat]0htB(H)nbb!<A6:.RsJkJ"IC[6?kmdG-n0XK-s$nQnB!/9BD>`Ya&n@A*G$_gbQ,*g9*Z7hdi2L+rM@)9L<*D"[^K)B1&_
%C+tp*ZBZVSA,9H=^)+dRf269]R>b$+c$H[j3TS$`8-A<P;k3Z?/^2ao3"5qk66B%%U*/W2kDVX(VsRqK(lsPTDJ>VG?CR[nFl3nS
%8lDqEqtR_;-jIgX/kRnn%YZ^lh?=iYE7[@_WL8j0]U8S",`VMC*gOP$UL^Q)[)#cNf:^hg*:AYVMmN9n/=Ea,K'eGT\G5pQEq3G`
%_NcS87T-MEq222EBRp7;4,#-&N&m?ZDk/P?J$.h]VE,eFH(+P1;dl-nKE>CH9SI0b4]3_u@aZ5>a[s$=+K@/`@a\nX[s<q]d`si:
%9nhg469I$BV"scoE'ZO9W-<!68Y9]h?Z_1SFtj`/#DPYAVO02=Kh:?YOTo?R8Y69WINj81;dapE.#ht78J>61Pbh]:1%1C'0??b8
%SlQ+]#I"!P!ui,![?<@>XDT9ghU'?K_5<OjM5KMe-8$4="f;Oib?df043KUa:2"BMK./-q6!$*ho>SS4Ql[sE_m%+UR<WX5>eu5&
%hMOm3d5J\8^pU1:NG4,Wj'(!1Qo'q\P<Gq-Smfsqmn>J#/)$k%kE'B1esL(J]HcP.<_St(\'28I:2iJtAQqk)MY?<mDuu*1f9g/0
%,@9&(P@h'HA>XfD6Tl-I^7oH?$j]>WC.pGM4-ri'`MAoLM-.r6)"*>e2<cXFdVBf4UUMGr"&=1pBdV^6W/c(Tb?dd:MQZ1u8$7kh
%$;:ttX0\3\dMrrC"4sG4_Bdn.]o_k$C"$ec4<md3RUH^CZ)s*EP:n@jTq3cNRl\u!UnuO4g0BS`H"i";k5sM;N\lrt.A\QI28@b*
%^7oIj/I>4N[_26_*S9.+Fei/ok7m>3Pj9*%AYcM#RndJRMSZ1$oRIV,%5VRkR=&`m?,<&Ihc,`P,&KC6,B:F5QY+b?f(UZB9UlLF
%?,2K$KkVFh$d-mD>bcZ!Mb=Qt)TYrJHIt`&oN-#&Fg!!;7GIH<lDT0/eYNKjqk8u@aN)Xp]Rn>*7BL^.Y@sD3;qYnQY?k/CF1!SF
%c/b'MQCT(R/eB_FQ'/kU]m>AP`md_6l%,.1-#"\nCVO2lEKi]79%"NO=.f-F7d#<(09%OeRB"p9dKH<B:DA`g;W1Y*B)Z`4E43>7
%JI2>Ba]=a?0]M,o$IJ,Gmp_A&d1!AtWi7Vqks%4$7;6mY)F(k\HIO%2YX@W?G""8ddN;2+B`aF7LL`8@?(/Teo0fHDnh@$PG1&m0
%rH@+oXY-`7[+2",P6)(AV=:cGe(0gcDVEgmb"aD_XSe=Bd)o3i>?Z;eCJ-0Zc-I259dbk([^NP`f%--fes\$?jr-FR\9MJdes85L
%e_8HogkdIu=4(Ts>>n\YnCCR)2S><Dc\B!21pg\oW@VnRCFVsrk3C9H\Y^2%Y,Nsh\8*Qe)t)u:KtG3X,7dS_[?[QtGAUo*jfb?"
%@B$VM=D[:q>999Fd[&"Ug9YA]WX<URD!FVs2Oh;+QHr/h)6H%NUJ5$._eE=Vg9B;T<d8JKEouYDhmT\piO>p>Xo&r6q(6`T%DQa[
%Bu=jn<SHqHC-<Mb920*;Dd-5qnCq!/2Z,HIK\rXSiO>p=D>7tK8fN5Kfa>J';pJW2o@m60[er$`V%(0UCA>KB/6dRmRaRMZVP^`^
%pT!k%q7S7E>CN'1d[&dfVR5Ho;G_gX:WdTS;qgfse<IE>f%DOfPpp@KT!(IZ;qg)^VP^`2$l<Yr_c:4"?AGDP[,JKr-uJ`2Fe0&W
%V&m#&\#h&qph_NR)h&_5_JdnenCq!.[eHMq-uCV,SZUb-b*4\`cho[9V(KGV7;9[.Kc5ED.a+.8VOk0V\#C`lq7S7@>COnMd$EKk
%:YKhnlUb;mbKlI*g5GOUe<@>R2YEjtYB?_bCLtSTUM!o&HIA,2VOk0Rog0+k=+01)eC/0\QIi"&[,pt\nSEKaC-c'9RqgB;gSUFH
%A[bQ6IVVa%Dc9AVPPMSS[,ndB<r&jk3HOjP;b`^_<@*E#lP2%m@NRpmmT'CT?.e@#S)n,8'"VR=$B"*J;C,U"ial3ib9RcO$;n98
%Z?Deuk>C$KUJ<Fkn!8;]c6bP\E_FI+TI+Y.iL/A<c/7sS4r\qkm;gt!h7V#aZT7>3E#?RgbpLof7p4rU'JmQH?K)a_?;["J`k9hZ
%*fgUIIuLInTugpuUCaB-noI2V[5<e6YEn>pI,@nX#CSX.V/WD!Ii*6J1p.l0"2n[S=/jiL;BhE(R!#5QJO4DqYBV"Ac@bo+a^C`\
%eb4EVd7/nDkUMn42C_C84s(P8m>m*bhJJD&&Q&:WH;p2:D,F)8MFbqU4ceV"B%&Li\X`@eD3#DleZNO@?H8DcE6VuZ!#eJr[T.^(
%))bnrm^4*KEur<lZh]6mV3c\7.6+r`[M:[f"W^XYkd=Hn5tj^OMpB2KL>",;CUuB'FSQBj7pBkTjLIa+$:@Q3gTR8*5,"j;36cX&
%\AS%pDRFT^J]Qqdl7rl;Is5)!efn;KetTMMXeE2'jI0s\3F+h4+t$^IG)1O^j:*ttCq#;)i@SM"L!s:f9X)KXFkD<2jJ6%_Ks\"b
%7:uX+6Z/122>rti\h\6ZDGJJT'?G?tW/PXldn-'A]@an?G"@1gD$eL*fUH/@8?<k*0hY9'D.tILCKRP"8saG)/^`i?&o'MpVA;()
%!c?aG</3DhR40-=.SN)K8`pU'JnC0*J4`lV]I.IgB#Q3.=/M^tKS>jIFQmu'&.M4Y0M9fu+F.STa9cDS<HO3rW9GR&ZTYU&h\'__
%Ai6^TR3ebm?(6_o+r541e>;&>9<=91L3%[,S3XMi7:h!9:8`*#mr+O=VNGW4EFfMBl=CN2;"iQ#NV=US0a=%?T*S0?qSM]c&T9Z,
%jF^8%5hcf%SclliN[@:M?,pdO.H%R!W[J"qRAtqi=5)O&3@Wlpacft*1/JgQP8ss&^/VaKnEZNuqZ=BSd:[mo_bu7@-"3/E;(A9T
%?I/<ST1=!t7s&8!f@A0OT^bZ&rXDSWHD/NsIR/<FhSJ3mF%<p*m+@(K_UhRoE[4rbJ7ujAhX'm<f\l+I7j4ZtEO=^:B]"Scf8pB*
%rLG^L&E1k]5ts[OP:,cBZV6o>]X_^L;_o<t$?\2nhLA*;r]=BN)g_F\K`0i()p,i:)TP68k32t-;fP`"1sDG;Hp#n"h\\_l*^&fb
%&>qHY,9G4s(mWDjK&`ht.)WfeBu8C[_;>6a7"OH'P[HtsPD;b'U5!qboa'_8e0H3/Z^XpIb>c90=^g&]@MVGo)St1h"%:k-kn"tC
%oJ%Mqe3efO'pjFBW1qN[\gS'Vb4Ls@W41"T>+icV?C=>IeJd/9&d^!MKsOY,MW_-qo';"C[Z=)[X,5-8&0e@p4;Y;SL0-p2>3sPg
%UIDH]?p-kD-r,0Mgj"*u?V',mghW/*%rIc\;CHo\IH2cbKjs_l2)&la8WBDi#SEIg$iLZL;u5'*eM`_.XKE$#dmkD(i=W&O3\NLX
%0<[+7eJ1D$E>ktur.U8X1=@11&C)5B%mBu6)NKJ`L>9M<649=">FVlpDS1AEOZ$tDERqP7$)_ad_&kCN.DG)^^j.-ed3t[o:W(Y&
%k5VSm\8V)d8g(a:<[NH.pTR6iUOD4<&5]Xr!-H/6_Z:=GL'0HjEEbAhEM-b2q(ftm#7)<Of]U=IM*osU"T$3%#tI@-'Z0gCOPUC,
%1tN#6;2!LsH25@tJN![A]8W[r6u<oV<.]l/S.8='qIW"a"&`=Lg&,V1RZS3$^Fl8V'gGj[Xi$"m1M'n0rl(a[j4q[>25E7JII+NB
%,B".A9Zl;:,):Yk82C_Afj'\Y(XcRIf'MW>HVm0e"K1hWf6FWXjp%`\4<cOipA?3#O_fZV378pq..ambh31<#p6(1K"ikE?)R(ot
%N!.-JMRO+8lM]qZ]IuA35"K-h8:+/85&OidQ_/Bo`4W96i8AGVc0[rFGq2!ITA(3$G/06G'e5fm8cO[P`Ua+#Ju2%?6jdnajMYo,
%bD*kLSrcPMp&MbWU>@,V!'aI+FS%F[ZHFek_oLQO3_`:Z.+nTQY9Qt4`#/o8e6E2MCOo+[2@c.-5@CHX-$F8fOU"XIdt[9`W^<ld
%:]_4fc(T9/-@mZub)F^:RqF6iK?dPrpfkqce/LrFHXb&@X)28+O/BchN$u)be?9U%ooWa.Z.4`6nM=b9W<mi7g`)mIGH(6k8Zep#
%KOD3S9<CGX:e*pq9Ut/'0STCSMRh*K,OBV!ZA!CLGVILDS)VLoF.6fYahnPEnn<:mGo'[nX8>:oCI3.2ZW"GnXaaNZ[38C?q0"O)
%?#'>s"^J`6O/6f34hOHXOZW#o.rmUui>m?fR2Jber.t:'1EKmcS.FFhjT:V<6]LgkBTc3GL<phW]^&*H6pN8o\t0+.*"GHN2'H/A
%F*JQHmh(Hb.jpFo8`C%*g%ccm,@`'e<^>@\5DOt93KFLRIRo\c1p4-7ih<?3_>4XWG]uM-rAl:OA_KKt$$g,J`hAt!?'N65n9fd2
%EU:UDc]jAiZP1sYU?a0B>s5e-]Q*bqcR-9<9LSd^ZKk:W,"X//JOe@6bPk+WrUECia.kSVg=1cYQfDb?*)4ODGD8=&jA`c"N^>2!
%WKn^Tii#;*RHBTP@6L"H'^r?n-^.h5G:,S$I,AMe5HjG=gLJG\b`^/dC\Zipin5b>_ii^U]L@Ri7DQ`ojPLEpk`fCN.2(l6!"T%u
%#fi#bRZUua)%#Xda/LD_^mP`o&CZsOOY8!RDunT'RK0R7&qLpO]bV2?!Qj/K'R!J",b_d`q]Q+[CHXaBEH!5&EA!E7@-EDKO>OsX
%_e;Me,\hmOKRH-[Iik76W5+T1P5CpcB1kU:V*hl4%g*!:.]R]e))<V5-s/ss_jP4_g""6JT?CF]Oogl0g?:0$IRMl^B@pK/]OTc)
%=X$)`>6)fq7-k7YV\IY2^r`0>]gnk2P.6UrcJg2Y"F<&0"jWbsJj0"#7J&ui8GY4ggWhYEdd-(Z?=QM'RK(?nI.,MLO-*aG+W[hj
%n&So;Y1JMgZ[.ebiWq5'/r*IH`5YE)e0s_E3DpYWc7%*)1ZV9+/1mW"L''#hdY_\5j\_$I3@Fr6:*Xc\+mAW6J=QHhEdFHW:c6)l
%S%X%Y&El+\?gN^S)Uf7O3WBtJ*$(U9(`MK"RMfp\$Ke$*:E5Gt[o^eQ<t$1rk%RAV321bue;QdrcI_VD^mH66UGdOU,=I2TJqrEV
%+!Z_`B=?XXf1g_m<8q\EHZm*7%G\qSkDsfI5l<-*jCargnH=f8C'\*:[<'E@0/V%sQ+*IMk7Is9N`H]jgLG*<M3STTUspB(:*ZA0
%9_'gL\nA_75G[q/^aZ(i\P',Ml#f5M&6'ABCYW3Fr!A.6GZZ_2+d$lB?pYd=J:a5G&50D@G?;^>,(;(`6o`?b^`0;od4?%M4H\q5
%)/;.#:/&QHJE%[iSX1`6hqF/NnH9B+!.\;n$:oa$(.c@''p+*U/R6u2O%<`@Hl5(DV^OPCkL^=d(ij)i"SsXgee&c)KKX;]L]sb-
%1MUcm+hT-mb_UV(UiE7LHC%H[_3(Z7M%'pn&.&AN38G13%\JIhfC#s1-ap_JCSUmp?$O'[]KUDBB+?)5=$EgZC[EGgW(?%1a3ia?
%"rMYGaeUMK/5aJ&d#anU7RZ4TiCm(X\dk9N.6i!oXl$9phPJh"Ap_Mif\Te1^Itc&5^GkF1WVWGanAo\W,"6<El?oUjm[#L]7RL(
%Np?,pmL/T\N'uNMS/'K12t04VS8kD\WY!)\)5^plpq"171r"1)Iag_?PE>aE.e=5_ac)0IiRnk0+5r</mL.mta6u26")@56Q^s25
%;*&s\s5<Kg<p#91WJst+]%ef`pOBXp9!Y6JdXNPWDi#d8o#/U/`t"qt5\V:RpdIK04Gka#A_q(N[ZN\n-[l'dER^cD8,s,QXXKi1
%MC$EAH;7tj8QFL]P^_W9`c/A$UV811du59h0%'/Z$V+&:/qsT-CTLlH`Z&+E"?AK$*)8X@7158s+fA@-*mo*WF3:TRja;+Kp<7f`
%+EDYu3qDLF=n*=UO@4L5\CEGp!#HHhb(%qR?GK?M:_1d:J>=4`Qh.]^G&ec08H_e1jS;qr]JdX#f>7!D-KX4>lQ+6>*Taq$#R<\Y
%;:5W?R>Y+j:h9?$^]>;%3^Q7p@Mu/G0R-b:Ku56@i.PuQ[VU2j+g^i4gd;`naFH@9<$?N]5d!/.?fpX&!S+SI!BiEN(!d3HkSC7R
%rS#n^NW,9sL(AEsi#C?MjLH&@i-Z2Le@#1%0$VCig]P^Hd&I?`oo1FG%`Me&+AN-:gd>Y13lA.8ZjiWHe-c,T3I&OeGU=SqRp"2o
%,:!O]cJqd;'@_9`fJ4lSic0A,)-?3%6&T5e.OQVo#g8P.<l^gn+bpiWE#:?#q8E9b:fQR>`A_C;iXb<7*mu90kP+MN;-!`NA8=N"
%1'`S+6qGbcLM%r`d8?+\Qg'nUZ"2\3qO%o!_[`470aaoh_C[Qu3?aR1EZBcY6#FgbWN%b;mr>3P%e+Ht1PRt=<pZca>g%HnNfDKn
%(3gWa2Wk6e2<?lVANYG11ON[B,#L7u&QB0ePY1#WqLUI7'pAbF1;'3_o4f?/<6pk,/.!<,BmQNuD_jIC+\++jU"G2%hguLFdPTU.
%fl0]o7Rq>9CH$6Jcc4@42<'_A-sapa<_+Zu;_iFUOiHol&LEF6%CT:Ol6U0ti6*<75t1(=L-0"fdWqAA)`+]f>%KB;ds4sBW0PF.
%j5CW/=e`?#_=kh2/"LbNOe=#>3Q2'*JVB5!'4^D5`>n,%FBDjcaQA]@_7'L1&s/E14au3X+O#5kqPoB8I^>s$eg$L_]GoeY5aPJ]
%,;poiK+G3\o8B:n0@Hem>ZZP2#4fhq2S$F^MYirWpr4:iS6Q=[p`a`XN42M6UBldl)]>_?o'4&>"_mcpHZIKU6cM]nm\=QAReT_^
%%V?m0'GiilSj,Y3g`SAdA'QnQ>_X<&0p<3VJ5@LE7TAC/S=8EA_M]#'F^"[PC`u-\cR%SVSY(j6OePlhjK+5d2^]lIKf;[q>/^"8
%hj/g\[X)3d4QHS,FGCH21f0+rG7,Uem7c,E^bD:5;"5#]R1GZ?2ac`Cfk)GPR51YA-lt6B%?Tnq/Pt)p4]j*NJqC-k5Ab(('#HU@
%pl7Pj=W-nAF=[fO5UXHU+Qb2\>G-"EF`?L"\%_'ee<Z^aoNl:U05E/jFC`jHrfust5+sg"i=P]<US<7)0.7+D#gZ6'&&4dMCk_fB
%a-2jLl&Y\BZd/KS:jP7p[ND\/5HB&ecIRXn$<_E@-rl-\O,IBum"lCCQGccq(>-cE"dtX?.LU3RYPb_XOl-YSj-,0HgktA5,s?+/
%df976YM2;ipb]c`R<=(jBsegW[np"D!j9@'*DrDll!hp7JnMj`aF;DMI=5Y@XL0#XD5>AOHmeWoI/!\3p5;V7ht>k)%SuDWNThg^
%et(!C5F9"Sm4=d2P/#tQM-<#H;ATB@S_tN#LRo6UduDkrS2bNe`-N;$JdHt!:np<I="MfgT\r?^`*oMI,YbFSU*equjU6gh0aN\b
%[A."M%UN,mnm!koTgS8h.E&cP]KnZCZ<XX]\d&,?Tke\GPKA=gkC2)Er`Dd@RBq_ik4m%Kh3\a@r2`-'a#qb3V@m3WpCmMBKB^?*
%jC`fn]m*pLnSGDnZ/hP8_'EY',g4j3IU"OF40KI!LMh0o%GCChJP!-W,I0>]j!Y;G*S;[2*aAS`^(66j`n--lAO!<K6#'0L8_l^S
%'`2<%#$_[oopV94A'P"s\R0Yf^Wu0;]8u:@KT2%<>gqt/rIrq)m`5#!\GkU1oe;2[OZ)n3R-S^T;D@).AX$.L@!E*)kS,7\_V6N.
%M60mAc,;342/s#&2JVKm6I?>YF:EOPEG+H20<2".46)a!hhbnq!a-2GJC_XjTQ!.W3-4P+ir0eX2;J$@WLt@.]Y<.1J,)t?DJ\)V
%Z^0=$#?s)u_5rW#^h'S/!c?&+"/O>]fXOcp/X?/(-Q%^DQDd8j+P]RYY^k!B/a-g0(0"#YdY!7BTd]+Co$`WER@-h$ln:>B[rd+q
%KDT65B&;^eICF=U/`#$EDEmEHZ=%.$-N[K3M1B%88MD_ah[NKAAE\3s8]lTd0X>pB&>_\CFFsPdE!+WV/ArH&"Pg(+Ju\cZd^R"3
%`F_6#"7Eek6mah(#\NcHXSXeU:Hk+%Np"U#k)B=Q4k/Asp#N$Hq0n+M'0Q?SNJle%gNgKJmCZbuT"0[%J6T`Ri5o-]IU:VcN#(/n
%?,L.Xfq-i:+.TKnmDLo,M)hj&3&QKZm(l#0,l="C#/-Y^CN?;9`ITi>rX;<jV_WLl#^cq3/;SX;ZJX&lrT?(`?Wg7SUJ#Ff79[Ym
%.\.qJqa_hAm)Bh1K(&o[g1(ZXMZPm^Pbij)&).HB+V^AE=pSb+:tK'_?5Io,<q4sM28;&2l,B<:0^!0J`It*3P=.nLcU4SIW/T)=
%=Ni:qen;-??hqD;@GL/WEi)>@:etp%-6s]LJ4lnTDNg4,1+ZoIN8bB$dl<KWI9MP<6S3Te]ck'-bXK40JRH,Y/35url>Hf#+nGlc
%&3XQZ^G!&ee/sP]%4)KW:4SI_Tc1de@gn1],7";k2(eu1`sVtAdh0/:etN`)@#IAX%5l<c"pT*<R*CJ1hi(6JL^XUcf-\m1YiMjg
%[28j2c8k`-c\>GLaBL7SWP^l71&DNk)V3ee'6o/1mDZ-eB4#MY^HZS2;d5d?5PSt\b\"qD6l"cDkTa\E;8d[ThDdF$GN]RJG*LA_
%*/>H4%gMkkilsJmb;9V5qVpg-a=4Lm`GZL9fM6i_;GV<Ne_IZpVt@SDr)O%N%<WRUmQBBH-6jqQd3\B\OM%cUkA1=d!c8oYkqduo
%\oUL6UsU;G*C94?(g[IPj7'cm>5=1OX;41G5c[P<\egU.R8WsWZslF;OD)72&4`G;d%m@oJ'g=%Em4O?7l$9]d*@CP)dG%ZpLKsc
%ZlfD\Z&H*.f,l0O*6HA+Wkgq?4.[$qg:)fmkq<u56"[=,d,+g:L\6-OUhJ[4CgBehIj[Tfc#ilAe9RWA&jN$i9C2rg(j$4T0(T>L
%bKL@EG$$ZU(kA^?Lcr-Tl0C\o2WP9W=J2T$>c>d*UfYG9*SkJ-;coj@;gl=trV')`s8'M0cQ@VQdYi&W4C<`K\NV?T:.&m3Ws%'m
%q6H\W1maPFp]a<Rf]AjPP0*(0kfpdc%:>3s7,%X,J,Shcs$-P&P5N=I2EC#)HN3ZqrqV'DS#,lbPMc\!q52%V1$Dfk&Y]#1S#s(?
%)BD#\+#XGbG^\A-PCQ=nC#<t=R8'ESXDFRWX'^01Rm]cURctM%WUj*HpEh'FKI;*',enYh+<<m#jfh;b\lL[NfT<etXSms&$99.c
%8Z\`X`pLp*W.UE04f=Cp,`9ae(2C/OV,supFEFRO:198G:NbNk).ao0AiDh+kSc;V\])-cP!lsJ9lQIkHlEHKVI:WnEL/$]A9acG
%$s]aQjJ5kp"!-34VGgTmc;T/K#=WZCUA'<"=!&-TboQBFTJ5S5eKm>tYfW5&c4]^q>k31eOcXG^gG"u7g>]j0'Jc.G;-DR=D689S
%eSGj=SMZNZ/5kZ1^@+c_UPsun/GDm0.lPL6rpAV807W_g^AQH046iei0gt*@Y,B.T:m+gW.hXR,X"mF\=&PmJ;Efet!40R;74nHm
%,@-k6KVWY)D+a)FFtH]4lL9M_H(HBHeM=q5F4dJuY*l9'BGdCWV)/k9F-/56@=b.6BHa6OP>3\?FE#Z)B-?9\;gmPY`XgEp0>`A0
%LW4-%<4b^13`ia>Jnt%[^1]E]Wg2"+<);1cMO7,4W30kYVJBO"[@9Ph-Ok2&6LHtdpUs.IJ=_)E,_&Wd[@>+-F(MBr\5pB0Me80O
%=t.]aop#EPLtO&2lDbV/](Vt!]1I*`dSOR!jN^[el)BsR#+Yit7;tsrogQb#<@ao6W1Lk$719\@eNjQtSXOY8H(]eRL,oD[GFn*s
%4t(l1SpEULrh,it2i0i`b#UrMXa\e:bpH;qE]$eG;tc\)As4XCX'1>$g=K*e-IKYD6^`Le4&>NtDiu38VqsASS*HsZ)'PaK]:PJL
%]]B^h+R1)OHXo047W/uS;cQQ0WJ)7*K$7Q'ZC6lW2`Ie=P3D[CiHK&u?-oIMC."PEO?683W2slA0^'Fa."jWAd2Y(tLl,mb/k&a]
%)9D;5;'!3/e+lSMQ4Z/CBrKJlEp*84n)NHq2:`A&iP-\rhiEh:Brp&a1$DfpU(uqt&G:%t.ACIDL.`IC)c%W`;\[cY/`_!U8AB>G
%kQ%HQ:.**nkPMu;b1iu!pRUj[e^eT8(j%?H;%7XML^pu_'N$b__kiNbNMhlk.>mE=(36teUgL`4FF_e9V]k-Ho0)BA)^>d&7P=P2
%c;,.rN=hn)RYFHg21/EF0LAVW\WG;98\^Q'3^@DXdh$Q_q7c;Bj6[T6qiUCR("dB$(j%?H;%e!RLc2g2'N$s"TdZgNj!eM^MP@\h
%Kq)rZmFUb?*M><TBaD9@I,FZnH$_.:^/NljMf!ormHn(nMiY4LS(1tPIe4X,T2_Lhd&t?&_kiqS2*kiXRhf6*A''N2<E^e)_WAbE
%dfo,BX>JEe#eBP;:Kjj]JjJ"u<CrFsWA\J$TPCA_']i<8)9D;5;'!3/e+lSMQ4Z/CBrKJlEp*84n)NF5BX&@NWqYQ62-R*;.0a'N
%>EqV0!3/cISYBks2AG7P2kE?JV^SQ<>KH%5OFHRld/cj,SVE4fchDkVPTQR;hKR*ae7.f?1$DfpW[,^k:i4YK'NI6&TdZhMnJ!`?
%78[@E6;BIioP8Z.%T")/1kaY0^*bM`1;]]"jJjKJr)B/mN)6o\)iA[9Hr\6A6;\c6OOO"s^QoHm5\[1G&9?t0^@*<,#ACC:,NB;L
%Z$*#^F=h?0&nM0D2JIAmWh%R7PuHL`$CRHZW%Mp1-Q>>J[6$e^W"!;V6LHtnpUsLSJ/3Lh.=Y<T*SEMN\!TqH+Xi)nLDigQ99kD8
%B2haBr@O@KD&K`iO'p%#It#!PGoQJq.3fQO<bmc8]<OkWTtG+jNt&'=DI`-T4mN39C<lD)gBBb-`ja=/+L_TX]%)d129m1<89k%p
%'BXU*@ZHbTr:Y;"Dfrt2U>GKOR!p,peLRNmdq2l"91'<L"-uf%GPq)VVP\dGb2*Er3Nl1I;Nh%3Oh6g,?;R(.\P!F*Dp[n'cYjUF
%=&6n7'%h-idCD$VJ,k^!mNFKQ4RJ&AN@pj=dYCKgq"a<7VY9*idbE2)<_HS$\QgAr^qo-KPi<d;U\!mZNYF#8f=)-FX/#6AHGU2P
%UpE$)f,8W9lm"Q4+ea-6<q[-C_Nl;$/dQ2V_8@b\4iq_i/a\/ZoF*RMMYpRNW-M6S_4T*hX.aLEUq8Z5U!t=A(W=d%j/?6VBPlOp
%(`lRkM_qn&UF<RR'Q07Z[DRZ4b7B!2Og_VX9N\Y4]Og=[>,5BB>!/LW#HSVWQZTW&f5M7p0Q9B2kLh$7M.fYn@u5>eRQc%:jT>+-
%d>Pm/P4%TH<P&@I<mN!^cgMMVaJe$Z'[@F:SWgZP*VP"[\6[P5%MN(6Jk)Np**.h_3<5m5+6Kh-:d?#E4.u]4>:A8Zl"Yu;2NWqY
%T6"3WH5s@(W:M(cg<YFa\cC#hLs]&/?.*"!@ampe'Y*.IS1MXX;[1sSPI^5k7a8h1U@c82L"dnZm4]cGk6(":e,Dt?_i25tK[LcT
%.50*Q@bhnj+`*uo];2JJ7aC%I!p(Sk[Q<I^it!P9mT^@dou%jl;4Q61iH@do4!]8bl?):<IZb1H7EQnj.F5-B/WNLRm/kL6s$GXe
%8Tsb3hV])9&afXqp\0M2%XgUUn6Y;:8>MHMq2E>9^9rm9m?4Vq8=L69L.<P_ZMH(R0dnNs2uY(-:gi^Ek/K9GkO3=j6t^-9`uWdt
%,Y=gi2kpe$N-Z$F['IB/&_$F/0@84STl@W>HaARH:k+_Zi@f:;E(]$F%@0gSIJSS?jOk_HQ&J&j&_d^,_?ALNJYsLK>*2:MOs4D'
%P*s,NCDlVl+W#MmK!%Os/(XU!I4\hF6?kcLBF\1e*9K-'(t&n.gtF[@6E@6cW3\(@NWGAs?R&['SZOeRP7o]eAtuDDZLjts8ikWt
%3`L,o]39`UX>X7G&2O-a%Wd%@N@.]7ch8O2l<>Fs9`>&J,s,,N0eC+8<u]D`(cm8mmd,lS;PtgVVu2)3p"iAf!HuW>BFS21*+sJc
%2>2Y1V=)eR7t*:Qq>p=E?!VV%!c<!;%G.rq3JD([g\e`0WAqJ&(sjG47^Kf3fiXolF:LY'1ta)i!X\D1\[$9"d(*"hl%TQHg&JPr
%Yma-qN=2WBR[bP!d-Pu:!`Bt_Xp1]_4D@Q\865Und)H=>:o>Jt:@gV'JlZcGYoafKU0`_[=@PQ8,\bI4BL+^)[%Y]>aXK(Dh&1e9
%kcnaC#T+nWpKPBGg)6RnFW*U71uArk>/9/j4><MW-Zm%*7\H2J.GK@gZnk#fb5@Ko6F5R?&IhW3.@(Q"/JT(<^C/a5Tac,_6LH\f
%,9nC=TmJh:N<i7-]*IPsVB[Ef]-7C3(h">cq&+2[c$hT@7&Xe4R2_51@Ue':8:`ZgR"dX2+a9CDA;#^q!6Opt?"3,K0OQ7C+q5'$
%g@MDYE2q,??F$P/"3i33>&e\##fVQ0=XBumka$^u?q+jai>b%\61W=2A$t%pnS_udg/)E*jGpQP%i\?^dX_c1>f3FcY(XB+JR9&f
%OUKi*\sPB.,hQS[`WZGn(C[g.Xjgm%g9'IgN_^VZ/;2eu[U3*N\UPD?S:`SSKWRY*6q:+X@nLU4DOLnp'Je,5!e#^TVsXjk0=2%o
%e.rl]k<p>Yo57VM%E\5a7iL97qNntqRps$8gm<N#bjXlP0U'bDobkVD*cnK9`\Ce1l7QnnVI@DWR\K\<o\&j_,ijHGWcDc?\H8.(
%StLjXTD7TO9XDRGs6lCGk`8$/9VY[^O2U/H(-%(=]6Nme=bCCT]d''l)cQU[+;84;85B4&EZ[Do@SFqeQiqNmgK!_"22=^IX5u;I
%3e1tc-#L\l=VW0H!pPnWIq5cK'<;PQ0NSaU1EC4g@(]pVV!4a_%g0Q0s1>.j@B5?B"\%^)Wj6`D,oDL,O`DD=X\7+I;*>[t+HVhs
%51M>$]4+n`ZWQN"3A=`"XO0u8h_bX`'I"q'^5GQ0TOiW*LA1h1cHd>P6-N$Q)++c?k*!m`4peRV_kYPK;K0=8j2l9.s7pBq%fu_"
%lKUEPY<bZjHW5)r>'6E4VF"?/dRM^;aGH..aH<($`%PfA2Q8s^6>p_\DcM$^dDdP"Z=5QZ$NeD)8Db/s_l8D/TnuEJr4O)a(5U@\
%lhLTT3<!k,`eHgqF9mU>$4eW\R?ts875G?:c#W>"1)(fILfb"^$3'Y#%+PlKO#-gf;cKq:9A'&G+C7?5T]9u24a;.DFW+plOiCJu
%#49KjM^,LY39$n#N1h>fXSo`KLg%`$@7U^(`plN^BO(bped3YW@fA-Cg^YTi]BniCf-4]*++#>[W;Ja2&f!nP/]PZ?U-ZbelLI)1
%.$5)c;6=uR'QlV6#U*ac*?M-R`[jO0*<X3S9i"^>`Wr@)#!B*#1,M/jU6Q8MRYTIVRAY.@dnUci*NrS8g>t&LLjItC^qkN0J/*nO
%cmf==mM)Q`"kIJ39I`'(dt@ltb6=1ug,pTt_8-D;&UD#EHlZj6M`?Ua0Ke>;Y[F^@=MkF^kAbrhbeK)_eSlNo*hG$7$'/@K=CcDi
%aH]Ql;2'!1pHusNKdPX9gQMsWUO%00]F)K*8CI/"k/`fZ[E%:2-MdY_pgM--2-(>af@M^T%D@pd_@13*e0#\kT7Oq#-lRMKF[V,t
%LW4u04Ml?^K*T[u:f@12T&1LY&!kI,_h5L`r`;5Fko0`#?%uV.5j7NZ^98_Q#=;OO#k"QY8-7,]V%:Hi\-h>O:<ISNik1=o(@k1[
%HS=sII2sc5EUD/2AgIQU=/CrnM6FDmR2Em$(?-0+%9';Z39r\qH.4hkpFG&KSWT/@CJL(?A*+p<2RWjlWJQ)Fbc<R]bdSe`Z-:24
%.\5b4&W'ErZ7K=,R%#?a2:AQ1)`lD2Iu2RJ&45CAQ8)n'Ut>/%_M(Vj!XL:^Z[P2p8\R!cMLJCGQnGPY=)d5!N7nj#&s"KR\aLIZ
%G4[NQe>jReNuA6oXUQNYCn/r_hj/m"J+S9DI6'<!X_1o#S>\M<;?H,=W$EAV:CP]ik,LqU=Ti\uZ&1\5Qp]!*1,-b6L?L\8r%WW2
%/LoV-d1V<ZjJf$`dt+.21R3"r(D>O*V$(\)n506@PR:-$?`G@R%r3!;3-Zq5[g=>=D@Y8+N006>rs:T#@%hcq$B*m+r&,5`\QPCK
%k[euV_&5S7rsK`7gh?J2i+2C"l+aL(6>m)*%qH/g:ndBUVbKbNK%Y'].?gP:M"Z)UpCh'S06-+pLGR7a19J.3L3gLh2V8T`BHFO:
%!iJf6@LMM0XggQDSks47:Nk[]H=A_jc7-X2'k;i/6XMrVIW<LiCiQ5F?%ap%JBOpTkVL9/i)G8*<Y:K,m5Ch6-V<:V-R^2&ORRgj
%ZDbU9XQZ13A,*GZp)jJSLLh\i#ZU;)WX1`E,jHN=Fg-`k5!$5g'bJBghS9Id_9,lr$R0T$@__fNarL:Hi)QE1?K//lPA21.BF.-8
%7GLW$^S?\'!sulPas"8TXMKqUf?QtU#>qQ.T=BB`HpZ=#FjAZg!7kc3=U@&d8[Jm1_p=JBK'p1O.<1Pr=+ET2TJMLm=[FqH(@aaX
%fb[2o2r:GAhP4nY8$SFYR#td"jC6+ign;aX?i59l:[mhONMW])2ZIOKQ3,?I+q2j:LZu%VdS^IJ?l1/#LNWSQd8W)NJ&b3&q81K\
%54IS`pd+XrcpFN<>ag)j'YkY7SIh3C4$*-,+@p0c\8n9mB!-(Q.$_g3,>"_C5cpA%;2-hT@QiZdn2$nX2$hWs8U,OB+pN#;+UCO`
%L``Tii<p0d&[rO/h+mP]T?9GDBTT*baikpf,"tfJYl.*A`)uiKQ<"gLL(]#HkJY>Xq:GQcl"q]'a8S^>eDQJ@^TKiH.t/[bfAQMp
%>`&*6=J2N8>VI>-c:9K`;k>Y!ncf84)G^5)=J2ObRa_j$:t'cDdHLC031C.'Y+>.DCTm8*h=0\FpcZM(GqU:#;bB$cBrAiIHt1h8
%[i*II&,j5mJ^WdT;T[;FEO?8J7/-EScbA!OH`oL#E:H%pP]8qXrnmbO+9292YQ+1Y"7MMi$SVM8omoVbQ\S;q9b4m<N?s&:b[5kX
%]kUZ!Xc2?tLYXI.nQfe`bD,Z['m4rMiUs98>KM:Xk?t*'iON-7Dg9R$i*iUH!F`(rBqBCAWAe2::mieiLeeZnd1:S<W%dGOK<CK`
%E]V.O1nXmrN?=Tsp0IN)Af3[+RI=jaZ'&?%bpl!YB./$2V=8E*""4EX!`3["oXJf-Zlu_X@Z1j:*Xl+l,Y's7&k!omr9470n]OfX
%I*>tJUYdD*Ae?`V6r*4XbH*u+.3ho=BVMMnS!lG^a80lBE3!U7aMkbZCF%X/R;+A*`")P@3>pm1d_9X^[epPr(>cWFYIX.(7,$hX
%^>Vpba#BQaM%@,[o/u;Hlh<(Q`X)H\).G(3PQds3*im14Y2FD]n0Wlg=D<@.ake>tcR$sc=Q%sRX71=ip(L!(./&js4h<6kgA!Ia
%3B,gZ!ZU/u*QME)UB2tF_-*.t-HbG6nW+%'KRif)[b:e6XdtRg@DO3\e@AHF42;aQ':tF=MgSGk-Ia9K"DCAgG8Z"E,2Q(cLJ8IZ
%K#9=9i9R2[-SZSn)WFs!1aDV@8r/Ea*\0YB&EZo0W@[0%]/Ic6O@3=CFUH5%as"FW.F[r9,dYZ#*chop=P/X-a$#KLh>-&`FuJ2G
%g<V:tZ?'IRG)b^t8Gf;#Bi._Z4jSaf,LR?PZ9\Sj"0NCuc['h12B:A;*JaKQ;^:)$EGB+\HLtp``UO:2/A.JJ:oE^S7/&=_IP.$(
%-/[ZeFdHh21@9P9Z$0l,ffAfUA6O.EL5/Es;n*@!@.q?T*`?56n0a\,,@">C%ugA%2H>?lK7c]^4>8kn_NiQ[iV&VDT5F_(__Ogu
%3t$I88qqgZ]Adr+Q%X5b.)V#GmQq)!nCrK2((`PRI?h.K<d(7]X\Pp3KR3\=\m2"7-1_u4miMeq".VJ@6KX(8q7"`\B+,'[M"i+_
%[DN;-/MS+D6^T('9I0<j5eNJ>KMG5,n3FPBj'AV^ZpJWr#aKSjIW,&2$ahX7iW#uGD+)BqpmbmdMd-eV=SE*DK!.EVJ^/h!2_n.I
%Rcn:b;gS-'mag&!48:Xl[l@Y,C`Q'>;WIC330Lt5[%C!eL$pB%Ok`CZ]1BQ+EekIqImr&dkoq]a>7h7^n`3Nc`\CPWALhf&7.Ykb
%M\oEpL!eo4WZ'g'mDFJ&#]HJ$>t12MlUtFRS::fq*XE&=e*hf`I_Z#R3CXBQ%>\H^*:Meje13j-i1(2$gTPW1(XHM'%W9m.L^6`6
%TEW81YTj9k8/-/4&0BC.acD;U^bg,"<n`AZImbY^J$H1#64\X&)+*gK*2"1,%:LJ$[)/")M2NHDTRBS`Ht-73kLT1D'PQ1+k,jUY
%T1tu,RG@QF"PT31O8kk<Mr<N3CmA?Pd'B-jl?pA^6m(nqmg<g%IR3<r5TC.>W@j/-PL2BY`_Fo6D.Yj&$2'fOBf[<*aPJ5s:F4E.
%QB7j$mW`];BTL1ROs.WeoApVP:H7H4O2)PAK(X!Ah'(.+Qdl?b4>/p!6DJ$.1*F";`_M]]3[@RWOS>@j>l"lJ1_SCDh[@;F8b.il
%ndQNicpXT/^u"""^^/_T,@#:GT""dNfE4JYiNlnC6&^0s#R=)3:AGP]f8/p%"Kb2H%0A:=,A@f63'`M>::f0SV]I"5?RI3n5R;HW
%iB,<29$#6Xfc#E&plmMo@DN,j>"!8k1D`935l6aS_k+KB5Gg\-4C6l(<oPaYIO9WsiM?<#7f8nHG!O)l-.SIp.AWRQ)*)CS4$):L
%N!dWp4n;F'OTki@$KRLmGoCR?\lQ0aSN`;uh%!2%mh5#o:=L@`U.%uMriGMI0$sT#"kqNg#sdJ(Wm36DrWKnTnQm(n1*Y-NUbHYm
%*a+pll1fjK9E%B2-0-DQE0Iu[fN:m(^S>Gaj.s$KqoG0!qbFar*kg1uGbY);U\1B'R!GK/q`G*qAuE?7m0?fnMWd3pR.nMhc!@^I
%aL_#,__T&+d!rS%5;LIfjJ-Ojqk5mVOgZfc2Iq*s\Oa'lB!.h^j=\gS,9j'GeIb2?A7UO!pPs:r+cVGQq7$3Z'POFCK_>QAU=ie5
%2%*H;juNP[\D.4G$W,;<$ipGF`A=10]2i"#!!FmL)=0mb)EI#)*L@%8i1)[f'D/aMSBSLpn<W30TZOdh$+i/e:-_^fSm3OI+Vdop
%Es%k/*[ZSoAA`sS!Cql@g*q*?Ua)MHBdP7LK11su?^6jW!]BtGk9QkAKLg`I'/>A&,KK3X0#8`a>92MP)F*mpLK[:A08IcG@0@eK
%b5$SC@r+k<rV4P%5aqG;Al9^M"@2shdc&5tQtlI_A`Vi=2S-(J*\TCZ_][VF8E1ppc9b0#medHg9e*ds_MDE%n^s?Ud<?9L_[d)@
%r`\>5SYbog::#?f@uP`F<+L8@qBFuACt!eO<A#N.'K4C7HloM=)6]N[6KHa)e=jpSi^=^+rq1CpDYM(0P)tOAcZjJ*5)BtF0UDqG
%P.-*EaX'?'T72KU6kCH#1nW6&d*o`ho-`_s"BQNoCsY[!@cXq"Ys=l_j4X%$Q]W5He2e"K70K/oqo7EM#Z!cB<hq?`F(n*Cf0N4F
%2G-Do3^4j1X?B:4eE&_R/Mf/7"g1"nNZ"9Q71LklS"-No-LBdVI$j*6aDQkL<X$U@lhh=9ELdK=5/b>Dn0'!^-W5>hf(ebrTK:Ll
%nP":S=V'a:>;99SF*(?2RhH%ckF&aL1tahM,uW>=?SD+T$[k3Ad>!T.:l[6/6H`l+0O7+l<^Da-NZ`smH#4ekWo?QSdn1(@Y'#ti
%R81-%pMn7YFu]h5F")*d:u]gVkX^A_@V;AXE/a1[Zu6rtHGR7EU'Ld&!?:U^+gYg?`rDb%Y&8>(-/MWCDeup!.RM=of(4"@QCYb-
%Ef@]^OVTTET/Pl1AXT\aa*\>pObT#QE6ujp>oYgK>oeB0*Z9%M]E5)Yd0d]UgSY9H_SUn#Eb-$qO0#RqGe$@BSN@jpaLF^$ag3j0
%Uk+FViHdg3;*M0HgmAbQ('XGlof^:YT]4ph&Q!eTZTiJua74GdDp1sei.Uh]-`.[lUUr@16Sc]'j6eK)q?&SP`$%f2O*:g[$PY!o
%F)nYYfPj8aN8p`WA*^H[N%Z`OTId)^BfW0?qCN_]JJ3#I?S-RU89UL?i)4*Uk:ucdmXADZj-O^f*,cskN_3%WNNA_MIM=q:,QTFU
%0\*Yo,Eu!Mf`JKQS>uDZ*VGp*&1O.E@-?n6aF.@!BfQ&?Wl6F,RIQB$PfnKCVB.`/3KLe8<,?a'^D8ZbSYpLG5G=H*ifZ8WZudo;
%s'3QXR`^!daj\H=B5tE/<^^Q>N*$,9LVFqh"u!#<P9hEQi$%+e59QqE6pN?,'ZG<!32AP`W+i8!:m)$P]mnkQ#RO?G.75[Y,^-/i
%DS7]^J$&n(VE,kHH(OokaqX8Hlpcs<@Tl$)m7dQDk[`d9H30-D3CN+4gR9gDabg,14J`XJ+[b7:Pr!AG,2l?G<J=9^cLJ64oTW04
%K^VDOeAArf@pSSKm"9411Y>MhRZkg<q`Th2qAhpYcK,\:0X7ipTB$;u_0#JVefl)s@7JH#J7ND:SE@^jLX;O#(9>5E[3?Nc[>b5c
%a?^0;4W/&GC?SCoY:2RS@$rU0Ep&uB\caq"Sm`u"+]bGP;4nFjg7>\pcslTN1KB.\b'5t_CCuu+A?fDkf=@DY<K(=6*o;=d%IBB7
%"?dE4E<YJ@@ZiIV.Io[R\mtXYl;/H8k3pZpk%J/Vbe."#'T`gGll!"^gH$D&f-t=Y!])63A0-"g#srO`G/0L$S:B;1bjI0TO"?6?
%&fdO@,DTs.]'m._rH:.W-Hu'LfuUZ5i(8K;kDW)9VC.;H5quAnf+`*-Gg4h3,ht3!<Oi@F0t4ubeI]:+O`9-*%>2n9a!4K,IHK8b
%Q5+sEjKZ.1jmZk@aD]Z\mkt^;ZY"+/_T3n$'M8Ze1(2;V2fn9GN'(`qq-#>nY#9t_<N7`X+Zed8j#kM;o;-H$0XF:t2HD8#(1h9=
%,J8)sbD]Q:1suRY[OkF/pLU?YdSZ%D00MVLc,5()bB.46ANF7k.)bU[_a]1m<:)6p85C#UQDq[s10&SDf(>aH2!`XF&@ta/r2I)<
%K`_\>$Mm1*gK1Djqasjj<Wt$aKtjXj*a,HU3Ngj<he_:ccLVGXf)rlH)D_3g^-3J0.I[rjdLZHrbf>f'9l[`=/1cg)9:d5E6s:-9
%$%G"PUMe<@-_aF7)3TK7<YPAA9gIX7H/Kt:D!R5CF>b0<m"h>QKIKc2DrEQPm700W_:*>%#=%cRk?4/<b;YuY[9cm_jQK+Df&uT#
%Bs)d3_0OV:jWjR!r%OJ0pZV#9;aN39qm!gcm_7^6HId$$m2gCV.4@->)50EX9B(V9jQ]8F)@cU$j]k]!K7Se`W^EchjoZ"]MBQ&c
%>Ll2r;$em%FkU*i[*.*n83Nj9C&2\l5qVH(S\P;nAs<maAUb6VAEG).g5j)4OOdu+iAH1a*S.c9:WekG:Oh%0s&`+olW*-GbC:^2
%T)AT^S@@7n4RC7uK&7+9$ieKgYE5CDhtc8_rPW3<`:`\K]"tjLMEMH?"<0QLV"TFGi;Fc7fGqd8"`j`07Hi.SO^l_Vj$?Ef@SSNr
%%rs]F\Tm$g=2sKJq0I/s*=d+2]]q4&r>9>\l#;`f$1%o-RB,uPs0MGX]p8#q\`c.@rs''U#%#[Na"V6"huX9F!J95T_qaMc)K=d@
%8U#^Vmk5bT,,t<BhJH?I[I)[`[(W*[U-u[=78Xb5k2\M"G=DMa'KN0/iWA>HaR>#a;^h3@DF/IaF>tYjaUtl;K-P!Ef'1WAo'#%g
%EP($=P>FCBEBCcWL5b1d9ds4H$nuR6#IUel'dN59MGX`#Pp/@/C^o[fN*.\oS`%>dkt,LK`k;;`cBsqefR=I@4q"7EmIRqGk3$g*
%37sl=^A2ek`s@'siYQF5pe#^KmX<+e[F1*'R"V8f[JPRkTC<U>O0aE0P`^?0S.5<C+/>42iW\,>Gk69i_6kA;nW:W(MOt=LUD4;G
%b@\ZXN1B)'=1.$pp&OWpXn\M;M+g:t1dV62gA[9RnNZ*Bm0>K-<=O+^JI1;6`ts-MisW;!R#TdhG7;=?.38(@Y(dOAs)`iuNghuI
%mMMkHA^f\oNcS.6WYUnL2N3E5d,U%8K-"*#[3qN/j.+u>0qV1$<to"klf:$L7=P!N]U'iBbAE"Cd_apZa^`8Q.=L`eE4D-=q-etE
%&3o'+-?q.&7q4nGP;h-=*e6pCU$YPd/K*;4dU:?_ekik5A8:1<'10!(`$:SMpP"V$)DY-+WXL>u1[d+.)c'rn1:eQ>`PB>WKL6cf
%m1$,;j,Vp?LKOoh'FoK5Hmp3[k#jE#.1."((.H->oY&M+%TAiH4%f%eq<RdP5<M+-ks,4F]A6#X1FL#F`p=_V5n@\:[Il.b(SAS3
%L/uB5hO#?Trp)-N.W*aX#HLD/d8SK_"cmo)m6CU7huE0fJ$^JNJY-dPI?r_SrV>@Mld(mVpEn1Ga=;.,,mKY]cD:]!jG>;'IOU'Q
%hdn.cnKqg_M=B;>&4=F<cmW^r\<&PAYWCZp7YdrpPoZ]Gk58]s9gg%b4djhR#u.u=c+=8k4@X%$'inuV/5&)14D!>-eP,83`d!^d
%]Q\>ODbX0H=^r78JZR'$C)4>+;aJd52jr&jR\mr]OutQ"Z"8Z3!OI.1BRY)l.C>s^3f8ljZG&ssk(6;7MAt)c%K_iV2Vd[=;FYoE
%5KKL,<b)n&$X?6&+DC55bfDb<bJfGR4L+ji"Xa,_lWmnIFb-5D?2##Of)mQ3]]+'Rg1@.El9c_nK?W8q4l4M'ie?GqIMY>%XMbBZ
%f!j")1!m'^J^I>`VS\=U4>T03k+@.t2uV]Rs4>0'r,4b9gS80Nj,WqS%.<*&q`&Z=l*;PULYiW:$Tf>\9iF(,.S59;h@IZb`fKWD
%Fpr6o=m5`+Hsqe?YVoL9PiS8,o.bKZ'a"gOHG3?ZodIDrMB#eo90(aqGui-aMSb+#7F<e=I;a2$_pkR+N`%u\riqaU3uilk`1,SJ
%mAl8`S'W!SQFNM><>=L>]#fo&=\VOLgDVeGbR0?HAr-me,7:LC9k\X9g/?U$MJ(4![a;\)1&*@Xhg5dgKZ:g5`:\Y[U7c/H9ks=Q
%W_MSsCW'$l.l2dG"YTFH&@CatAos97WGnUXc]!?iR<aQtn6KY?o,,,sN2!Vlj`mb&TEik=@._ZXA4t4V7KsU6,,;AFi'L<F6$qL"
%7`K.G/oHp3M=$?U0^irh^'i0Z*eQD.0sE3J4^b94kZN"k)*PDHnQMhp,D6,$M%S7=DkX(<TNuI;USBY?Kc;=`B)JhQK2WrA\b3ip
%3#,2rR-ZOe'c]g$Fq>C)56fl>lYL?-)Jo,]++mKXdPn>JV^-=R@I*:l0%bU]2GFWJ6Lr@tknq(ZMLgHb3F<\*jX@^dauZo`QKr@&
%k?0N$.0`f_(.H->oY&M+%TAi8G(ekCo8g"ihu4HT!]F8t/)+u*#4Flg?s2K0^,2Rg:85AEaI1Se>\@7kL5K--0sE9M+_a>QFhS0A
%%T?RMG(ekCo8bI[Dgr20$dJDeK6O"DYUjcS?lDn(Zfj#!EbmU-fBLkDTg2Xj'\*@>oMcC/lV1u5PbtF#,:(ToIr(Nuqd],$B"mjR
%]Sh`CZG+r\dR\p/7!F3E1TQeCFge\5W0e;;"7$")Ot$akq^+*S:=E+N&V;C=5ISA?rA"("0].3chBg1WZG>RPB`p`IU:\XjZ.4``
%4Pa0a'Z`n*U:S'mSr/)B]a9XXdPOsAK]JQk^Np;XmVIRP+-+0."<Yd0)k?*tmK+b"e:Zu%%`_u+<6hpEdU9EU__J[s95=Bb6qPsY
%BeAb.n:_mC_:mBm,UC^KT9$hCX;G&Ad.=*>W^kHR<ohVB>0>OLbd1c%;@KWH/;f0Zl$Jm5*Mt_Plj1Qdk9!p]^;D]#`d=&aZ@17X
%GS:ttb7`FuV2Bkp6oUO]1TP4=B3QU8MHQW-YV'o=BgcBP^'Tc/;d1/`K]8EkO"E3WE"'Ggc1`932k_t1/9*g\W[R(6FH[V+[VA`$
%h&8!^aNBI9]"j#k$A*H7ac)8.1f\FHjI,P!/Mlj7%)0p/G92AqO\o*/[i@&$$M5IP$&kHYNGQ_if#XLn<b)W?$X?6&+DC55bfDb<
%9Ar>GT%O%p!qQoBi4HdPmkK'N(^%q_f)qlWJt>CiRF,NF&[->g2*r^QPo)r4I1&1Q"7:CJ(`fGeWn[m%1ZRY.n>k%:XMb@3$qV/M
%qRRtj=QjltK1Bd;=mA7#gd[RG:KKKB:A3AU/B.ObW#OLnB7+q^<Rte2[/Q6L#ktX@T0+J&43Kad)a7k/]G9QUi40&+2"5XC'C+l$
%=h7"X49HNH5Fq?P`*7`bZ[PO67AmOihDipN?$h!;m6sK;9[>)IfsKA4q>9U&/+cKYV&Yb%aHr?24t84>2_CjoSq6@Ql`Rngb3MtV
%0=!udY.ne6s(LMZ*2sZ*n$smNLlu\dP1u7g_OHih,1"&Kj`OX2GNJLsPo!RI[JZ:YnY;@Np6W?n=C:4pPHVM=FdKt7OqJ\BdC\PP
%CTb;3qUCra_,^JNhV2C-F-U_//VTtbb&lES3?2%c_OH]d,1"&Kj`OX2GNJLsPnubf>'cUKr^SE@RP)=pPMK6$9g,>Jnks_];G-!f
%po_9tb3Q4C5.0r2nIg3HjYA>N<dD62^\c>i19_uW^H?aJ0$1RbIJ<r>L9pW2rb--e=RG*o\V6>SQ,<20g$=UV-eq!o.NPRdS;/Id
%fVuJd00KLmFDEAn%/QLTkLWop='n?RL!UnSU@bL.'bM1Hihb`l6UD,t)dG@TSsZ%_^>>M2*B!\aUPV8gO$9=7!;`:$$8+@4-:Bq%
%#9:S2c-NT&BUZZ0Vs/Hup#:UG'q21Vd>qJ7Z2pf]Dh+OJp%.JYP1!:B1cM#<>e3_3YBm1uoD8^p/4Ul<.i/@OU9Q)BE4nipF;T!d
%s+p$$eT;Wh/Yts*R\`HKHMgRMJbl;JXuFHpJ)u:63ffi/%mTs&5V2k(n(akG[4'KDL0H>I^X0LI,&B=$0O1&_e4XW+@g[0-q[dIE
%/\.V'7ZW<]-TJJ8%?]sNd\]g,&an^YU=5@Y:0g,hQVZ^0h/o>s4]=S^V;[UEOm?l<dVHi5kk"S$^WP%VJ=363Bt1!5lB1]G0AdG5
%HSdR^[n3&a,N@Hk`Fl]cWcZC+]Ek[,N*0?F8'T:74JmN=\_a28]r$p%jY8`n`De.<UDM!CE);*Wak,\G/JndnPfWMUD:<:"&cY0U
%<@KXpY6Ap+"I!*/\<^j')=HH!N,$R/jEd<(kquMkq8D<PQsuCgA#c2SLhs9E8bhT\ZnV#=id.*"l-jeM013a7oK'ai,g\iMDco^G
%TfX!0HA5QdKZNgED<[=oJs\9aMVTS["\c-ni05M%imTIL4[S/SYUc$\oep[9CM&>lBQP:d/!(?^k$B!+js3k]*Kdk\,FZ0h7H/W_
%ZKX0BKW443g-aCSUIT!=kd9UIg4an]Ld=)<&Z1*l\_a3#HM%P>I>m%1ifK]>WZWHb&FGR]/VQgX9B'3^-eMpe'-c&_[&)A>'31.-
%Mpu8J/*N;WL:%hkC%64\;($.Ph1A#&1p4;ZY>/jNe[uqpmR[--b52;Nlp3h0P[b(fVu#7g^nnGNLg4lI*kcm.pIO"P4,0m`U><@[
%&n?NMQ39qJG]_qRY!!CX1(Sn#*m+=^aEWD*a1$p;?Yp"hk*TSR[@l(5HF>\-1'r8cNM!dUEj/K:9@7i3d!GZ-_m9e"&!l"%fCa*)
%ilKt^HeG8=P<%3'0JegF-&7Up@LcrmgC0H]P;,F>,-/V@Il\KY]PgeJ[#;I3Cl\tWGW3ko5>#X&nA+d._5!YEp2<`dHd-.!p9aG-
%d'b$G6AMbJ%G+Z=j91q-m[p*u/s>uHrZ?2)Gq$l/]:a!FCr=AKTlsi;3!nHZ(8ZHXl]0D&+Y1`2"&:eN=#V96CnD!fF>7H#.Q0BG
%kJFi[nZaB%);`2[%U8*0g*acp>g+%*8$7p%J[`[q:?k"`JQ,BY3SEX&OZ&F\pfSgSCnD3l<0VnVWS$QbT8jIs2seB'#$E&XcZ%Uh
%qni%5Yt]ooV0HPK1aA*[']NOj8F/m\CcX<o_a)P;TEo_.&^s_31aEg*SKDGH,+Wc-AqX30BKb^q:[Bb[VQ''['T\3FAcu,ia[A26
%#`;+Jk-l5mUms,"4/R]PB#HM@2@W6sB'4pel*-O5og't#$Z4@(l[3,r#r,/.*?fZ<q`#[[N]Z&;(.e(B;V!dhM0K#mo;4eVgS_qI
%>s);RMN,@Efn`2Ai3qHp0Ug58pWaS`:PWd:lmTgTgM8hO>Sus0HSRe;r;(_i)]`_r-cW(!8nH%0VfQlG:P!so>r('RUlaf]SG&7.
%M:D\s`Fe;nf*WmM>r[gr:lIAR`4bVrNF2!*[AgI,'Mk7&3Is`mgS]Hp$nNB[Zo($g),<gIRII+7JbT_PUh,9ZWU1B/B'7+J_LYT!
%7SVc`:<YE"WNr95:RmJ+q9(>b36Y2YQ5i,a_K&FL%d"XX)+N*GZ-eugdCIPd5t(tgA"Lss);Y]9NA(lc^6';uB_M\abOQ/HW&(^l
%5f!+p`!Nf3i49u#nLLn0rpF]^ahcsXro"`5.9pG#MenmdW;2U;XO-uXQdWlHE/m\CNg):>M4+t@<>p4282Kpn4=c=T!/G&>Lu$1r
%GnAlQ%%XbHi"mS"l8EM>fVh`=WW^&]f"SQf@=jnJjHlt`k<JVe(;,M.>"[*R'j5jbK,='VT#^>;]VKu_R(i_VM0P`%]8`40&g&,'
%)YPHS*!8oG4[bI<9IrL,?74Ernm"kn:G6g5AE)RT]?eiL%,]&tJWD_dj!(8W<[bMpN:WoFCh^.Z`-9H.">^Y)nT0)R&H_k?9Rt@[
%l$Xo-*V+5Q]B;J-)`-$n]V^n2+=.\qdWT40HR288d%1nU?ClE:kFcYtPli`u/USE:!b?G2+-!bY"#K++4O;7F%[FSNj^V9"JDbZb
%5=Ac.!UqU/#::(J_KaX93YVTQfZ$B)I(lD=+'=1e>3="3#?N*K]t6ZfeK4K,A3Qp1=;#Nrcp8Bed#,n^ATOVlp3;K'YBqcURp4(C
%ZU=a>2mQ`:FF3pS6`si<q"R!+&"1pDX>#gqYUZmH4U2>>XB7Qr^]0"GlbA/F[(=o7Q.k-qrSN&!ns?QG+o!M=&^OAh(-&q1Q8#P-
%dKGZep=*_p["SA\a^f(b3C@,(3scITmlIZ5KEP^OO>KkS941MV5uU8?aL$!,`K<b;(U/TM1gLMKgnc.62CZ`bI33_o8oTkLpl!eW
%L+=C-Z-fYUHj'E]'9>-2g\$\I",i_#^_G),^@>G@0-jj\1Gf=HF7=<ejpm"Th8c,L.3>'5eqU<0>X5E!,pCH7OjYkh&931+2%gNT
%7++*@K2I6+j#'.:&KuYN.NUMm?fpcW1,?8"@]FD$1)*q7\iJ!_WjF$-D29$MOe6)cA$OLLl_38V7_J&AOd+h3AeXmVmMer7^^UG_
%!A:(=c+ZqOQ?ELLJ$^?HYXCQt,*OUAi!_E-VNRTAnq8Ig1+f-6hkBkF)'I,12+DoS-%]d#%Qr-71B`"MG=s"$PGsAI<Y#Ua4QhK\
%YRYRll%"`I7uY[R[PGI'9p>)KKbS<51Rls1_<aO]qGAL'aQjekV(6ZQK$\\0Xg%`>Y!H2gYFX5H"G3=NE.I<MKAAhR"Q%OE,M?*(
%e+@3LFHIi9N%Iq$)0=fq81.F=Z+WI8Sb=Q'($Q77dH2=8#l02]kT*[X41$K=Ije.!gH7U#r*)3H![>0$%68orAW?4K(s2R.%_;2h
%RHWEj5/iB7\"-:OYrZR[i'8)M*-aM9.`q[f'27K2I2Fseg<!_j_iXB#IipBb/LDH48Jm6(dH\U!#LJ!<Tja/%c"^jd-*._aNg58N
%5q=?,P'm0adcr.Xq6]H4mr-kV1+`8/]5.D3[f"'27PqoIC#c,,,>KL($+grni]E[GJ/k3;ceQ8!C`X3G4sKZ4p4]hh'GNah`G/i6
%@cJ*S_jJGL7.P<T%^4j.:o9=T)6Xte-`AfQQTef#E%f<3I5psB4m^e[q50kGmQ6H$8%@Kf1'sK^*'OpBA6G_]dM:OFH6fe8NGf60
%i.mqW@?1,-N#=AR'?V[X=_R'KcmuI2#gu&;%_]^JCZl/[4K<6*Ns(k[a9MeB_qgBiBICIN)YEe!2=)9rSW"U_/$i[\838fd**`l7
%('Mj*SqZ<s2q\/'.5.o&]j$rbb_YJ78*GuMf@7(Qf#sC:I-b^6H,'nK3nST=PZUEJMNg1T056XD*>b$Hj!6`>&TO9tmKA>/K^^71
%_f]c]LlHpKY'`<fOr*W()2o'LFMo109FK<u8LAYRoe[Ql=emJ=1^#<7_&/W`^_n$Y+tl1YQ#L)t_9hs`JsF9JQ*Y[g4(a.u2+V#l
%L3$$7Rt\jBYF!la:i-/R!oqc*cJ+IG_IR>u>&<Lpd]/?!I9*<4[Qt)I25bO%R-Df%Ys(V51=g`L&%<hUMn'AY2,?i'N^/H#Y]'+F
%WfLHZ*X4tXc1a'BKO_+HPAfR[6l__1.gHar$QC5?7]TFBNQDR=A2;h$d_?tFmF+JFEls?<aRdQ`"iM3"RMnE'EXncpJ8!,qCG\_C
%#>l#=S'NenqS"X(J^sfC<[<qr-`b#obsrdNWW<frZZrTugb7(mI*/8[f+87IND'jNFO2AR(QL=PXqEAoLT;SQa(bIJZr_bS#WHkm
%c2CXrqlXq@88e'99]#0p<rD%38,'J;>iC*'0+)[s]Dq?7s3K/$rd<elY=H+:p4j:?qZ$Pes8)S1:To[q-/6$t'g@rnjcnfkAKe4[
%)+sg-`oWs\Nh4F5[)KSiAlt3\M2\8&*;*rR?!kds2[-h-@USV.-=EsVMDE6n5(Jt&]YY..n"3itm'8TmHFV&5nAB2f9#eOE*CK&s
%0VZ;V<iQ9Z-.<0(Q44CMU+9BIA?sP`)IDSGA?VUjpUt'15Al7J%=nJ3+oO:IVT*5jRju&m)Un_,Km+'oIuU%83#VIW]h/W.2"BBH
%qcP'W6j=f\[c\7q3c*%L;mkO!R)Zcid#_]#,&uk'H1M;CK6]s`.OiRa4$)U[6mmt6^l3@dTMkqfj8lE9Vhmi1;ZP&JC1&I-56IkS
%R1iDt:p1"EC,Tp>C`9eb_!+"n3(MV?q"K`UYccFq>[DsEQl-)BSHD;?]6tJ7\KfnUe$10EQc)?'CnW)Jh[LNme:#9j2#;@Y%lYj*
%DUJHr(+mC$o3]TCGdh@9dhZf^j7^ZfE;_JKf!@gl*K2-;3'r`eJgo[4fp?_No+IW^SJ(>t4hL4(Xm%'8VVQMYoJ]9T0#WSfl/#.g
%T?O+M,:ZsYh+cV88UE.*gEe%UpHt@U\4%fbCNeJoQ>sYpN(mESE6c?m\P,g)q\CT""(TW=fp[\9Qj\7+nU([nnL[cNo@foPmg`Ep
%AFN&JJ=e/,i'R]P@V7&P2<6gP0U<:Za&$n/3$P7UD-BF6F7L;T;%W.MCg$s7e.H]:[Pf)aNGj>eA!QjM#sVY1AM;n,jUm0^p2Iti
%9"oU;#i"oE]3'm.:.Di7_45A0n!LF@hLqDrnZs(?0=+LD7]fPXWSoE"X;,b7C>!cXFpIq>(ptc)csGqM(e3m'd.In=<B0Gk6uB>?
%dl(H(7T/p8?h/HRreM\aJ="$B20><o>)0^l6uh/e0o,"i4]8st[-h(Xk%D&7;\.oWo5;t4/_XLR+W/DCQY#M'(@;VdB_`s?kJ1Db
%>f^:&dMsFHD7W\d6.HuGS<7O;H@2*(<f$XlbC!'X!/O$N[-G/s)?qdf%1r@Q$`Q;H-Uj)8P7\3e+#kF&NWWkWSD+5N5:@)8o/&U9
%7+&P)!bKK0Sb=t$_'-N%Z*O9A*%#pP]lCq%3s;MF&U9cV1[nu0_3kBF".<u^2mJBI8W<h=ZWfWXcoFL^]bp:u`XI;3>P?)sB]F0K
%q4,GU=%KL?)F\j[p-X1??Y3l!Y;+dohWU;ma:J$l\j2-i]XYXcSF9V,,>1BE%mA'_GOrlns1ICUp^=(d2!n>!>kq3dW3R2:g\+&/
%DU/5lk%q#A(B)5[mr$F"IWH:Pdflqm5*@qlE2SBP&R8nZk%W,Xc@hV.Q+QuO55D>AGXn$'D\)HV$J&KNDLG957*p/s6PcK8S'3P7
%$de^K#@8%^0^eO`2H[UW)]fr;:*Y36;Wpru+UgU[X@,<^7]:>QpimZWncd-=QGK-]iYJ`UI,HPY*RF%ZK2]D+3Ioc>bE)9&WSeb/
%S?G;?/(hDR#j=WP':FjO"C$/^Uj[3MB.T+Bgs[Nt(5qnSSUJ1;Mau<IXTm),T`(enm18a4igC-Oo6hm:(4i_FZ'+AXO;a"jhusnQ
%-RNB9)d1uVf1h=9^Ih$kd3jh+W.kF&GgVqCK\LBDn)iu_'lT0Hnq!Vr<d/b/p1H'l4&,(^MP,Yal3T(;;JZs<^;#Pr$25gA@,(<S
%!mNDRJJLBISX3?\m>tHO0@(O,S<\Wr>bl(_i[$M;KoK+2Zp0+&4M4+)/>k-*eF7dMo\Ll&LMt/4@m$X/UY@mPj\e;KImqY8N^Re/
%MTsCK,hUN!oC23<c]Gc'>\AYj!]N,QPSKDj@lV7\Y@P*=OMsQ3Gb^3&Nn*guVQqEM32UM\nAe,5S$P>_3K%^OGY!<CBCG!LF,D$<
%P$dF^)!:2^/,I8nn1lArW%gu\"eOQTAEk9F[e1M>J2AX]+BLoVnI6]kp(9>H+PRHZ&RnL,Jo,_CGD#T:o?VGLs7jS@mr$MO"9u!3
%\-@FcC%`Y0T1)eXar(8Ej*QIt5E!HY2(Q6JkTuB\fTD)&hG#-o8Z?jM:,I`d1Q<=dAP?1p,!)r0F`a;N9<.WjlGnk31-^nIbQprr
%TDA3G?3TZ>'dMRKp:h6XYnU[tA,u=If8Lpr/Z5_-'nQBU&em^&:M(2S)BM"T\m0<@(UMuGa?2sgNKc(;=m,_c;D(tF`8bgcatI"^
%XU\@3em[8K`9rD>1iDD@Q(T5(!:Aa@.p$&Ji^2Jnk?0GfjoZE-JF=V?OpE9U9q#53/$`[\"E2.JdJJ`9`YnJ1EZQ@Xo>mT]O[9DS
%%9a]I^Vkq"6,oKQ;][)A+\&\oI"%V>g`jlt76LJ?A./!"(51[)[DqI:&2\u/Y)l"LlhO_eE`Cde-!ub)L)go:<#i[7r.pUO^"&E\
%'q'Z/CtRPnEn55r.5oF2*Sa=Tp;lJ#Z]FGSiPuMrg;rd%+H8SA_,TikX3Mo7C-s7QS6==1a'!pr2-`OuRHK;FAW"Qb>S.Cr0fPec
%]ML=+JL=q!?$s/e!/IoAS3W@R!9SsX,f$<Wf31nI6;e9j1gc/K+r03[,bD>Cds2sZ*oi8(Kijr:GledU-=.3H*FQPYjsSucUI$Kg
%@K+N5"T,Ka<8aZ'CbaJ2!j_dpPOILD<k]$dUIs:NGSN2)[c4lD<OgL]p[e&<QR5)Z/(ZnA.l(ud]9cq'6#l_E/j4d]Mah6ck2I"?
%J[88Fa462$2TIWiXh]jIVZXT!Kh-/:VjS7prnFNG;5T3*,fo#WrLU`0`tc%34c@Pq^!aD"=I-qT!F@9IHd\1&?E&!C^FFa$qD^Un
%GfCiVl`YsM=4+g:O\Y&OD^<5eJDqpq`a<."R56OH"i"@S.-t!s3'W+\AuFY-6'oQ]%(:0n7+;RrR\H5n#SgNg6Wb&=FN6S",k.2h
%1l#ULG-][(dn_TQVR&cS,f+rEl\gU+kK<!/IU=COI&"B6S8,)LMp3scU'h_HXp93UWr;.7R'g\+%XSKK*+`mlrEc^CokRZGI^n:=
%X^Js11LC[^=qMu8CpXRbM0_,5mr,DClZ7s:["Z>XJtM?Cq.`dO:1.D?STEQ57M!18G&1B\!q5GS@#$k?>RQJh9"]^ap+qR,D!Q1P
%?fhabaQX^^;]J7/J!Yi?_-tBmQ+Gnk8l`B]"FSo8el6@R]$`.ZM&dAs7)tJ5cjBF?1SLs1h,n>pV@,R=;hZ$cdZ7.Z=f5lsOHR*u
%NN6oQY8BX4?c-:K3YcmHV[BUBJJ0rHe*Y:4lZ?RM^V0?D2U<Q7FAd]&Lq4]\Fib=o:tlNsD@+3%jU<f!c.g<^+?7duE(34U?'e)0
%KV9Rh$i9sFS1?SH^;X4T/#uDrrlXI-Ol*S^q/,Pq:d+BtF-/Zi=="I\aUX_;]OZ`@#tqU)2n*>YL>fsZPRl]hF"j=bJJ<OVWd%$O
%hrs>srPlpJb@u%_W+NCh#Y2?-8NOEK%/mM:#p.-QNgCJ/C$?""+R0koR5^/17IeR`@2s9<4E/OOBR#I&"g^\"=(LOZ?@J;=m+*Dn
%FN`u5#7aP.$0#*ang,Go9;!a>(M6tCF:ku?phfE"n&\aWW-3\d9(EB2R=4DS7/#l*(Y_)\3A_&*%Tn8&mn:7n`2oX:_9+B0#@f/=
%b%ZZF^='Sp*KShTs0gsZF"A<4(Ol5icg=g]!UP$?m!=lQP&eDg`?B)FTAbHZdmh(8OQ%+6a*L0pB30MGqckaOcS[jH?aSAiI=R++
%S95bq3O/J4o/X0ediADJ<b(8A7:,tRJg3Cf_!.ceZG"8'XW2:._L(p>es,rLDWU_^T$'0(X^geoq+ZisY*7'Us,^UB7JX'$Ja3`k
%+/OqNCc^&H_Iqm&7MUX[BC/3t;Ep5-(pY6OnW?jqe^_fIe-j*a]ED!r^A3.;:*5"-A03,GpoHD8NHf`0m@B/8E'u*:"(R%Y49F(W
%e9bQC.UEe$S@An,5Ja@2c5g@Y/"a2R9XlVR:?gt.IZ%;--m(]ihN-,2P&``/1GPeWjtgZ3*`0oXVcYsOntO*A*='_2G<_^:'.gk;
%[b\KBlcI@j^0O*sn?tZ;o>o:/L^>/Kf?'+ZKHjmSF`9cbP*]U6>S?8DN&'GR,^r?9?llMlbTZPMEjPu#L^37EW"FHDhdYj@m#T;g
%"WKqheGM>sB?8^D5p%Cil7uE!4=H`;+3DG@kC?#SkqK\f@o].GII#!Ch1,h7.,g*][.5$b&K\(DEX"MsiX!bq2Pg_Z4-i@JQ$HiU
%>`^L^TrP=mHq;k\ONnk@m@Y6gAS5Gf:D<HCLMnS[p#4SGosA4`WkaOHVZXTA2*K'_gmH]#qJu%MlgX7hq9<-!QaL.kBI#Njqs!8M
%6tr6oo86uW0=cAt+#4Dh75kb7'SGrg_bY_LjN4oVGZdY6NmtehVSm_kMhfp[^d_>!;#nCAJZg"tg3j<e07eo1P@F\(b#"-Qk7d7c
%12!fJ0MW_^Ac@"mW:<bY'qu)uWX\(+FG03+o3mOcBjk@l"r@+n@BT<8.)6EeAkoWP=_s+4\Paff3-[L#K3?Ze9Zi>trRKC[Wlht,
%nF./WOcU*Z0RA1C&3d#/8+i9T?C&_$\#/Y%^-[9jd,Blfp&e<E`J*62GXF::%TF$8O`1IDPkfoTA\M!AMG[r%ptc^*UCuBKQR<L=
%Op?gNe#=XS40TZn`bBeqEdKT'k]3G,<>2Qr/2kOjd,iJ;33)PgWp*#cjMmG`(,Yj1+t>g8-Kj);02(5F=6(GoOoL7(*Zn7Ah[Ie4
%Ne<k\U1irPO:c_]a9ZV;.2bRnSG,O4g[,Igd]5nRRL]mrm+it/I4`n]@GK?BC14_A7c<)GUD24KU-2Z'>H.`X(7n:ji7@NGZZ9P^
%mgba]U"/,5pT_C_'_Jl3ej#lus(KRQUH<!AME8eD%lV)9Rgh$L0u5Y<luh3/N3),%msGQ1ED>d12LOY/J\<!A*Yg81ige=WU1BqQ
%KGSkliK\psi7q,c&KZut)"9<WVZXRK2>tULgmHJreV&F?<HC+X2eA'2PDDuE/,N+S_uJ;Y0i0ql?#Tmpd,PeqebB9L'$b$][Mj>u
%+m:3l[<SK!%J`-sC)jX?)b8`?g+H,>bEpu<cp<^3rMk0gF_%a;VLp4&*#pfG0Pbu<F)ml"hh!B@VfJd^C,WG31XOqMpg&r10Kjm&
%(ZRMD/)//>Y<,tklFG8KW;G`s(J(asdZD<1d<"Do`#T-gh<5fW^6%p:'LcOl@,6oDD"Tu@/hm2G^%'F&A>Z[;1<8&((WJ\kJSJ+p
%84fCu+%l;?Dn^NII0:I$6o0;J@?gde(_)A##7$TBao7H/fE_jC`eCm5\>_>[K`shAZ.1r9>iF%,8_cO4P+40ODla;c5M(I$;e8Kk
%Sp;EansA6nkK"ek;E[H5Xq\Vl@,u_Qa_haJcK"bS'Vu>JO6GAR,WgmcP!TmL];@$KTgaDDTd23JHQP_0^j)I&dYsH_,XY"RC>*u@
%f]ZTFC75JsL?+3c\Qf]q=\DN1=Y[/)$:8_mfqt1&<\?+mHCU8?KpMSl[#[?D)bJ#mX;G&B:m/u$p:ee/%b*<ML()0;n#s32rp]RP
%VuQ\`mrg_V%QaugpXbkDW7>5<5[3\\)0+X2Aj`V^Dr.W=8H.qW%9M8b^dYm&HF'YD_\YF/QF?hgVgn`aJ,I]WquqO-"700:s7GK(
%ql`4gMVi]ZW//(1-Y6ap=lVAG7M5n?"bcHEHI=+I?CL>pg8Y%6I+nhP?rh"Veg7IE<>;h79kn4/VPUM,.%WEufL"V4.T%MU/i:>S
%clhdT)k2Nr)?\.q0:YIQgK+-DFftZk2$GY63*a6UD0S>[G*7_cWDQdL\<9fod,$^\d=Ia`_N5pdir*AF%4YuMS^q(_IW_p;.#q6D
%;/?XlCHMh_ZK0j0b",F@=fCA76U<L#Z8ZWe'`0M>#.%d6Yc_slWNr21DdoID2,/cJ6h81m`tfW>Cp=d*\Vn_9,<!ZkZ&nQYD.7!_
%=lY<DF(I;C;F493dr(?VhYQXZ'98VSo<=?Vb_hCs]#L#2b(B?$M2`"p1_k`RaV4+b>ARs[$HbZi`TC5;Rt(Fnht2]=rEg*8o"Rt,
%'0Oah1HC5El.?P,(0$h:)/ki:JY`,o(3]2985nOU&X!p!]cXm686f+S6<$N#^JT'acXpSjYDHsC$lP3UhToMlD,q&rZ_G_NSJCg%
%CpTig%b"B^+ble%Al]>A/1=)$<I<V870dRr$:BR/M>*(5>Md231*Tl=?+53ff45O6"3VT!DhO""qCOV);&>"%.]s=M;)'RY$L8=+
%Ot$gmq^+0U:=E+n0bdERIr(g(#Hu6TBYN)6Z3cMAAVmHD6:F3=(7WgPMo.@d=,8$!R$ASDFc@nCPm-Q'P8YI?BdsN/Osf*N[b/6F
%fAnPBhs3/Q`5]Tu`mks#ZClZ)9l/=u@@E'(`/msBMN,Ka`g*@BK(cp8N=OGp'o!.='CR#ICu3!DEYk56opT]+@piI"lASPB:qssr
%2X99U9uRiV81J5j7U]T_8lB4dHf)b2#AT\76\aZYpQ$man)-(6Mp:"&9l`KO.!LV-a[gZ16?pKfO\m[&"REKud-`]PL?]"@H5;uU
%mk,:M\ejPa(2/j5.^\o^pH>e;AR_,Y2bNYZprR*Q:PjX69#MC:;^+D`D+_aY@2^aGLo%#:R1]nNp^K[Ne+@LT`/IT`.Q9uj`;%C(
%.W=c/REl**^=[AtQg?J;?s2O5&##./%Z=%l`3j"l/e<aaVjJ2:"3^O!'L`L*hc=90OP3TX;2Qa05ISMC]sHcP1#M:Jfd4YRZGa]e
%TopPTMG7X"Y@/>%pP5TCQk^J@b5sU:71`/M<b0E&[Ae2A,YsAKCmfQq:WZmS^=Q;hbD_!`NJdm*76t/nS'6[e__bW4%nf\Q.l.Bq
%"`>`G+IKmFba;7B;rpJ?Sf%L[1@t3WP.SqcYFB'h)$A&#([m!6K(pcQR1YL7Bt,-)QC_PdAdg3uge\\N0R[/n0r*6qb)MQH1&eFh
%k3[RBGFA8E+,S8:ir#YF)4Y89eh$T1c_IgSRg"SOOSTHtdHltHR#WIVc.B*67c&d)V)9TU>M?I($Tk.A?LZF077SeoUr9;Y$Y;t1
%ZK3VASdt7#e`>)>)7_K"5@Y0Dkf2t<Wopmjj3WF.=g?Z;g2l&1p_*=r4i70]3HS/;./+R=Gq^'4A<SYPC=?:.eADW=`sTs4V.1]C
%po'A%a$c<9ps0jW4/s^F''khhF('hlQj\AsZ7dU0PK-Q^ZIg/G+VEkri9:4pAkc&V.5tl3Sq#_%n:)L5J'Yn!!V7uBj`W[YNKA%R
%Mqh!]C#OO*c,VCs*#5d5(7dUM6Y,t.AqI^MR)N[PLUchS7_3h;YT[4Fh4rC7G)-Mb9pHG>H/eZ?(V\.LJRq#%gj75#`atY8ci@rt
%-=PbcQssYk/1cETK$'n_]Zl3Ad54j(PiR\eO6mU*LPTp'i0j,I:Z,G%_Dd$#YcMi$ZsJ?W&_TW[1iurj8V":DV3mMa"3]\)JgpoW
%o-Q+G6ISgM;2Q`m5IS)76S/"<>eW-4HkR:ub7`D<lQlfTMf%NDK=7VEKQ\;DMHP3ZYcM^gW)B9ODt9Vi1ej5M-$eMH@ggLB7"O5!
%k'Nl=2h<]fXDn]P?BUsYfLB7*>[*Xg:q%UFQk^G?bN`,[.L"Pt-87JKdo9IIOsdCs[_TOCr:aK)^,Q%<',Uhp)V;4Y,mbK>D$3<1
%[AB:EEuSSG=b/<3XDT>_;P60k!i&+>9pHG>H/e[1$d:\#Ibt=kN?c2P8TKjA6f`GX-/]@c/MYe_b$3^c'7q66^SRodkSB<sS%Tnq
%^I]QBO5#$W9T("S^UMJnF9qirL<>M(4#)2Er8+<h^bR2S;lrumiRchKBV`(N.M:KkUgdq./1`=hP)E8f\X='d9PLH\.(p;S+'YeY
%6fe!$7)O5Nnf#9a/i*]t"YN*k.L-l@]nq\;C7D(5d;:9]Ajs_TZG[3o,mgGi,;M;PBrATl\J*^>>@QG4o(t$oh])C)8W843I;;Na
%b(5:SD^(s=g8:i;F;pC#=ckGCXDpUJM1Y!ILl<4K1fS@WhMLc`/Mli,q0eTtmu@8%AB)Ej^bqum"[U&02jr&aD:;H.\d_6MXNVM`
%f!lm67)<t_AB#$V)Cd[<n&5"AQC2rQr4^@upI9UM11O]pi#5OrJtV)SS'5QA[V73'h1h_7<b;akCYY"VU0p#@11Q%f%@%m/G@LJ[
%bKN%9Ic"`!H[R0C%O%("7%ND5\QNiNM^g=R]#/X^VA&fV%?Y:26f_;TUjF_]l?3Tlb?@P$'h\6a=.XJoT)4$:j+%'qktceVFn"0:
%IhuGh]A(;_)X>V&B-X[q/U6\`@u9*aq5],1?8\Il7erIf\Q=gkS)WR:2PcZmVU#r4pD=IbbOpAm=3!ub#+Dn>NBknWL3caYLj?]%
%,bBPrNLrso+cUDYc\8fW7f>d<eA_+Q`^M`QqWh)GYLrfMq%r>"80ZHRH\CsEV)'']3r*p9VRpei;Ch.L]CI`HVP]U!1[n[sh6kj?
%H[TYrPoMB5:nB8<rMsTbZLW<-22#7^iH\I\jf#j,hUIc&Gm:uuYIjM>CTl'd]mRDEpmd9'f25j#?>AV[Vjm7oh-idMe6R>K]P/f@
%ndKnI??bLR='hM'H%gW;.6m">qK9/H-J;&2+151I1LJ<(W4`o%e<CSk#/4lV]CrgOYKs>a@_!1T/g!Z3-'+GNUWX^Fk<7sVe6WK#
%C.a=F"5gN<?$kD8fB:^kLt*prlK#Io>!2`=Im0(),9ct:53.+5D:Kt(QP`nO5VWaE)X9B$P$0I%"Eml$qXsLc`TqpJd?1Jc@,Hd#
%9@?bBeB$7"G:j6M&?)K?R&R"VoBRusdT8nI3'%3>HjPg$p$4r6DhJnEQRipCV1]\(TGd"o(5;'K]$b"Q*(!&>Vi)>1,]LE-V?mQ8
%#eTI%%CD*?JGf<1/Y],K;@q)Q&aJJaoN"".7Fcjd_&(dfZ4H%$RZQQE;7PJY.im&nW$mqj?+Ep:gg;EK*6./I6XYc=K$N?Gk6sjC
%PS#+kgU'\Y,paJ@7k%_FUsi3ZUeaf'Q,LXbr@POhX<ar-#tp>='K\WIII7nQj8+dq^-b9bi[uh%.)]CCq$-3]23AH\hPP.9V9&q4
%(?cD=UCDttoSWC#`D,Sh!<ET((>O3p7'="5RpN^&1h4ALN$59@p"C(.&En3-(7UBr\X-N>[kt7s8P>s`o2to9h__RG?GuN%j=HrP
%:J5.>[>))9K"I*"&@pYpD0de5bW&.^Yq3SSg@0aE0!WtOjE%9/d+jeXEP5*#FP<37,GID2SZH30kJIT(&,<eq]'n&(J3ul\d(%pZ
%4Z`giqH&,a(,)Y"NA-3OVl%iH.="K1/_c_3T\XTFksaWYS$_E:GF[@VQ`mqkV^3%+M<M4A\r\9s?>dQtP.9AGD#.tU,5m^\P)MH6
%h6f:A[C.-7&1?S*DSS!VAr']1e!=>)1I\C4(o[ti.UNusO<lnV&i+j=7Gc!gDS_jNG1!hV->bf'%>2U`U9<jmKI5$%C(mYm'urjK
%^?'YCDB=j&Kuip6C"$]$=R@i,!^SlheS-1:T&>4"lUj;f30DO+APO&(lYY@Qf9W'iA#8X]U6f1jm3#cRV>@#b,ErCF"ZsO<H<,i,
%Dpt"Y")Z+=L./c&bVP'EiRZ@+l.HJdA<HW#Zs.K9\<[]:hPS!96c<a_:-mQAJ%3&>!7!8q@OEr^4"k\BL5g5.3Cg=c\_a2HHM)(W
%N[o_2q:ZKjd9Z2S#+G(jDl.hh4]>bb-%;(K@d9$UGsUIV?_I!@p&WVRj2=-Ue.eA-b%&5<dME6N4BQX2S4[R$^CsdHWlFh0SMDA<
%:>E"]aQjqP*bl/C0Fc[`q(7kR6c3rk7QQupm$"*e(2HNW6.4pS#IHruif/!k,?*;VhKDql$aCA<Xk)^$dYZ-lqi<pcg6906n5#o/
%K)DsC!$BY5NN,o"fKKVMl'_fDd9s<PI5,tB]=B#kRY<"9n!^`9Yb5hjBKP<Eadq*K:It/F>09\pI"aEqX^KMI6o=a(VM-$;`&&2]
%Q(l*,kD'?m[-:Z$M$N8g13DO4qni%Ud?_q8;ET#LRM.`^d.tN>_joWfQ@03C8kA3nnLnd#ZEStWR&5d=6d];Jo6jA#VaVUaH/[++
%1<;@Z-.k+'VPR]k.%WF`bt/=g6PJ3_:1?INS$R]6Ad7LkD,:VoB>cW3>T.VeRm$3R'&dZ-/(r^PL_+jHG<MU93jbGd7*(pE50l^<
%aX"mdCh,T(Ciba'UV!gmBOQ\L0MR8A7F**_j25D<(fI2KP<juljBUF8?J%F^g=!2L'[L$Vk5u$a@le@e8-eZ)^""=3+kD!IZ[s30
%`&&2uQ(l*,kD)&@-.HGZZq.8TU$NOL]e=2o'5_I9&W15H-0ke`*dHfe@_JSE18-0ig,ZE]D?U:9q<Y32VY2]BEJ/56Oc+nZkhaM6
%'Np,tE>scBNNU<?"b`@XjJ3N21!sEg2fS/0@3alh%+6t4Aq]6%m55slVoF1U%ti$g1C9o$qg?bJla2iqkC_iioX<'NY#G/JL8$qF
%4qs6t.lh0=Hf!mP#H:E,1ICZNp6^oUb`ou^35tcq!q0!`0+qNnl69n<b^fXQ@ZY?meGTJ31qfke0Ys5Dqu*@uOL2"Y"0Ft/U3)?7
%M$\uZlo]l.56(4nT`3+VJ+kn@jS<d+s)?`!g2NZQ-NBl?<g?T%CZW$h$r9Y64*.>Njs88-[n:8IWt3j_M:?XNd'=i"&u4!\"#M#P
%3aU$]PN>%lO5SbPWJE'\1*b7l>K`k0lkR4Z[M;OVAn4VbK@bai]LN$sR\I`'VVVO2j8,VfL*Nf:Ag@c3I/r0E#G"<)0T66#kg7`k
%M9@ed;NGp/:(MGS(adBjrGX$85RaK3U?<arDe$_LMh3po)@r$Q)SiiP6*cpSPdmnJ3_tMnf21eeAZ9b_@Ma+M;247T)Q6Ht'ME1k
%[e@Xub_%\l4"i4tG$(p1&UYNF.:-KMnL3e#.;Ed@E$D'Pj\d=oOt)tf?6_pcVQU1\,k2HZ#Op\S:>en>C[soJS4E'2-i8nG5J6t%
%/#eh,a)b-FoZsdgd;@-jl/gU?(hTL`g70BRO\Tr`7"Q)UdU/S0)78+aq9o\LP&^rCNM0TZlND@ac^*shi;*$P'0%Kc+\,V.!u_-I
%'m:(MM@>%Z=u1k\I0?s6>8MP4]2/:X*:k$:fKGA<K@H3"T@ugEG3&>j^Mpg`[rb(dFk<*=pMPK\pODr!b?qudQdWpdH2:i(>GMIc
%]!!`i3LOC)77Kok<OHgT`VPba(p*CmTZgh\Q0nN--"QF%11bDUF,o(]I:c.D.,i[n1.OH6=[cH56#6VVGB%7aHFSnj@(cFcm\Gkq
%<l;ik*_GV>]Y[H9f8LmMQq&7*eBsAl?/QataR*3XAj_:j)C2:rGTrp8BF2-W5\lr,>"Mh;1l!(]7YY0d0Bp7@\U7PpoXMhl%(j>U
%KLVkX_le;Lp>Ps&m<dWg?rpUdV&W&?UMeR-VF=Z+aggSFUE7$;$9XF(KDs@^P&290\0[e3U@WmTY0j*SHY<&SB9W&/i.s!''r6@*
%PrZ!%8-"4HO*;ktK!POUN5JXB[q]H.djB\\=^I%E=E()76G/8?1=V)3'F#Q!\<Ii4aBiRN7[mSJPDD-!f',PATeJK\<[_hOA$ioE
%[iT`If^KeajRQ5)m`0SNnEZ2VJ1\Jloa`u@II!jX/&t)a[R[u(?V`UoDFhf&g,[b-T4hnIE7%4VDQm)ZCEs_=M^O;.BRISTdW4hC
%!jV4@Rc;dGEU7@qU(sfCFV9;nQl-<13LINHi'(BdB-ZcF%RWT``0g4qV1^R2cSdNe&%k&;K,mhP2jf$bfqcSPo)!s_dkZI5n;-*-
%kJk&goT#j2n:1NO[s>3C8c(W/Pu?1lcu0qlV6uZFE4D(l5m5(REJI>RaaT455E$>g<`_cd2Y9XUj9IWrc0;FMSWG=\"/;E4*fB:,
%d>6\'k(C\?H-@.M+#(tIDijMJ`9l;SjrrVpJWX,;<Kl?r?c\o8Uorm9MJJQqV$/+/%amC9.$>4&F_pLN/V2IeI>5U[`]%HPN0ii7
%+pl>1Hl7R"FmU-m:^OM?7o9?ViHOo)`=ijH/4@7t:t`(['W$d!%THWgacU*Vc9NP_A9-qI-Y:"LKfO^r[W-MWTg&6s3ntOJd%6(C
%EZ++%"T"bJrCoUpM;tTgdZ=s*Q#G>qUI?7Q>)7pRB#b_cG+i$%e?D*35h"JBQ9r@h.6QYqBXQ+>c/;+"`T/&1^/cH/NZ5(\3.'/f
%8utR,A"\e.-!nRq7D<.LZI*UORP:tUejp!#4qS_R!b0FpfVX(f1d5PX/\&p(eNa;C2Q?:D%GH(XGt=MPMsl8=7YDXLSMo-oYZV+_
%5*2H0M$gA^NYms#7;]&rCtm)Y\/=f+L='(&W*mAZ_lck$%^*<qU;\XgO;"WlH4,SV%&^o:YY\^B"FMIm)Pf\]CTddm[c`9DKIS0-
%TTIYnca?!J4DVCPkU,g\2^nW)&2aN0fl:2<?>_knS;Il6O`6?hT*To#?n?=aS,c37QnCA$42dEBA'gpK)ed=ckZ1!N6!V'4U<-e<
%j*HkH[R^s4j.%'Mp&e3?SdfA)iPZI+$YS\Bps;7_Za-ls(?+@5]SMI)M.US";G$%<B`e]].KicX\Kd,F+j^H>N/aBg$cKu(1^Rq6
%'(%Y)3`lZ'S/pnI(/.)NX3_#1ecoZQ%G,%/2T]08U0\LJlOo!]?4ttF*BiAI4Q6:oOkk[OWc8^mo$FSXX+\?:Xhctk!G2'Lq$joh
%5:eBV&"s[?DJ"8KmWF,gK@:p1Zjj!1%MPP"cEJB""EP5H;-#pi/Kp2/Z&&uoS_n*l/>>lq7g"gS)@/.CnOkUhL9R]T#S3NR^X>WJ
%L;eH8F8i=n00&2DWRCjhlG6NR%>4n8\/Znn7EGh2I6KARC()h(#%D:iASaeedOZY''FHDXLg<*+L#!=)E'm%.R%*9jSX/O?BNLm'
%9M0kJ@\e?C#e5^NhaWtXM<cGhKIm0T_(%mq>dA>S6G$B5KJl[3B\e\?8&-"B5C0b!B`(X.Cj^aUYWsuFJOop9,HVB)8Cdtg'eoc"
%`?FLYg(;).Khe4L?kG8B1P;6a"g*R\s'B(YP-/?+C"sdmS9&=VF0!433MeGcW:Q$Vd&DabZAm3^K.:I=VY>AYIOQl'.kI99%6d9Y
%k-MnR[j06i*9XB>cq2$EI9Z1Y$V+7]$p)i8nj@bfKC/gWNeGQ#2Iq,l7K9g]OUYLQ<Uo9;W-[N_#PMHR,=tAG"S_"hR:JGX_sa3(
%Mpro@CrthT78/<-,dj4P6fE^VnH^NQhen/b,Gj?%%=&)$TcbtcCS`9J`JsBX1Wer1:j_[+jp"-Ijgd&?$(p!PA4#t!UNodDpHtS.
%]Nj(Ehqbq3`<F0c^[02fSHNp+p?qd::,$Y6q\%$#o0^:/Wq7u9i<b.cKM>0Ee@lC@0-eaZ84'mgDV"'V"G@8nNU90t.N?ksLpW23
%"Z!_(S;L)Em!Of>i!;n6Uu<^(4-aW/R'ZiaIl7LY)qDe]:/V?mp:+1Yn]4(=\9B&IMc30_ToH/&;RmBH-355N)RL%i;Wha)(IP^q
%V'BbNA_FkjXF.nCK*gR;<,n5>%&MN_'d)W*Ze2C`X*B*&>G95'T$tX@"S$B=Z?c636c*3bDLL3R^=-sg#Z#eJ=8sanCNe["&\O(,
%)a7f=h26H*\/oVRJTTAF>9b+.`Ubs*bi?*&Fr]H3i8M5#0C=(DjP=]rjghSo.IG\O4)].XXR#:tld&tJeo>KpEm+.3+,n)Oljf.5
%%G)2`6Y_?]$(I.f^$;M^'PYuTVMN$>3sWJ3^qBo5k+$([3Wq"m*m1m!D;rr3_8W^4n$3@;'7gW5aT++7*``bD+=2kInsrHb+9c]M
%J;!1$D3s$tUQ1826MblZe@AM1i:/3K7eYDF38Dn4'75[kK\L1lnNsntC(>e^SYJSF.WLlm0h.PD#[NGV7co5CbYX&[pH3)\`H8f*
%>[M?ZioK**>&N89])EI>f7<%d`BC-"Djdam5d04E4*4Fl<R8N*<&nt)609D@M^.XMj5,Ua'*m'aSGWZM^oaYQ&)]#^5k95Zk1t4Z
%\U:QZQP#L4[pAI2l`T9hZD5nEbAnX%(p>I>O_`g;Q%rUZ_67&hT?1o%U"=Zp[Uq"FF*1$0P@.R7dEKB3a#a9p,C3g_1#S5Zb;ebl
%6mbAOpc@b/6uX<D).5s^1_>]ert(;2V$B?PV'X((7_H5Mmmsd?YE^q/?:XZT>'Lt9'c!\LWTI"gH9f\RmkQgPn;FR[fCL]c\>]qd
%[Gq-MiM^#,q6199V")7@Wem:iUt]\P4@KG1ht*Z"D:bE3FtNC8O\P+Y]7.b=JKJC62R3IX(Tq,amE/3NI,G5B1]%VO^3"gFJG0A$
%?U3b<nbTBX",<=9@6`O)1o*?':8lfKO`4i(nnu#;A<n`P]\r=uh/^25Y.KF@59?4(5*4l`G>i<Ei]UN0lWP`lin;K?I[Z#p(*l]Z
%aLR;Mm8IN\O?K`IDod64+M'`XF3reNYOhR40-/`6(-m<^L(Mpn9V33k2Ym@td_#U"*fa2ddNjN:!q`Z,GZWot:!93t#`f3-9.K;/
%D0V`m$ITq>>Wfe)_^d0bUGL]7Ls7<JKO6r$]I99sE+-p/)9_N8!g[jt;!Tr&[Bj690O^TmBYDFn]\[<rU^4lE-#;s=leUNWGGia"
%cl)AK*3LGjn/NNG;&f-QFF&+s<#p'AWSBHg9&psE.Jgo"78"\aX#X]QjWZ"<r?]]V%O[E`U\3dW'u51&)VZ43]"?Ad1Dm7m&jh"L
%1t7Qn'd-^*"h_Uj"8Er#PnL1@`cdtA$GU:h2Va\;oL"q!EUP_gGruiG&d$jMKHrK3-g&@Xk=>p=EER"nhhiu:8.:&c8"Ppl'9\HD
%"%[#K3$G^f9k:+P5tI=9Gi=]eZc`Uaa;':(!-f!/9L^_7*N-kj)3::<HZ*]>n)3aXn(D(QHUJ.tTm9Fl(_Y'0p+FEXTCC<[(tui*
%`8S;j8\:Ip5Hj=/BB*+EGLQ5&\j!%E,I3cQm.J4L?/Jqk7qA?Lp;FRh-qZC';)#gRDis1?,Pci/'*X/\W7"L0Ee_:@7sNdJZnT%M
%**['EGMDd<ZX%;:/+M<9J@k4FgU1>/[YrJ`3r3u8=6,\+&g'X^d:2.3eerb,7`l!7[1PiaO=I)IYo/,l#F6EO$+6n/,e+GDs#SHq
%'aK.tr:D4T,'r4[HAe?7F+#A?MYnIQ=X^$6eTA.%lRTP1deb?8r)qQe7_ZU/8_k/X[tsI3?iJpjd!]q/gW0!49/J5`eKGaq4)8$o
%%;B2--g^s);TL\O'0Y7J,7obhn+Dfc'%'Af(KDNeUdO_as*"T/<DI:d_HsW<%WOh@4ceB23T<4O+H^aiUlHpbo0crJ3tQNY1?uB*
%!qf(nL4fLtc-BQt]KoZMHUFV:`mg+$%a!0la(ns9SRR3.!ZhO[Y42O,8nXY2Z;u;tO<H5D7EefY(XFO:OA-\_%5Oh`nfsu)/gK6r
%Z3ScN,/^B%.>K]#!S>cp3CYB;?4jiDG&@MJ$!90rX+)NgGN7H!'q>=CqMHEK.8hT<]9%P6B8`QdAH*nO?@7QH-4e9j''P1(+QsDD
%'P,M:Af:9?pkPHT)QfP$U)9JcN8uu6V2(.CXSX\Y>N;P7&o7mN1g[Z$K(Q6u-DUn/*2XSk0bO7kTl^UtNSI9\(<"`HQ1`U\HK=Co
%&)%9:,]T5?*K36jljs>K)GaOA#i5J"l"6'/ej.+E7e)Fh,#VpdYdH]&g&5I2MCe2(/:]Jh:HLV89`'p.^%#C"9C"KKJpG@G\TqD2
%b"3k&#0gC6Xj5UC5%P,l^r^WnrHP_+:`d+c3Nk%"8%g><,U:-OMt48,o_X')9b\:'Qbj%%k8alZP3kW!3>SJN5oKCHK#4+$TT`ct
%nq:+YT`^FMc--r$pP$+CVjX+uj`LpaODuMg2LdDCNQK;8&;JoYf0NThhDWH(Y_DKe9[POoSTKJZ7H-i/]dC%7XpO[k,0%%Chr<`!
%=/==U$tMTS6MKrFk[I?acq,o5CdM&`-\S/Gfn+:@q[GU2oTi8>/5$"-p9?!RRGT&Lm>@B%m"n8oMOR#Paa""E_kk:ilepWnonp,m
%j#nA&BhHR:J(@JM!3mESTcpt67rCr;Arnc;_Ji[SAL(9o&%TuMLQN2$m1&15"",3%8Fh]_[$F5AE\8@e"0@V]&_Y2d*o4YNjD]91
%RdnPWrZco2j?FID(JFlUj=$rW0f%&5!e^?F;<3I[1\%tiR47-q_hUR;2sOWl,@%;8RK->hOMhS35C"&tRtTr4)+no?^kN*fI+"1l
%UqD0.@A"_HDSUTf`0;M8)q*fAeo!ke;]WEg"$B.^`cE3aj4Nk3c77]A"Jj36>a;Dm3V)pao9[m!]8'(Y@AZ4SR8g!?_o#<kFogmW
%-!rW18TS8f>ro/H'X=V.!XN-T`C9;Y1>rSd"&B]!AO03Y/-hDnnAnjq]MJ-C*`XqVN]^\\R7kDOO^pRSP2;.<.(gaN,uPuP*X9c4
%Eq)L=&]b*-#8p0r-G8re4`U8:1Pd!",_/0K^)nZc@/Fo8Gb<oVVD+3EH%#mH@]U%JiR/*L%3`Be\N(=_$T?pe!@8A'.4<F(NF^:)
%0,'J"-KF>U71-s_^I*k[,Tr-K2fuQ@_jqQ*esXe0KZsjl`p$jc8:lnR7]]8\/jsAT'M%_.OE\d*H"-9FkHBkHa9W7`-m(5#f;$ZJ
%dNSji5_`[bUHt,h.4%rW7$_P3YhRN8$18hh/^j)3l8%iAiTW\gB$[rG#t%+@nM!l2bTE^@7j+0FMur'u0-bNt*RZDJ+_+@R'R+`l
%&MfM-@pS)L0kQfi/#bD?0X':GMf1_3W):u^@7s3BL)H(Tk3Hp?i^UR^6%\*LMpVqBNq6+;<@$Ak[ZNNCb6W#p.i1ECW05,XRHFt.
%(d/qp?q"V?3(<D\;Uu?d8m3AKG_SKj<JueYa;&##AfedB]I'n/c\dMqB6B:Nm-tYm5Y87fp]Lc]aPbfJi9RHn,]r,tcPVu:irGhs
%+0arJ(S(LF<t/=^B/Q6hbsGY(RL)Q7[2nY_A.<G+'O&30Vi!fM3$#5"bFG+`gKk\LTBbpAU$s2C:99J48+P]YA]HRXHY@gQ:1%[S
%pg?Wo>]K9TXdMgp/Ymd=]1lLS@uf.8/I9,.E\ZVXP(*59MNU.j72[D,6TWXV9<T#eoZCrgX-$h+&NXtoVgoEaF7*Ea'\&oR\tL!A
%%S4a(45+`^h?#^T59f?0MPG.VKI#;.V]M.Y-mjOtiJ*jhX'a/1/SH]q4D;f)&d\E1l$#EL\b-r81fQAdgmR%QWtlPL06(!35-fk[
%>Cug*MlmADe#5d@#9O3eWX4uRU+@FT["XU(-dO>YJtbS&cgqa?U@?^/iA)=BUl%*`FZdkeUCl^J*P%i9fPirBq%s"?jEB*L$oCI1
%cNt7j,CeFp`M.IK'60Va?W)"7l.tM=PHTlfH,WS?$4dI+T8i7<N'S`6,P1b=M\'!^IfCRD87(BAs0h]b(U&oB*C',SJUM2/aDgsi
%/;I%rUKkl%]DV\LgFn*[$Z")n01Ql*p_:^C$DfH/2rV<u6:YITEC.rUaa,+X7!<*'qehkuL,+1ndSab$qIR;F>\HPiooX*);JWeE
%p=]/NTJ%MoH]Ci?.VD*9`9_SH,Iar<.NimM'U=gPH_(iYHP$E-@bGAp-fj9NSZG!r\(_c8aNfB'f<CO/0W2V<=jYQ16fh"_SX=j(
%mdl43Va(.CIt-Y<A$t;AGh.]\7C8F`,9PWcQR#O1aYt/B0k07hN'C,/?Z.AbBsZ)$<`OI@M59)<XrXA+5Q9p)s6q+[Zm:-PT5E&)
%QJOk)q;;2;c^*SbKkD[FQocc*7:g2nR,,)Ss&)>(M@!?aFO`tsdER+V3J"9!(j)lqV'`6MHaR=WUXOt?R?0Kbqm"*C"Z=*]>tf]a
%1!(Ce<=WK4W%@>[c\_"#R1nG#VHlkNVlI+n%\JEfhe3=,`PeEb>q7d8rS":e'-3W%<6g0PM:mqA-7KI3mpbj'Mb-4cS';<<\tQF:
%;'N4k]:0pO\[,<`HPcii[!"AoD4g#MO]0>YM*]b)<ber:[9"k*3]_,VS-c_>ZQECFEZVmM`T5VdPM/i*WZK)H;-DUXp"c3-E)YW*
%5O9^FU$S9)FPr8lDA,$aXI'iHX_Xa[X'^4]@\TXHL<>pG4#-W;`<6cNi:S]L^Ts6ZP-9Z3YHJA/)9uC[CJh7ekG+5fTt?M8U$AJo
%i?P(=WJ,:q>7XJH`%Q-_d\e*Sl./alPFLSJJoPd+?up9_CiaNu+,Y8GM&U,g@WQG5&a.u\4]s;d\LeJ6T"j07F8KNORQcRL)_RJ;
%kh3Rhqia%LImi\8:[$S'*0\S!n'5d1bR,=9[bSn/].!d.$0#S5BQJ*-6ZH<\3<RNT2ubdkM7$/$/3*j>a0tY&U!:>h)Cc[mm_nSA
%^V*?p6.a2sK<5!-X*L0?nO]2f>FoUdY6p\S0^'Fc+h.5&rL/Qs"-eP_L6+Leqm"De[s)fs<&t6DG;JgE>hkgE(j%?HE?_F`LpqYn
%'QHbbO]p%G,BsP58MTF4g4nAq!7S-6'Ji!gW,)aM'>GVn;Vp9RI@$2eoQ"l5@aMNi`K.)%+:dR/;T(A.)D;&t+fCEa'SEQbD9+:0
%0`;n]0a!Ypb(c!>nb]R;jm=)EG=hU*8,">Z#$jl+>feGqicEs%7@_i(iGr?GEXE[U1$DfpL>3CAe$"lJ1I,ZQC^@Qb^E6ZXhVQk4
%Q^$t2F`3FPd'^7"S#cZ6DWa_l`'8)W/haXVVi[#TK<D%fa=REHr>J6^"-eP_L6+LeqlqI/mG6TB8biqcDF=cG$ppMuc.su8k3a#7
%"D&8->M?s,1LB`BIu*?LGhEi1+f64CB\9jIIA!l<bgD/e05(m\?KgPCet6_Op?KO<F"DZ+pDWeTN\1OD&"/1D/H-EThEP(0GJlkG
%B9O=kS_bI>l$\WV^)bTq-brd7>B<51odXbih5TH(>]"HQK(bRLBrJ;j6I%j&h`[o"+kLH:2Q/]W,qct*4/"g9>8o%26LMe\.B(ur
%KL+522/HIke+dZ>&K6J-1FD)73j/mYM(n-3\KSHW1]<c!0E[Pob(c!>nb]SNa`iR,Nb'nn2^Z9oY1lR+6.aQ9aCu4d%C*@)U9W?#
%;A-7:Ju=]m'SEQbD9+:00`;n]0a!Ypb(c!>nb]R;jW-\"mum74U"raI%(_b5##C-WBU#oi'Fi+6L(^kqj:jA4@aMNi%CmbbVI(Ps
%Aq8<+far0OIQt9:]L-f8>uJBm]%]i76.aQ9ph:<?%CER,U(Q)4:u\pKS3f\C%(_b5+h%TioP5_k$r@il)a`u2n&L`YG6m]P9?MG_
%G[!`okZZ[Y67i83Z.;rR1alQI9'E^H;ohLe6.aOCjH]e5IZ:.j!D5^j6cbhnrRd;(%Pcga8U3t,\,'cr$^ZGRJmYWu=jZIM@#]O^
%@Fjqrd,pgrV=;rFiC7j]B++N`_CXK%CBPfGeXLl*mod/ML+M+%b(2X[E9$$`R?"XW\k<FIYL3F])g=W'atQ^nUS(ZS8#RPgh>HC-
%#.:/1i(Qig559f<Sg/_36#gGH7S:9i-AM5?T;[quL?)n2\(<FHeHruHH1[U\FZQ+V'b74dOK^;0]I6f+niC7$i$Z:RSdB-j+X-e8
%=W+@&ePGZ<RD<d*?:I(tqMrtt1Dh$C7%6EUhB9@T$C?W$KTD,ln7Am>:^WO-j44_i!%6<_Dh.plB@kJ5[qKM`^*Ac,pIOf@lKZS<
%OgXr)N9KC?ad:*102?26Rofr$Dj"E)dH$&kdN]iJ)?'A(@GdGJ%^(Jj8@O8R\0htjiKV4P-=-!m?tDMGbA'D]eCe9G8gb<EC[5)0
%A4d%Wp+qU!Xq\#tl)kLf"Aj%9d3B*ASklnI#,HkrS+[K3&u@o:")#@n>+3Wh_Y#6]m4b6TdN^Mop=c=[`/?.m(T=<m,g$i.5$^=H
%%_3.9_Y#6]mEd$Bk@9<)$#LEV`](b<7*\JmKegF33e8.V<.9>18Tf4>OX:N9LB=EZ:0ltDmiDe;6\b:?@?GFVhElLVKu3L0?0s<i
%a8[Bd,:jMm0HtT;,;MqRdS5?Nnt4N<BZf.-\DF$^*BGb)a3\Mik$D,E0(O[;,]&t#Z]HuI6fjib!lpa+\DF$n3^i7<>!\4sTff"f
%WHj%=+7(4MmoSu+,$gnHcY0$0.>@(^]%UT0!fL:l]_U)b.V&Yp)TL@KPVMBD"&,C*!nUXU[C6^P2Bq-8I-[iFi*6LjnKA\,(pPS2
%5u-nt^VAX$]"4pY3b..kBU>f7-9;@"\[r7bkgL`H)u"PEF0lXa2sG(4'cFS),NgUPdNO%1$oF$GL.Su(!^EG*nC:@FhP@1mP"Nbb
%+miKH->Ymr_%VQ^T!b`\7?3D\2c(3LOPaD`&_5/NdMY9tM2>E;i1LFR!0B$KGC@jb6-hJd(a2N0HB[^^%lkF<kMmOSJIL36k$^Nn
%hF>fM8]%eZ*'f9Ad7W>CKBUirC1i$Ai.RPYrcQp-!g7TnD>N-Gl<ZSRe5J`;g/27R/&Kn6KsWYE8Ss4"'m.3P&nLYpn#[orX7Ibh
%Uh&S_ldFf[jqYZKQo%a%(9%t.o7C4dY!4XV<XB&JMBQ-Z;4=?rbPO\NhPJn78k98oHJEc.SiIb=,/l^W&58DlD;8no)8B!0Z$Bm;
%UOWbfaaW'nMEK7?J!?sQJWkD`d0R,(J8)N<'5@`>]l%oLO^l-!#>5JcC<gh$]hW71")V^rR+0EoSgFJ\+eq7-J>^X<L2&$M6XeBf
%DTB)VI292`E$s]T2#H+,JLot&PEc4qfaegsq+\U;g?1a?)E&AA1V^te#T\ZJHHr6u8+Q"Y-6bL8=_W&!$FEN\BdcV[a;J[b]?<Si
%iFuQfDNP;iNSRD-'kj'BD.qR(jNd[pZi[6]_c=->7#\WJakfc\$nI=+9Z2PVM9q!O#_\^7X5@b<B\?Y#G_/g$H.8iJh(EB1#An.!
%S(,a=Su)NkZMcne(mI3,Q\*V&MPG6d\&4WT4pfY2=;+jBR[rkfOQl(.903H%Z:4V9e*09o.9Oh'",k`ue'f!f\/tKTK:pI'6(j]<
%1t""%>FGW\PFrA=3?`%.g$_*4[%UP;XDWiiC-jCS^C/cY5oLY"(:c69/!;HGf#!s`Er?5-M\d3e?-&HD>lUQ6R-e.@X5l*i]O4,8
%1o%msEeJ/JPtG.pKq*^+^\h;)@2bhSJs&J)&"G7G^C0&R)B#2+<&PN&1V[uT$I3Ab3"Z@#,:?,/PdF-fY#2J$mLt0B"k@N)JJ'Lt
%D\HP%1D'gs,?Jp&TD!%J63jFuPmnm\i`D;:s$bafFF)m><2=DY%;D@MHQ0N\O\<Sd0,"\WP*(JElQl/HPLcu_4lW&0#&H.JFb2#+
%Euc?orZ8h/WI;J1q64c:H%^qOb9)6.2oWK?Gkd&`0r$-M"RbDcVkeBVBQ-2_fcr)/L9!K"@6+h\pRY.-&&-sD;cjd4q9B+N8"qF:
%;0Tp;?g$\L488_K9I-odPfbiEOh\oTC=)9[RRmuY-,;]iTT`tSfg7aDHakK6+gQL-$-j1u/QD1NBgF_RY.+9,-4Ve4hDhf+C+59k
%Z=?V-+\926Q9VB2N'gi:"9KBY5ujK'0V`)S+%+:_W-H;^]4[auF4]<f!PUdYakJj+>k_lYo2&t*V>'N\=c95$22;s!S)C=.<`!b2
%N*hoSi/;,,nhW\G0Md+H'*f7j_KnD%1F[napC4I5#"EA1Z%fb2:2]pNBs\11>m?W[%>CFcmi)XV-I40P90o(pJ"?sn"Zj/=h9-mb
%H>-AAi&9<@:mTr^h&%3QCC#BN6RI.K[3mBFL14;Al0b@&;#ST!\NRh:kT+OD,-<L4_[<=c7>oYCCaY00eDP)sL*V4;H)&Gko*i2?
%)^XG!R1U@Gb9QAC\B$de(.sc4_DTV+9jG#_aG,@gBk/`)<)c!Mq"qNPab.`L-t,f]"anZIe/fpO#\e*h#7Q?fIF35X2EsOZ+_%DM
%ji]&_aZjR>cA&G-V5?PKA*7Q)J-MAQj1)-YS*%VmF&<_[M?0AW41amU]U3cEH`9SZ.<9^?*bJ7t\:HA"*[usuii-DQV/j8tJpL9A
%rn_nr;"goall'mGdLg203t^eg1"a%P.lN36C1"*\M)(7B`/&DUO&@;[&WfMD>(7srLi6$mVsan``L#Mo9Q@H'IQmX<"b^)6!pM8#
%38-?7%"O.T+XGnJMWaup.OgOjLe8`+9O+l]/&u2'j'&^`chtKHr'An)b]/8sC)XPj&5%Ul"r,^`SXRHtBc=62i8uOhAr)@U"]+/.
%hQN;`O*d>r?Z,3TBm55!&g5u'O#'EsZ83V@Q5DqJFfO4A=%)FlKpTYI5omVs]5X`m*eP!Ho2B'a`%fd.#5nO/FmunM6&)opMf1_1
%W/MKhGRXgql?#%\)BpZB";G;1/rka-iogEPaL(A)%!gg[],mR83=u]N#l>DnC\AXT$Q4RG>=0L(Qs9jRrH+ISiJ]?7r%<,29fle$
%W>O]k@kSP@%*JJNY)kU-'CcT=nme><Ap7"sX8tsINtL^e^@_W'8/_i=ObP9,\P5n]\>$>HikX?j]Ko.!V7gh2$L,dE0ZCicV_$#8
%JO9FI,[FH6)eh5<`/G*0RM'uU'OH^"0ga&tg@M,X4SRJ\H,OAc4IYM.5B0QE_VU'h@j&rPXrl6;j/8TV>D'*_QlcP@ouuCLcJ[[W
%m\?[9..h^)q,i7kC2q.:<T#OaLTr`+gK9-i_6L1Glu_$@A"0^l\hjF^m.YC(JtQp"@8N/mneD0Wei:*B_BH(9*UtiI)r,NF'f7-F
%UGTrs"E>k\`c3&BY8&#[7^]A30kkr;QT1Vbk9`@2\%<!aEBuZHDqp"U#QY0Z>Tp>n6sr<SDEcke9`ue^1[Ai%#5fQ"VIM37&$A2m
%@jnM.R4_0t`ja@.!.(soEtK>92<1i5)e5aljmGrS&@Xb;>SfSVK&DJT1Lc8*Wo0_<3:O5uRp$2[:U.n^3%J%X`40Z>Q7a/qL2^cV
%GmfqVqp_ELn6RaFi0lXcWh8o2$,e7eNOaTlJEoW)pJ2qdIgjb*W0,q43/Z%&(kU25.2Zrga3*Zgjg>gj@C,D"=F:INCip&3-*IB$
%]rSrRGZ/q&4B(/Vc>\G47%)r^LSuY^C<[VX,_92GQSY*8I%g)h'CL"I8m&F/4P)XDFG`1=-p!uUDnk:h'5*Pg16R41EfF'_AhS*o
%$[,Ggg(]#T39iR$Z4XqF#"8,J6A7JgNMdbCmNYJ2D>LTY%+Q>0f%T(e-Q+7k*:bI#)BkbuS,pZ0VDU-JTm$>2(jK;X7oV.ncbp+I
%D8W8Hn0O0f?*(ll@Kk_!dIHiibV\5!e++Z'22;V\]$.?$.#r6f^5aJE@@R<BK(3!EEE>:5pFKbo\f]*3P>c-`)&tcc=VCreM(7f[
%'rF7i]B@56\47k2=f.<]-f8CAEBOdPM-U?R:FOWU=U'XFjOXVE*#'=:9Fu<pfTQomf6.6)/D@'&bQ^*)MWn(bqN1"_@r0d1&;2c;
%,50EXWtA1E_'^;eKC1au!'==?HBME;i)m`REm`n()B3\4GN1*,>;Giif"umdTbIhP7X?)oXBg$koAe96)+PN+L4eIW1ggG5Q,#)E
%bjcF!nSL0CmC^aGUGY$bFdN?V,ocJuG3"8&,]%<qD)ggDr<g&6%R]6^#7eA]H69t)%?Gfier6*]2Q6oD04\PTEK7me4fth6F&D#8
%.DAs[>oY0*$ToKD:8l"K7Wn!P8?tgo_[L7,.OH%VM^Xu^DE%t:,4YpP,+M[GpV!YQ:6YNI+nr1E@GWm(RH2/u/sF7)INk12iqOod
%:F;!W1D?=#IlZ$/4>?P\R4JEb#1(8a^Hjmgg,bhMDZ-W5ZZu#U^+5aC_1mDd;Z(>f[*S5W]QZ%dZkQTEY3[l:W#@m"J&MLjeo:l$
%Vo.<M&EQE;CN^[%lmDo'*0j%J'7Q$(^bb*<-d[A3puV\/l-%7jepiQ9*u4blg)8dMkP`ad+"u5kpP0io:j(I=+X]FR^NNTnpq?R:
%5Pu?VU8,%5]B"D79@pH1$/7>tCljTA8p4fW3-0Lh`Zf;^\7tDO@NkKep7ucqW'Vl5$f%-E0:`He+psq[45/Wq97m5P`8_-\_I\Do
%j0(^\+bn(tSHiDEe[YkiHb7gM-:9j=]+80'Xt\+\4($Y(%>T10-<Ae7cd*p&3]/u]42L"bRIIQqMVZKk*u?=cKjc7E@gqHpdmolm
%I^h83G9b]X\^.sEqj]RID\jL)]\Br?)u!JS(LGqqb6e,j)u$nODlEI,R^(u"\%9-2jkhKJdbm?B2nMOdQZ"rk)XLLXDI^(J)jd*V
%U_.AcQ!@DN'C!,olcRE#hC#RK"/km=A$'saEdn-@f9>0JB/1ROb(W<"/L#3;=6%"G.i4L!9\5TMUL,`HZU:)j_'On'l739+_O>Op
%@W\t!JJR+%E;STAW3?qf.t#D:[*XE:GbD20`>l,EF!V52r9PX#28c)#N.p]t17cgE@j'R'Q/^=:&'g0E"L9uHoEGPf=_O8o!bu*\
%&Nf?nKjjpk=inB#fV^e6-lHrH@NRCD"pY*<Aoj&/_hH,Jl"O&aG4&.AkFtMJ$fTdMDKe2:2fIkkQ_BiD/*u%5T_TPTnff?L'Nfq4
%@;,Ya@0_MB""fQ.<krk5pj.r.:O^0Vo0$E:i+O39>;"bGmCSqdF*Vh*-^J5VHZSY!m`EcA\A8+*geL)jc>A7;BnDD%_XMkk<B*kg
%Qh8"j5oO`+&%'X/$s[dHW4V"3Xb]i/NCqc4E,EU+pk!\l*!aWsmq3I;hus&`i*JF'%^:Oi4s=r)^,Rj-hrU2lDOI7j$@q&)NZ(>s
%]%H$QZ+>`3%;!P;bh=pf>5F%M+Y4h?+/)B)278sbW&rk2YQJ2`B=KK($!br$AKtPKN]_ffF\Z@dSC5$3qst`:=Ht&bS[lLKjM%_(
%o?V14H;m@YTmu*X)7d.\HK#/<S6Tsb\9L0,)Z'a8Hm/laA0%"@Lc3OL+#RFO9gsr=^]B[:\Tj12mj@HuB&ZjS*TWHrS%*YUG?8p<
%ZeW5F2XADO\4DRt:UB%Op%;>PcH;G[pVg705.AgV$QR8O0"BR+6o>oJTfNV3N;"mHjiXj4GXdtA8ETEKi.,ob!Pu2hrg'41CiOu7
%kO;V^[D=Yg7oHEA.p/n3bric+:pZRKm$::S39"fRYf45p9-ke#C$jP3*8kH>G^IrO>0UTi21D^`ODdprAe0qUT&"Dc/T-sihSVcm
%E-",`a8*C&[m.'ES+&,jfc81Zqt=M]EIU6%\Up?@_8"@#1$mZXg:jQ77q<HqdmT'50-,eua"q,UVQlkKf6VOjkJBb6M.`n9k69o)
%-N"\$m?q-b0&I?,]7p-'"Y1i\:AS`r[_%7j>I8>oEX/G-7:uK`$TF$#ekkia.uK2,[;H'cKFVqET@Q_;Dq20gfE7V<I(9t:\&A0g
%M.JSB@B1THG1_hCF'"LkLeroU<WE+t,mU5\5cefSS@+ijk[5eOQD`i'oJq/qb8?,#9Zn=,rLe^]6REl+JgApH1RcIn`[`gJ'2tip
%d)1/OkTY'!+Om-fkG#2CaYNR[d\]Z*1>L?'FH+?5oLGH)lWASq$(T=.c]`[aF+7LX(KlZKIp!*>]:JiHm+`]Ba$o"4p-Rr^Y]HGK
%(3iL&?hgI:iLD)4/r-.sl"KLk+*gOBZD\2\'o@Y66lX6;C<dHmMg#NL5uM@Xjm-d;G=*/W6[g4H(Knc;ZfPZaL@0!3cqTPe[/?B%
%B0S`;H"=:4H'Z)bY7?;u$gCQ/"sk7m\/H</8:;4n2W4V:@sqn"cSieF'qX\?jaS<%U-h8-nB`)2SuhE6A1'm;m#IZ-2\`.b!N0@B
%b8[^B0D,,+/rt+(8OIu.[7_U`5J*827^ZHj)gO&"YM-[VH$amtMi%`g^I[B34AkM7Y&Qt'BW+fkk(57:%cRX>q6);O&+U6be<('K
%c/>MVnIRT&b?"3Fs*)FW\].cgkj2EllWVY-GVL1!dR(:`TLJVo*`-sqp!iXWmne8Z,KX_9itcBE8Q(;\3I=,c9"lt8#Bh\G6ZX0q
%,<[o^kU-/Ifpb-;NV/>'/LcFu5sDIh[fm"lpCM5<M*oEfh#9;Z!fCj4OOh)@oeK\.>`g,";_[m%GBB,+&2j'sB#SL,2/d,n\cqhM
%TfM-^EQI(f_ZL6!c,=9D[h2IA:9`,m^pTfhRj-`:nn1FI,^Z'LlF[t*:K'_E.W)4W'SYmdSYgTW77-Au4FS(DBt_co8<^)6^kt)$
%8GcCaO2CVnQuE)2hU2[9*;r;H/]r[oJseR#dTc6H@V$*W6PJt45%ML%<jZ8:\/D\B*3OFHS8&/XA/m"inNe&'5<'=G+bGb[K&o=\
%`NLfsTJAT)4/rrC^"=buJ%,69?^VVOc5L!hb!euo+[nH%/,mVnLq(A2F6EJ2Jl[sN,[.ri:Q>Y)/@rQ5D%,i(S76`Ih'!qbBlX1$
%!rcN@8+Qp,Phi>nD2>^I"kih)SH\3/7d`1NKpV*+2iLCRG)BgH!mW[A3VVgq(f(mV>1kgUV_@TKnnT/-bu1U`Dn+:?3"m@]`(?GT
%3NbEp%cI?Z(4Q1-M?eh!NgpK`2m2\AG:jYSr,`UD?OfB>#7<<$5''Uidush"LJrU#E#)NHV)LItk/0o4IQ3ie6J*6p[iJ@-bjXe#
%fQ;8RM9ZY1YkPTaP"*$mfZ)e&L1e5p5QY8o+;W]HGt(>/f`P.GdI+4_XD*UOU&gjL<4b2`0h0Zc?oQP*f83$1'J/p6(0*q4J*i=o
%(&@hKL,?bH>!\uc:.mV,@4LI=7&<rFLs1-M$]m6^@nO+fc+JP)PgPUj,iKefn8mUeNI:DFo#ttE=oqSG2LQ<.*@'lA6]$^X#O"-7
%8ELnI'"qUKUEO-.ef+t7=X#^EZI-tbQ);U^\cKo<![fiG"qXQTifd2=6[ml)?<uQ;L@K-pZ1Ec4+*SX`HA%M)EWXZM&$E!fLPR&o
%&sE0fUsL@$B$)9Ur9e)f%.)(2gX!!o]u!AMP#3Pn/CSiZlfRS17`nfnOWPHJB@p1)[<%Y#?KIc9^&f(jG_tP6ZN>p!6(EJFNV&*1
%3BW"k@mX<i:jJ13Bd2A+R&MVEC`t(!6)(O)R9MA:>`d9^2HI,QQ5tdTUUgUVIuJ*sYrQ@.WLTKlcXhUcr6=C?,n/-N?6bQjVdU,S
%D_pp"K;O1>6:Q@=H@VR?h./1!&f+$Uk`Dq:bBifHOmeYN2KD.8+UL\HL5qE9D`4hAO?5<Bl#@:cH/tf>%q4N*D<n>9at;OlWK)`J
%1nrWZ3Z4\`KY8p!j=*Ph)QMu?U!&R6*T:l!Lus,RW>k#=5.*peNX+ElZh&sRY4maP#m_[_:eDQ4/jS`Id,O319=WHh4XA/m[&#I=
%G9*NMnEZHs&Y<XgAotuEn)qhZkml5;iQOj`F,n`SnLu^r-PV[#`9hDhi%^g+Y6:Ia*d:,W/JS!C1$2?G)5S0hM4/Cg4-mjBo=(>r
%2kCb(%FH<-)L,0;a3AbFCEHqh4*j:mdUpYF!L`(qI:bUpnOm.7/sY8fk:)IimuRZ2/pW?sn!C7t:kf"]WcKUXJ*iBq1fVac3;[\*
%na\(/hSt=:O=5;SX2;9@ktqG5f.mbr3"Ea&;%`>CLcPlcLs2"O\"6_=Z$.F@0J"([_TZh(E1]s,K+FC_`s$!8-cWF?F08ri:^oKs
%J`F\2ECu!FeMbF66N)n'XFb3rPJY0m)8p7UI7cDAP[bbI*Z9T\1VrZ$Y\bqm=gI49pbJDJk+=+qOK[gZ(.Z?E_4XO865MV$]:GZ"
%*iI(9f%D`f%62CIR%f1Y"L[<-M@(+]>FBXC$Tq+FD60fVZKHLp,%@`>#C89Gj%.u8Q*q<?E8p.tn9M$o@g?$3O^D+P_WS;jLtEZh
%aFL&nogGU#a<N;8dh,*)r_aiHmZ8?:F=&4Od$FhV"!'5WK1_YV?%24'gCB(AD)V[[0o=dYnA3#"nht_4d3r43AnoW_qb*C<4g+qd
%s7X1/`Nn;joA+Bb6bXC`*\u.Ani1LA0X/A&1X4QJc(TOS)"P2+A%RNlpCgn)$AGk</n\d-<Fo4u`XR&7f*Y*S'j@<@I)4@(cc\V"
%`[_\rla]aI:(g0=BW.9ge'\`nRnQ.o;HVjgq'WO:hI[eeP:-'\q'XLF&"nB@XQ[tN+8G^JY7]Q"R86be@SMe+?D-M$#ILOO7Y<>e
%c1%(!R7?Cn%$5q3oa<GLluC&PrG9?AheuaIYtq'7R.O\q^9U0]U&!p8'KStVggdqe=gbKUodGOW+3D9GI/NScrq-p8A:7F!L<"oj
%Ta?-R5mQSjlg>t?b/Mg7p"#i>/[fe/BDI=hK0u4J7]\d;XO9jhn-O(rH1kVFr6oTanjgsq,O8Jr,Zjg?cbKGRbMP.s:X*s:FnB9K
%'hHa8<p.%K[[NIZ,_p&14D5;],(<H51o9hV;bKPa'M-X%<Yqo2-ftgQ"]Eg?&$(CYY"'qRD$?[2S4!:r9nU0o#/T!/=2%[c-@,%O
%#ZEKs+/%iER+`YS#OUH$Mqc-g,'%="c#s^9"]BHMeL+Rt'QXbB#,qpTLZcf,f7OXk[f2r>PSSGkT/WE-nEcP]%go,rF/sX?PY8&T
%+?WRr3G8t-kd'esGrW[q\T47J7=QXeD=kqKBuHOWU-<>#o3o&0an@-9\#hmrI3hs*L786m,mA=f-on5e;!0`\omnnRZoWHdgWXNG
%j*c]h=rp-qea4hHM2V'U]%Z>2XjW"cLIHXRI-7iAXN>Njs4c*E"@Gm42pHUMRR?gG\)'5rhW]*R>P(q!Rm#mF&jC&k6XiF8/jCt]
%_=cqR:rGeL'OC+ua]<,/9OUd>2;S)0>1hn^Peu2+TT&f0Rf\"\"k$\E[gpY9%,.AU+sR',e3.IioIX`$F<,9#OoEO@6q#/1h1ITd
%*G:A@HdF*aJ;q)cAeT^Yki4pMlr+kA/T)g*/TRVS8D$@jVJ&)u4`VbTH/.Y*eSR"Tb3(26mic^mc&_fU,<&/VaMgBGI/"JfGsd^`
%07o;W*[<UWL0aAo+eA9':q0lA$AF.`*kle_.<*p-BNsP0H$0=#(9WkRVm&U-kQlSb[9%oQ[L<mef-tgq(:hi=WeF0M7k))fg[!B7
%2`T0/h)F*SV3.6AJJ<NMFU<b8V3&4/VElHHZ914#0alT)>SK`VeQ*Kh8gia0('RUbSI_cT9s-u8]PRgurQ*5XK0D/5ZRO6Hc^c\>
%&?QTY2;.Ul67g<t,8dbkS]!sJ'O>SKa]9k0SAV'eC;TT$\['?M+G@5+5Hc0>\`qEf7rC3g;Y7NM,o35?638O(#"b%jH+8W>1tP<'
%oOj?;7\;f.7a)/ilD%rQ+'.]rCl^o-gC!TLOdhgAI:D8L;]h^YD*B-e=rel'ZK[C&=I+_40P42(8R/VmdFCFQCm@K63@sGOk<#<$
%APJcnqVSaD]RJr(VE(7g\_2'pdH<][:l*\Y&N8=L7m\cMZQg<nki=!Ag8!kHVba`n,@h.>nu1fuB@XjGf:s&:[KaEkjQ<=)Y8Xrs
%G1]8n&';>:KQ?gZf-#st03^jRHH%uH\t7G"=6Q+!2[;EUj$UJ:I/a[bV[=[2QMb`up1HlEDQm's&+%d^$;NG1WRLVFE,1!m&EtG,
%B"LA3s*)*`5Z)J6b)&=2ks4;FL?&6U.G)anmE:fs"p=':TMc3F#F+]rTMdaK8IlA4LU44V;%!B#3etm-?ThfAgfb8NX&XZO;)XGr
%L9j.[Ng%![_"0RL)o+^OE]N;G7s,>arc:ZlK.ACr;.Bgq:dbL[)@aDoYgDrHG&hE?/Y1#FSG+#R5F@%aHuX\MP-oVc09V#ZT;;P#
%P0Vna.O1IG'7r8talT&%*];NqX>a,-k;d?fZq-j/\RP+LJ;f/'8rm,[\QiQ-7g=nUK;H@FOj3)=%skQ0K;%2O%"[DNio86.\M1PF
%?urlq?B6'Fp^6N8JI3SG8*J2\j0'\o6A>bBSJ->A$ir0Z>d!SJ6W_SKf477q5&bRVg4MqG6M#IM$ApI8L%.&2FPKP)T?@uKF(e#I
%JC:)NBeD/_6n,6ner\U=18'ED_G:>&*9e>8RjXiO(&iMmHA2?MX*>6S!g":J#ac,LWW>5d*)=Qre_n=+EmB%BbHQLB<-0\]H(L''
%W;\b(!7MIcU!'s4eGqQ"$(ZPKiH)QH?On.cdb/<s4h+nMd".a:^dBgJ'@%baNV/MW&7Z>:QRi",d$`kX*'1IHRci$X!i4">FGU`7
%CY[5cbOn-p%TbXKF1K/;%\;!LJVNXubll7@XoTQFZ0m1>QdHgDL+ih@f+Yai<q3_*iNJ%1#%4bY(Y2LN*87`ca5bV^A[bhO#[EW.
%3Y3tlT?@uKHK^`X]]>227>a-]Nnej&,=SW^3C8Ne-TI8>0JeC*jU-2pE5>Scp[h>/_('Gk^]OZS`S*#$E:==-d673:n@;f_5DLik
%BS)TgR3Tf"!60TU_:)7qC60UcNu6LV-hIa)K(-<UiNJ$69b7%co*'Fij4&#bJYjH<q^<]9iDi\<JFF./QZMS@>kE:7"e\\Tqj0s>
%,gh1K@d7K"b*Gfe:c;a'3Fsh<!gC/@j;E'g$U^C$Wu4H#^=##YK5*?6(pDpic[af=HnJLq?WIju6mT'JN"5]r(dgWE];.ufK+8)h
%7L"m!")nk%ks=X?&%I[nQKh=8"#E,/MP\\>kVI21a;ps]Z_SUR4#i[f5%kRSBbT$XauU9\II1t-F*2MI\`11mbr5MjY,e(DYC_JC
%ES&`2f(6;dp1*DB<2i-Q$Q3TfDbsk@D.$,7[&Qium:nF!'jXWeKf2EXeA_N;d)JLk%%u@6F3F&>g_=CHGcXJXh3\/TBb"DsH0%!0
%H*QL6f:cu0hWYo[\/*U\0[I7`J0^UcLn!u!LIEL'=%2F2f[P[rZ#dT_R6#j(Q>Hhs\>dgFn6FT+HB>u;VEY6=3#6tlT,6f(g)#$]
%Yh7T-G'Psu!)8s97ARE]+RTT4*hGutfIC@&_lc9CM3_R-gc/4m2i(NmLJHW)83]5'VUusN0G*X$(TYuTTM.=u8ZtBO/;o>JreE\)
%lN^=DRu$^So<YLM.Uo$frf+'o!n_k/%(<sWGM]GdP7TYb/J$1(.CKIA*(ArQYdAL*fgXsbHQ_]*+qLbf],njVgdS"[Sd(*^4,IGW
%Rts1qO9N*aa?,&tibCmgEKec?n6GMEHB?"#JC'qDMA&k7Oi5bRbNFDtd/D1kPO#S]4S-t2@)Z%VqZM*,7/E_\n@NY!!>)a+"?LB9
%Nd>e"9(>#7i']QD_0:2ZJ*EheZDUF5$@V:#[^h+%MaoomQ`Sgh@\:OjT0b#Bgj00M3ndh0gDgE;Q]QZ@/krT6a?`4Y&2q<M(J(jW
%$=9m0"8fbts"`.^DTNB%^F9Y#m>U%,Th/QPR204X(4b.e->9QGfVd(V9Y-o>[UJl)[_=lR=S";%60eqi])(*j0ZE]-"VHhh%jp=k
%YmEtKk>G^#0oDl81_RH_+gq[_YdqE#os5^US\,8"&JkHsqHV0RWtm9c=9UOZX.PpjRp;"PGh\N,rLbUSVBK'(dq>lFV;)KqO&WLb
%?$.\bqZcaH8$WG9Q5l83iSk<;Stn.hR_f*I*:89h'.9N"+KM^&+nN3I$$G69L2@/5JD$9/N"g1^o,u`1#h:hsk&C7-(?5>l++O&c
%dRDl6^UmO9kBg<T>>f7c=cZ4Ma]H*V#WUH"/;1LTo[9I.."g!D.<:[HEf@>!b/u5,DXuF,o"l,1Msa)&1c*nr0R34DR.NQ_1bblA
%B9W630g,Y]p9>@WX,E)(<>R`BaFq9]A.'aHO<i\*SAu!R`#._r*>ZTW^!:I.8('=7&NWSB=*24@AE;YE:.BTI:.DPplaEdf:Lbs?
%+KFHq?FV8JVqE.,aTlqSDC^ke1n&nnZCl00HQtNNkTU27CF7A`"G#rNhd(:lg^S*!pp523@3R@0OeoZp1.OL%0+V2RBj24uY0f?O
%9uOpX+aJ1]n=<fP]c<K)d!'A5OtDJKV8JIV1V(5q,pSN'p>!#?1_pB(SQp\.ma;N-[^-B"m(KD7k%tCZhkcXqQA#6BM'_khM,dR;
%>#`3l4FZ`XJe%)]B+0mo?)Lho/t/NM66rmG(eteWpe9e/F3i+d;i'Z+Jt=Z9<9ZG]mfKOI(%lV8$d,/e8o_!)13!"uCjic&$ieIe
%[js_9RZ)t\#rT^I2OKSO"PF?ooG]2KYA"@!-)TRY;/Y`6WaK>#F>Cc"[*e:a&a,YX%XhJr`M;Yp2G6"3HD8c-Km*!n8Q52?a];Q?
%^9r0!?'b7?K?jZqp$/?p#&6Ct?Vq-C<shn-#;%QCZ#u8a=8qKZ7:-W`>q)a%S6Qs>1).7U@.4*8T-Zj'.B#FQ!sUU_6\_'X6.J0?
%lc>DZ?SLB+J^HG+'Kh4_QM+g^;$le6n/1P!L#<dtqT)X3Qo-nNf>]&@O+DU!$%.7o(O/-`$._2,-Mfptci\hYn[[*XY'=O-eLp0:
%IDMZB2d1mhT$R*$phXPA:-$K:6OG"f[oWmW3#S!F%S_GDV$SJ!Z3_!/_9nZ@Q;a!,6V@GBMN(r_%H#(t$^r5MS[VmC\Vj-qIrF43
%qC#;aan97GpdQI.$o>2,3m1-b$VrsT0iCCa'kbW0M@DoPYkD.b/oFiP,orO:Uak@uU)i>=*jebCX[-J_nK^/sGf1[%nEqDu9j^S_
%@%+5D3gapAGB@.\?_uE#"?_RRBcZV`LBH"F1P"`9UqIXdHTfk*$CJ'MEYuof*bE.])AWSsWOPjVl_XG9Go4'IZGG:;gt"IIZ`a5V
%AW-JpK!n#5mNp.PK-isNHest*4YS!gj;'8e)Jkk&mtsW1,M_e;FL2nG>n@b.+#EC.l0=0SnX4.,(/Vjlg@cfc9W@lkRM3FV7i@W1
%LY;2WTm'*"BT?URcc8,h%KOG6jV?1mgF(<WZWG2*1gH#iZLHH\m04@qp*lHX(j6jE>_I><e)$$;\<57V9dg+QD+!k_D'!$d#:"Y:
%OVPpNJ5VI2b1h`\7n/pfB7tO5<VbrV?Sfl^EO>6<\t"p4M=+0lA<,Ed3:7bW5:EZ[Ys4X9LXr--:73*40jR(HYVHE$%?`8I<HS!`
%4\q,.BcbC(I5tu!7mCMG.\O6@(=9AB_A.5`/rgJ47j;tdd>2o\qK'LCBLupZG&a%%)W?iK7p5Jg6a%e^%]MG4q961C9)ok4\r;uc
%:C4-:3D*OeJQW^u&>P._#Zd-5ZFtWb07tW54#0WbN!,FQ%:2&F0IN.Tfk*=?:EEke3ZTHV]uVrnS8SV&3-2I6/\77&QL]VQ9j??>
%WJQ(RKMiGo9O[\bH4)E.OOflYpH]<ChIo+384o[#3Ms=5aBkeE%rHJV`jSOSAc._4nF_Gq?6O[h4LLt.@Y3X*e+O!V9o\j)2fK?a
%:H'6=.:fmC@[_t[+ecph=q1X++egV)-OJ2g7/Hgk-O1KD/=hSLBbi:`4SM^upa_iB7j3>+5pKDkXm+/f^N(tbR+sq#Pm*Q-p^5J'
%)J-UZqY%Vr9c:L`/^?<C^g(@oV-;Ui]Hl6U8O8Yd%/`,BBKPoIW&OfD,tjV47k>njmORE.pN&a*2BR2e[0REP("[\J?P\cq)&gCb
%]#9TNaI"H]IBfn(+;aOhX!ifnpF"\L54[m>L1V]m,`k[FOpFe&+$13?hIo,D59X_F=V%lJn7b7T+>iUVL`^\4r_l/<:&=#M_rLKt
%<_,M?cbjkb=.Y0!-(&SaSP7oNVAi[)p_&j-4kAKoVAn;`f,!i_^hs>33Su$bgQO#Y8\f3Y#aF2UC\:N)qk$W*",GQBY+;:c%uqLp
%Ue00G^]<jq&+Cq`j#FWED;!]4%IG[#B:Wm6R#(q5*.1>o^!H@a%t$$Ks7#oEje6@NR\&)[ls5j2B!UVBEXa,Jc#:6W'F3L&qUSl1
%kR2/o/"DS6.#Uk]k7Hmk%YabJk8`/_W(D1f_GShm>1s$g(D@CWOfk1GR4M;q<MN!q%MpK:`=a^d82nlM8L=TfKetCt>b-Wh41rYR
%g!10GFr6nE%ltSr,9"T!p0]V&+[B<Q8f=$ro!k\FZ6s'ekDZ;#^7345BGIg<kpC7?]BU(e3%t2;7.Wp_G/2*dK%IZ&H&Ups""kV@
%IE`MgJD:5C-bk5q*C1!l2au4]TL\cCLu5@$qb3)\(ps:r=nk/i>,6VdpC1$ujR`>h#4:/5.fN<MD2t`Rp7!gN$VDL\CpAPS]'CR"
%QpdEdi2\rs*BSAq7?gg3g#BrRK?RKdkY67^3#sWLHuB5V[q3qGU/L9sTe1-dm<<9k>(k\&G0Vstp59o3FQ')aMB/b"^mIedf.+QV
%rAfT"4:[eAD\1eVn/WHla!?^r,"O`Fg.B?j!:Z&k%8;cLr#EoiG?f`+L<gZ8B/3=?cm[h47?RYr;NLm*gRJPp\ONP]fRV=EoX3Ht
%HkMPs5&BYCa?-?2>';+-&0n4j,b%/r'L[#T+]XLJM_@:t6oiBC74di2'2*os$8Q15MZf,-moWs44k!2;GdD%t=aS^Eq]];6i,H#8
%DtY`fPAl[Ih4D;l!57AXcaY5[\*/\jN(r]4%tO==4:I5M'O.f$b5!_?[:`ct*[)$'XRjQXOn&G;Ja^jTrMJpa?NJYq25'PYm+EaT
%Ui,nmF3_=PFKhg<pTNVMosg^9]VQVCN"kcKes$85'/EU#b(1r+eXuru9K?JnE8d.J!tT&n!2V7r#G=O?P`,]@35'3A*.VRMV55sX
%!5MN`)ms2rpuKLqKn!-$%Qo+IG"F[o.AEbi8NH8PV;6Di3<1qR758in:fk`"Znpn'.)h79[.d;46@+tVm4IS\3CsJ<:"ltM-8j\D
%%R-@VCEfO"4iaGu!bXZ8,(UiG,TV+tQV:S(%Qjek*7`It#<l]SFT%YKE9-jmMtW.#I5dA`1Z]T=q7QU!-7tj6f7&pQ8c)DLetDXn
%rWD?^(H6'e!0&t8<6g&Ms"bg8[H/C(DLWF$.#jGn2J@)diS\K##H<h*@"ai1"(4/D@*+RP!,>9-Xd#%PcedQD<QY@&6,8dk;@Yh%
%a?Wa2;@_?Lp;F\C*2).A,K\^+PQROm!si1q%Qs$0Ze^cS5g;,qQ#qO4h#!mf%Lti'L(2l*hF[UGUk:UBcp$]E^H$"8AC/39_bouj
%S?s[O.QFl&S-*7tgf:eQ"61<TqN>n"1u3ss`?j^*_"MBeIU`TLF)hb.#46VGcnZNTduLslB$__h2#uH!-QRGBW$^"Sl(eDHFW2HB
%c_LZ)[\O"e!aH4.dK)H2V/YRI8ics[iiSVj!)a#>8NL6,67cP>3^=jd$`:'u#Ad22N,'a\^^dhm84h51@*r`qDG<1-a_Xn;Uk<Q,
%PMo48:*]/!ZuXQM7W:0Ni$cR68c.nD[*QlV\='_]V+D%N%u88r12.-Sb&MAPGmC3/A1mR]ndalf$jl#-3q'j#s,[[1pIjAZOmgPn
%rO.[=B-eV3@AEO^Gjsuf/KG`^Uo,5T?`Z#ATr;FUEJWfsetQ"ZLm:8gg[uTT86C$I#mn:S!<-(#Yq3g<hfdG=?scS3E/DSsbq!95
%l8*'li;0^Rp:[&in\Nt\+n55NIRZeZH.Por>N=8c5!%(VP4=O'Ec_M']_C*;&:3Bek<[;</KB!un]lp\cia;]'['JaA6g+hiB;@a
%"!A:cPS/U7_FnW(e7AV-a&uCJ1KC_CdI@\HNZYk$_#`lB)8M,N\ZVHkKt*holcJ\>Lf"UPb&)q%fhncJPA*KY(BD54ct)\#!X(5@
%7oYmFKE5X5-qB't^(=F$8=!O36S]a0no$oL[jJs^-3ZF7l*cTHS#qXRB`hTj<KgJ:J+tuG'E$IUE^BtfK-a.mh*+[_69EW6N8L;J
%QCI'aNY*,c7']3I<h*`sY9:SQn>9dg,p;2g"L=a(.am$KAn9;@VK]gV,823]AG`uL-pn$^a"h4d?IBrC+I17T\$"&q"M0kk25\?Y
%qTu-VJCa'Lr=ZmRCbT%C.&=3#E4kkRg/mjfLn.u$0Jp.MB;5Flhg"(KV,g`j''#@*TFE+'Bs<M@Tg1pI`'sn/<p3:1FK0;n.%S;3
%?n"o2$@nIV%!mJuW"BbVS3$_`2/GO,(XQ[mQ?,=hi\;E8A&+_[cM![9^`[h5(rO%;goqC2Y@bi*n`]IKTW-_0Ja84(Mg]GVg@S2Y
%@LE&9Zg@qpF?;+j0nqd;0sGGt*+jc2%4R]M=[XbgN_=p7?SMXc%DB8lF''3RGOdBV"UUg:LI96J%c@&?&pX+I[]U2>Y32$D]).`G
%@-4]F+d<?/n!)R+a>Upn)6I:=QRBS\(gsQLS^$Yoo)o#Mn/VN9q..%>/'f"Pj`$Lia%\c9b:G!^E9Lg4!iI4[%[1XUbKqQSAE7Y#
%qS^@'8[Ue68>BjW1O+WMfSd`^%bCG:9#Q+,E/_*Nl<lWOA+GZcEb-AH3D;la0V]B.#n>UDmSWDY+6;BomctPsX71A,'6udVRDJ2+
%lnlmuRI!^t?CZJ?=d9JRDogC3%%qq&FcZ8YW%^S&Nr+bMAl%/,?eWd%ZrqfdD-=4&T2p#a`^54Tr7nH9X-OiB*us=/!Y3bA3$5HO
%piu)R(?Zo:2FTdPV"pZ4EMI)2#usr(A(ZgWUWIU9-9`F435_;]B/F9Df'*_9@j`'^R%52uqGte7D'Vi^R]DPI$6D.k=K<?RLu]u3
%YBI39mp(@nWD9o0j35u"1%4C(GOP?(J!)VM7HaJN4O(Xr=oPe`N/ES6H7cl,HG5bZH=:cf_mQ"=_A+?T[`c@&GMbu@m$S[;E0L&_
%B%hX^B+n@8DpODbN_\`fE&e3U5n3lCmp,`\7,pf1U^$5(\qEB3"$,?&CU<.'g3g8eUhN\I(%PJDj$k)j<?m?":?;7G*q[Ni1tOYY
%m@_37o\\Ol%juPur.u<9;kn^DJ/NQQTAFrKE"[42KZB'W:d\^"o-K(fOGo+Oq]`Dtr?C=Qs"ZT.s2c6Pe,#k@%u`'uE?h7<KRk[c
%,g`i.#FeCZBWDM1aK#\\EmQQ],FupKk(@qDVmo0<5YUVaLAg7e\bTVK-Ut%J.+0#I/!l$Q="fMoPnsT\kP3+s[+q6Wr@fBujD_`U
%%g0,:$p$+56?c*cW[BZ;WujgPWukqoQu8-KdRmGCKfk[j\<4gHeOUmL'=iRU(-9':Y&3'?I(&3>#3`^&khhARrmk@0gq5'3bnDn3
%X!;4QPnsV"BQfj-a&Y,m5]q3iRhmD>.1;ccTM]9@g'KQ+Wt/f=<u6h.55cjM'MXLCV,7'E+#iIeV&EqOj!`)hnn^7TnoQtIDb']l
%B`AFbQW%\55'R1116Ua!II'Pd6k4pa$%mWie_YE>L?ep!*ld(h,ZN@5E;*`*PK?&aOF)jYB8W"N2VPc-XA]tsb7C_C?J.:dRN>.d
%qm9,Lo`pa>aOW1l6,/Ioo4UXifH^+sN4=^T)OMeg+'kM,>V2kiTWoS"7l)a8ELh%t@Sg.iPO4lF;PH\1`b7.\aYNo;cqK_HehdjP
%R?et8/P;'=7l:*[1o(ShgB<$r$Kd!cVV/3X%;Pha#Bjqb3A@4D/SK930Ht]bNRjhS?Z%8ETZnfX*Sni<ge\uO7&"_Le:'\L1*+h!
%2qpNRoV8BlL-Ef.7JBgJUMseV?K-4K>P7&Yj<X?tHbAJZH']U:FHj60lGrg.I/'oH59kd;PIJZ#G$-tR@UJhdA'7l=mao&0i#&QN
%PWB[=[I)YYMJQ-?"h5p"cIq-IOY!eS&87o@a?qO+.p?`58h[I$Bg.DLY6LurMP[&,d9@is6&rGlEb=fO)+t,UXOX'RNCT=lW^gVd
%MWJjF4mtSSo$CPWHb*FHhXGbfaik"bX2W+=E$8?kR?S0<jbW?lka*u;4=O)+_>TqfPMVraR+D`oBoLhR(:(i+$jlTjU#j?i?%sCW
%IXB@\4t:?9$kJ7;dK!`o69!q,OGVl,LMLor#Bbh?3TVZR+>F*>'H^tT-`,n(BKRfP>=N[+rMZWpTg:bQ`DY+[kY3<hcE;Yh(!C#u
%l-Ta<a[@I:+.We./<=THE4o54k$6N,%'hS.ZJal_UF%4iZ,_+1UF%2c1c#.3:"NopgQ-$\WlYP"6`lQPaZs?u>QE<OCGNE)#\mp_
%9a1fq22,1sJXL&I_GZSK.;'pZX-sI&79r>@^0-]*/bX>`F%?a+,\[9[Bs#Hi%d9]<14\6rWijFYoLZIV>*4B4g6eV7aFHc)UA/>$
%A>"osXP?B><Fk#nDPKBg1,)6e2fD]ZJLgs[YIB[R#g52<?'>k8lZ01D1(MKUAT7oB#-cUR,U5;$b#Xj>KLA=>>Y6bbDABV9>*9I8
%.9fka!'_%A0<-4K<YGm#1=-aR,cH5\86'2^PfV@`\fr@a-%Mr(<+H-q%[r*rMN#>2qH9.q*1$K%ip:[a@,aPj<Q<I2KPkJ:BS_HN
%OQ<VTYc7Dp(SP3OA_a6hJEHh/b8Jc%4+fgX,gX)SOqaBs0Q(2g^J%6X$.hlNFX2:e\`<A+),D,#i*PO5n>esGp!88(BsXJL%1n_i
%^'d%tpII]ep$qn?N2MV'Ru29qck!ICl>#[m6CX$r*<:*i[Pc\N,%h>Vf.Uc!eQC\WH$aIHX4SDEH!k(9>6"nr+g?clr#$6gBu8hL
%b#\ecXkLWpCJ`J;[YViKN6iBD_P%>&$=u1pJSZSO/uO*IJF1L<IOSre2[8n4dGp(tn?UN9SA;^#;V=8g3*]5Sb(,"O_0$fJBfce?
%:_W6>q\g<2IrMR;JXm'?IsM!5b#F?i=*=EhAE$`>gP*_"/6sH4oS4Ia&4]+oB4Rc_>g?KQ5n/6MYnQ?]N+0a\.%NEW:-SgIlmUXF
%S.eDm_%.kT0'B<I:kKSJ`rTp?NT5fT%gKPQ^1Z8_K['YmKP4ce$jN%s[V@q^6qCpM#mr'-@quVn/J=3_hXnl<\I!X;\X`7lUDh<b
%TgQPW;'pFe'j%5YLBSoBJ$@6!D*/u>&epPQ3U]-]QY]^6&)B>DW@LSLa/F)dJisu[J@rR;A'!AE68\a-Rk-2TSCNuJQdU5J>)=*;
%Ql]qWpOGp2A[JuN;M:m-aH>iZ@@^(EkIf?Df"tYSE'Pf6AQ4;JanIKO4LBO@:G>+1a9e1?@<+Bk/Yg0=LeYe\&hL,V#8p@-pTU&Z
%nkRh=p_HZH/nu`"F5CZ]"DEO:J09WXQO7V\(q&;'*4l=HS`*FiZHYMs?ue9jX[_si>Fs&K3kn=R;$"si&"A51kN#BNB0%8Ak_JZ;
%S?l7Ki`EkgoMP;NMiKNooa0[^$ePd[Pd3Fs_e2*">Y\GFR)#0qEu^6`#WKZn@Oh=,%DOgkB$^#S);bq_EB.MkcA%"YOXkPoC;`VL
%E0(/s47D+6m4_W"P#5,'6KVLD0Y*_F*hrqr<UMIeBQ?=\;6F7sKS.?.Cp,?17%uZr$&B3k@%A2^_lV,]>/;Tk(/5D*qZeF67USW[
%$\#U\_^otK$!uq>8"Yg!ol00#LSbL&Dn9L%E1Ilb9/l3Cp-lYfG-`pq7@sDZll,`[N+k+dY_>Y&A&=R-FKidI\cQ+*HL8?"I^@.[
%,iNM4UPM#;EKTE,:3j]^eEY#b2us!cr5_<spV8M-_QD#Q5!B\SAP@[3PD*KIFYG*kUd_(G?"BsA+$rt[%&qBc(9rmV04L4.%B3)/
%m*aXbH;BkQd[@V&<N(g\KfTAF&q)a0'((,*;`\g%9gFXWhfFo3@$H%D7#Q5cS6.mBgI[lJ4*;4=]IoqD0gr<W/rO7OhMZ't!f(`[
%(_0G+L_j]&m#eV'hEbGd4/bca'b3*.[!4)@P%9EPijH9UK^lknq1;j%8#&Jhefpe`$b0,9q0(aI??oVJX%!Zrb%+NRO.!0QSkBau
%:I,u]GRuR7$i#pq8m'08LkVp@N6[N>VQ5CZ>(T>U8NGg+[iZ0Sf%_*uO?!t//c/X`S"L"3'D:E?Kfqqp_X;JKAM"9lKrroUdT/+`
%9(a<FGTjEZ'a[gq6=/b*A0l0WBQoiNChh<H]J?P#*PBtFm&(%MOtJ$YNFQ.nA_G[%>6QY?<T&ae#[E?7!gcK\&sjoG&m)+KM(>PF
%ja*.N,L"d<$k`%WnNk_=LXX)*<T6EihX8E@4Gj>%KMCGop<KcQLXfPZ/M=D)ie+m8HubSeT-I'eO%F1$+%t635$'fl5,E:alVZY4
%EA46U&g-1/ie+<Y%bFih^Pd&Q)LL9"V/Un=-LcTp"%Tku^kn@=@Z1S?co-Fcng<kJ@1%CB1^2b![)mYG@$C=il]h..a\f&CH$b1X
%#_t3)aK)t-XQ0goc8B?^"4Q#SnJ)[^HX[Zl78X0tE[m$k,m"=R`4YGUTreA4ng\Ut5m4>[&qS6%<f,!4<f*m-MStcZNcJtLs#^7A
%?#d7?&\*E[XctMF6O!U(EYc,7JrQ`3W?LQZY!iqJ3JcP1(6iK3^j&:D<:1R[V."=o:(;<Ie21EPLKUu'eA&E4f^Jk8_lqME5Q/('
%hu@Vd[^l:kH,pEkK!1m6C4H_(EVEa?A%<0#YH)++CB]Y2?#KQo)?Au5J9$A`:E#"T7EcGf9.VCuCZ[U5QS$2X4W_5BnJRob7si:m
%r@6l$J(bd/_MVPf.o1os7!$u03C@S5'Ll'/_/9\Va3/<Sn3::*-h4L]Gab5uH!^th_pRmcHYB7Ebr.ch\e3J!QU6'E\mL"S6MnPf
%NSp+H)'(*pZGf)VfEJg'1HGLk6?^!YppZaYaZ&rM3asB\`=5Uj!6-%j2Bj`V/J75V^?qg4L[PR9[$9C\H]OA8fjYL;N:*>p&XQ._
%\&I8teH3aQ[%n+3N5qKq*<:13(qtK)^R@!B*C1l/Qa?SmZC'YtXtPNCFo8kRlBu<te[8McHN<DNF$7?VQWc?(R(4e&3]i]MPKpT_
%)oB.JgQ>O,koCtp(a:0j%6.G0%G6bW&(!TQ^L4;eS?MXPPmORA54gYZ<Q*83*X3aL%?6a+m2YM;6tM`rOGACT<#@FO>r9pFN(_?u
%UbOu%TZPE:Y,8gZWP<^qTL713&(:`[T<F"6X[K7KD(>IoXe5`m'@@GU?6^bOT$?UVMPD7!3t+826D>b[1`p2iN&c]Jnu!,j,P79(
%ad&H1J<4/id'6)>^^&9FK?bY9g/O,)Nq"6+-4uW&j'=_C,#:3Yp;YGrO`rkO"+<O$gm@p'ng*N/i/^,\Ks,Z-6V#c>%)e21[RHEa
%>>Glu4/p$9O4^u4G-!2;G$5`7T,,6E+>\N[#MCeC,KX?63I[q!/gY<pV;a7/IB)Wkn8o5<b%!F";Bl>LNe@JmpDWM;^BDa-[)\i-
%"qgM"^c3A38mbec$,+)J?BdPtp/Y4jj<5[^H$%tV,mVO:+a?k)]N\X]&T(.#0iCFN(t!A!pcnh"d;h:DC#?-@1pibr_`:db[%*1X
%g4-/hj'AshZ;P`PiXmc2C49:Q8&b:UoGJq;TR46#Et1$g's$sHCIi+E0_HD2)saBa4^J],Sg3$G08e2!FGm5?<V%&ro2;PJ&g%Nl
%To,:[j*P;R/S\&LR[BUGo8#(dcrtm#lt[!X+QIq&Eo[fMkgn7(=p+`%7;FnH<KX8fC,lpt3.#=R3=Xs[8l9=5PQkXXVWPBpe=s?5
%!6tf3c.$bj]_=rO>-sfuoW?A1bu'C6@+>ZC5HONXAZ6,ib<H[-^]0Ain%\hE+"okX^Rotc^F-n%s7ODsrUdjRq=2dl5Q1/jYQ"1G
%+91Z)]-%(D(NB995NtsfJ,89)^]*UbIei6rYQ*cMr\#[E8RD2bYCHG]J,/&)ruY9qNBR~>
%AI9_PrivateDataEnd
